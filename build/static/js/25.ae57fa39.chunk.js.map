{"version":3,"sources":["views/faqs/faqs.js","reusable/DocsLink.js"],"names":["FAQs","history","useHistory","useState","visible","setVisible","small","setSmall","currentPage","accordion","setAccordion","data","setData","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","pageStatus","setPageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","question_ar","question_en","answer_ar","answer_en","faqData","setfaqData","faqUpdate","setfaqUpdate","errorMessageUpdate","setErrorMessageUpdate","succesAddUpdate","setSuccessAddUpdate","itemUpdate","setItemUpdate","loadingUpdate","setLoadingUpdate","handleDataUpdate","e","target","name","value","handleData","itemToDelete","setItemToDelete","handleDelete","a","document","getElementById","style","opacity","fetch","global","apiUrl","id","method","headers","Authorization","Accept","responsee","json","response","success","payload","console","log","handleSubmitUpdate","preventDefault","FormData","append","body","messages","handleSubmit","useEffect","status","message","removeItem","clear","push","fetchFAQs","handleBack","className","md","lg","xl","color","onClick","map","item","index","block","handleShowModal","class","show","onSubmit","onChange","required","type","placeholder","direction","Object","keys","i","onShowChange","xs","sm","defaultValue","onClose","size","closeButton","DocsLink","props","text","rest","href","rel","React","memo"],"mappings":"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","file":"static/js/25.ae57fa39.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CCollapse,\r\n  CPagination,\r\n  CProgress,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './faqs.scss'\r\nimport { CAlert } from '@coreui/react'\r\nimport '../../globalVar'\r\nimport { DocsLink } from 'src/reusable'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FAQs = () => {\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n  const [small, setSmall] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [total, setTotal] = useState()\r\n  const [totalPages, setTotalPages] = useState()\r\n  const [accordion, setAccordion] = useState()\r\n  const [data, setData] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [errorPass, setErrorPass] = useState();\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const [pageStatus, setPageStatus] = useState(0)\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [faqData, setfaqData] = useState({\r\n    question_ar: '', question_en: '', answer_ar: '', answer_en: ''\r\n  })\r\n  const { question_ar,\r\n    question_en,\r\n    answer_ar,\r\n    answer_en,\r\n\r\n  } = faqData;\r\n  const [faqUpdate, setfaqUpdate] = useState({\r\n    question_ar: '', question_en: '', answer_ar: '', answer_en: ''\r\n  })\r\n  const [errorMessageUpdate, setErrorMessageUpdate] = useState();\r\n  const [succesAddUpdate, setSuccessAddUpdate] = useState()\r\n  const [itemUpdate, setItemUpdate] = useState()\r\n  const [loadingUpdate, setLoadingUpdate] = useState('')\r\n\r\n  const handleDataUpdate = (e) => {\r\n    setfaqUpdate({ ...faqUpdate, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessageUpdate('')\r\n    setSuccessAddUpdate('')\r\n  }\r\n\r\n  const handleData = (e) => {\r\n    setfaqData({ ...faqData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n  const [itemToDelete, setItemToDelete] = useState('')\r\n  const handleShowModal = (item) => {\r\n    setSmall(!small)\r\n    setItemToDelete(item)\r\n  }\r\n  const handleDelete = async () => {\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    document.getElementById('root').style.opacity = 0.75;\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/faqs/${itemToDelete.id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n\r\n            Accept: \"application/json\",\r\n          },\r\n\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n\r\n      if (response.success == true && response.payload) {\r\n        setSmall(!small)\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n      // else{\r\n      // setErrorMessage(response.errors)\r\n      // }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n    document.getElementById('root').style.opacity = 1;\r\n\r\n  }\r\n  const handleSubmitUpdate = async (e) => {\r\n    e.preventDefault()\r\n    setLoadingUpdate(true)\r\n\r\n    setErrorMessageUpdate('')\r\n    setSuccessAddUpdate('')\r\n\r\n\r\n    const data = new FormData();\r\n    if (itemUpdate && faqUpdate.question_ar !== '') { data.append('question_ar', faqUpdate.question_ar); }\r\n    if (itemUpdate && faqUpdate.question_en !== '') { data.append('question_en', faqUpdate.question_en); }\r\n    if (itemUpdate && faqUpdate.answer_ar !== '') { data.append('answer_ar', faqUpdate.answer_ar); }\r\n    if (itemUpdate && faqUpdate.answer_en !== '') { data.append('answer_en', faqUpdate.answer_en); }\r\n    if (itemUpdate && itemUpdate.id) { data.append('_method', 'put'); }\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/faqs/${itemUpdate.id}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            // \"Content-Type\": \"application/json\",\r\n            //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            // 'Access-Control-Allow-Credentials': 'true',\r\n            Accept: \"application/json\",\r\n          },\r\n          body: data,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n      console.log('response', response);\r\n      console.log(response);\r\n      if (response.success) {\r\n\r\n        setSuccessAddUpdate(\"Question has been updated successfully\")\r\n        setRefresh(!refresh)\r\n        //  setInterval(() => {setSuccessAddUpdate('')}, 3000)\r\n        //  setInterval(() => {setItemUpdate('')}, 3000)\r\n        //  setInterval(() => {setPageStatus(0)}, 3000)\r\n        setVisible(4)\r\n        setfaqUpdate({\r\n          question_ar: '', question_en: '', answer_ar: '', answer_en: ''\r\n        })\r\n      }\r\n      else {\r\n        setErrorMessageUpdate(response.messages)\r\n        // setInterval(() => {setErrorMessageUpdate('')}, 4000)\r\n        setVisible(4)\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n\r\n    setLoadingUpdate(false)\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n\r\n    const data = new FormData();\r\n    data.append('question_ar', question_ar);\r\n    data.append('question_en', question_en);\r\n    data.append('answer_ar', answer_ar);\r\n    data.append('answer_en', answer_en);\r\n\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/faqs`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            // \"Content-Type\": \"application/json\",\r\n            //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            // 'Access-Control-Allow-Credentials': 'true',\r\n            Accept: \"application/json\",\r\n          },\r\n          body: data,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n      console.log('response', response);\r\n      console.log(response);\r\n      if (response.success) {\r\n        setVisible(10)\r\n        setSuccessAdd(\"Question has been added successfully\")\r\n        setfaqData({\r\n          question_ar: '', question_en: '', answer_ar: '', answer_en: ''\r\n        })\r\n        setRefresh(!refresh)\r\n      }\r\n      else {\r\n        setErrorMessage(response.messages)\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    setLoading(false)\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(async () => {\r\n    // setErrorMessage('')\r\n    // setSuccessAdd('')\r\n    const fetchFAQs = async (e) => {\r\n\r\n\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/faqs`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n              // \"Content-Type\": \"application/json\",\r\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n              // 'Access-Control-Allow-Credentials': 'true',\r\n              Accept: \"application/json\",\r\n            },\r\n\r\n\r\n          }\r\n        );\r\n        if (responsee.status == 204) {\r\n          setData([])\r\n        }\r\n\r\n\r\n        const response = await responsee.json();\r\n        // console.log('response',response);\r\n\r\n\r\n        if (response.success) {\r\n          setData(response.payload)\r\n\r\n\r\n        }\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.clear()\r\n\r\n          history.push(\"/login\");\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n\r\n      // setLoading(false)\r\n\r\n\r\n    }\r\n\r\n    fetchFAQs()\r\n  }, [currentPage, refresh])\r\n  const handleBack = () => {\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    setPageStatus(0)\r\n  }\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\r\n      <CContainer className='p-0'>\r\n\r\n        {pageStatus == 0 &&\r\n          <CCard className=\"\">\r\n\r\n            <CCardHeader>\r\n              <CRow className=\"justify-content-center row-gap-15 \">\r\n\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                  Common Questions\r\n                </CCol>\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\r\n                  <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                    onClick={() => setPageStatus(1)} >Add Question</CButton>\r\n\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n\r\n            <CCardBody className=\"p-1\">\r\n              <CRow className=\"justify-content-center\">\r\n                <CCol md=\"12\">\r\n                  <CCard>\r\n\r\n                    <CCardBody>\r\n                      <div id=\"accordion\">\r\n\r\n                        {data && data.map((item, index) => {\r\n                          return (\r\n                            <CCard className=\"mb-2\">\r\n                              <CCardHeader id=\"headingOne\">\r\n                                <CRow className=\"  row-gap-15 \">\r\n\r\n                                  <CCol md=\"7\" lg=\"7\" xl=\"7\" className=\"textStart text-capitalize\">\r\n                                    <CButton\r\n                                      block\r\n                                      color=\"link\"\r\n                                      className=\" m-0 p-0\"\r\n                                      onClick={() => setAccordion(accordion === index ? null : index)}\r\n                                    >\r\n                                      <h5 className=\"textStart \">{item.question_en}</h5>\r\n                                    </CButton>\r\n                                  </CCol>\r\n                                  <CCol md=\"5\" lg=\"5\" xl=\"5\" className=\"justify-content-flex-end row-gap-15 col-gap-15 \">\r\n                                    <CButton color=\"danger\" className='col-lg-3  col-md-3 col-sm-6 col-xs-6 updatebtn'\r\n                                      onClick={() => handleShowModal(item)}\r\n                                    ><i class=\"fa fa-trash\" aria-hidden=\"true\" ></i>\r\n                                    </CButton>\r\n                                    <CButton color=\"success\" className='col-lg-4  col-md-4 col-sm-6 col-xs-6 updatebtn '\r\n                                      onClick={() => { { setErrorMessageUpdate('') } { setSuccessAddUpdate('') } { setItemUpdate(item) } { setPageStatus(2) } }}\r\n                                    >Update\r\n                                    </CButton>\r\n                                  </CCol>\r\n                                </CRow>\r\n                              </CCardHeader>\r\n                              <CCollapse show={accordion === index}>\r\n                                <CCardBody>\r\n                                  <div className=' text-left qustionParent p-english'>\r\n                                    <div className='question' ><strong>Question :</strong>{' ' + item.question_en}</div>\r\n                                    <div className='question' ><strong>Answer :</strong>{' ' + item.answer_en}</div>\r\n                                  </div>\r\n                                  <div className='qustionParent p-arab'>\r\n                                    <div className='question' ><strong>السؤال :</strong>{' ' + item.question_ar}</div>\r\n                                    <div className='question' ><strong>الجواب :</strong>{' ' + item.answer_ar}</div>\r\n                                  </div>\r\n                                </CCardBody>\r\n                              </CCollapse>\r\n                            </CCard>\r\n\r\n                          )\r\n\r\n                        })}\r\n\r\n\r\n\r\n                      </div>\r\n\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n\r\n              </CRow>\r\n            </CCardBody>\r\n\r\n          </CCard>}\r\n\r\n        {pageStatus == 1 &&\r\n          <CCard className=\"\">\r\n\r\n            <CForm onSubmit={(e) => { handleSubmit(e) }}>\r\n              <CCardHeader>\r\n                <CRow className=\"justify-content-center row-gap-15 \">\r\n\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                    Add New Question\r\n                  </CCol>\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\r\n                    <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                      onClick={() => handleBack()} >Back\r\n                    </CButton>\r\n\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardHeader>\r\n\r\n              <CCardBody className=\"p-4\">\r\n\r\n                <CRow className=\"justify-content-center\">\r\n\r\n                  <CCol className=\"text-left\" md=\"12\" lg=\"12\" xl=\"12\">\r\n\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          Q\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleData}\r\n                        required\r\n\r\n                        value={faqData.question_en}\r\n                        name='question_en'\r\n                        type=\"text\" placeholder=\"English Question\" />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          A\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleData}\r\n                        required\r\n                        value={faqData.answer_en}\r\n                        name='answer_en'\r\n                        type=\"text\" placeholder=\"English Answer\" />\r\n                    </CInputGroup>\r\n\r\n                  </CCol>\r\n\r\n                  <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          س\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleData}\r\n                        value={faqData.question_ar}\r\n                        required\r\n                        name='question_ar'\r\n                        type=\"text\" placeholder=\"السؤال بالعربية\" style={{ direction: 'rtl' }} />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          ج\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleData}\r\n                        required\r\n                        value={faqData.answer_ar}\r\n                        name='answer_ar'\r\n                        type=\"text\" placeholder=\"الجواب بالعربية\" style={{ direction: 'rtl' }} />\r\n                    </CInputGroup>\r\n\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter className=\"p-4\">\r\n                <CRow className=\"justify-content-center\">\r\n\r\n                  {errorMessage &&\r\n                    <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                      color=\"danger\"\r\n                    // closeButton\r\n                    >\r\n                      {Object.keys(errorMessage).map((item, i) => (\r\n\r\n                        <>{errorMessage[item]}<br /></>\r\n\r\n\r\n\r\n                      ))}\r\n                    </CAlert>\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n                  {succesAdd &&\r\n                    <CAlert\r\n                      color=\"success\"\r\n                      className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                      show={visible}\r\n                      // closeButton\r\n                      onShowChange={setVisible}\r\n                    >\r\n                      {succesAdd}\r\n\r\n\r\n                    </CAlert>\r\n\r\n\r\n\r\n\r\n\r\n                  }\r\n\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                    <CButton color=\"success\" block type='submit'>Save\r\n                      {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>\r\n                  </CCol>\r\n\r\n                </CRow>\r\n              </CCardFooter>\r\n            </CForm>\r\n          </CCard>\r\n        }\r\n\r\n        {pageStatus == 2 && itemUpdate &&\r\n          <CCard className=\"\">\r\n\r\n            <CForm onSubmit={(e) => { handleSubmitUpdate(e) }}>\r\n              <CCardHeader>\r\n                <CRow className=\"justify-content-center row-gap-15 \">\r\n\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                    Update Question\r\n                  </CCol>\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\r\n                    <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                      onClick={() => handleBack()} >Back\r\n                    </CButton>\r\n\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardHeader>\r\n\r\n              <CCardBody className=\"p-4\">\r\n\r\n                <CRow className=\"justify-content-center\">\r\n\r\n                  <CCol md=\"12\" lg=\"12\" xl=\"12\" style={{ direction: 'ltr' }} >\r\n\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          Q\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleDataUpdate}\r\n\r\n                        defaultValue={itemUpdate.question_en}\r\n                        name='question_en'\r\n                        type=\"text\" placeholder=\"English Question\" />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          A\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleDataUpdate}\r\n                        defaultValue={itemUpdate.answer_en}\r\n                        name='answer_en'\r\n                        type=\"text\" placeholder=\"English Answer\" />\r\n                    </CInputGroup>\r\n\r\n                  </CCol>\r\n\r\n                  <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          س\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleDataUpdate}\r\n\r\n                        defaultValue={itemUpdate.question_ar}\r\n                        name='question_ar'\r\n                        type=\"text\" placeholder=\"السؤال بالعربية\" style={{ direction: 'rtl' }} />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          ج\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        onChange={handleDataUpdate}\r\n                        defaultValue={itemUpdate.answer_ar}\r\n\r\n                        name='answer_ar'\r\n                        type=\"text\" placeholder=\"الجواب بالعربية\" style={{ direction: 'rtl' }} />\r\n                    </CInputGroup>\r\n\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter className=\"p-4\">\r\n                <CRow className=\"justify-content-center\">\r\n\r\n                  {errorMessageUpdate &&\r\n                    <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                      color=\"danger\"\r\n                    // closeButton\r\n\r\n                    >\r\n                      {Object.keys(errorMessageUpdate).map((item, i) => (\r\n\r\n                        <>{errorMessageUpdate[item]}<br /></>\r\n\r\n\r\n\r\n                      ))}\r\n                    </CAlert>\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n                  {succesAddUpdate &&\r\n                    <>  <CAlert\r\n                      color=\"success\"\r\n                      className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                      show={visible}\r\n                      // closeButton\r\n                      onShowChange={setVisible}\r\n                    >\r\n                      {succesAddUpdate}\r\n\r\n                      {/* <CProgress\r\n            striped\r\n            color=\"warning\"\r\n            value={Number(visible) * 10}\r\n            size=\"xs\"\r\n            className=\"mb-3\"\r\n          /> */}\r\n                    </CAlert>\r\n\r\n                    </>\r\n\r\n\r\n                  }\r\n\r\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                    <CButton color=\"success\" block type='submit'>Save\r\n                      {loadingUpdate && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>\r\n                  </CCol>\r\n\r\n                </CRow>\r\n              </CCardFooter>\r\n            </CForm>\r\n          </CCard>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n      <CModal\r\n        show={small}\r\n        onClose={() => setSmall(!small)}\r\n        size=\"sm\"\r\n        color='danger'\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle></CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Are you sure you want to delete ({itemToDelete.question_en})\r\n\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={() => handleDelete()}>Delete</CButton>{' '}\r\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FAQs\r\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)"],"sourceRoot":""}