{"version":3,"sources":["views/PreImages/AddNewPreImages/addNewPreImages.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AddNewPreImages","refreshTokenHandler","useContext","ProfileContext","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","preDefinedImages","setPreDefinedImages","handleAddUser","e","a","preventDefault","length","language","userToken","data","FormData","forEach","item","index","append","fetch","global","apiUrl","method","headers","Authorization","Accept","body","responsee","json","response","message","error","errors","status","console","log","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","col","accept","required","custom","multiple","id","onChange","target","files","pre","handleImagesPosts","htmlFor","variant","map","src","URL","createObjectURL","type","temp","splice","handleRemovePreFile","style","borderRadius","lastModified","Object","keys","i","Fragment","show","onShowChange","block","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/63.99586c2d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n\n  CInputFile,\n\n  CRow\n} from '@coreui/react'\n\nimport './addNewPreImages.scss'\nimport { ProfileContext } from 'src/App'\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst AddNewPreImages = () => {\n  const { refreshTokenHandler } = useContext(ProfileContext)\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n  const [preDefinedImages, setPreDefinedImages] = useState([])\n\n\n  const vlaidationData = () => {\n\n    if (preDefinedImages.length == 0) {\n      setErrorMessage(i18n.language === \"ar\" ? \"يجب ادخال صورة او اكثر\"\n        : \"You must enter one or more images.\");\n      setVisible(8)\n      return false\n    }\n\n    return true\n\n  }\n\n  const handleAddUser = async (e) => {\n    e.preventDefault()\n    setErrorMessage('')\n    setSuccessAdd('')\n    if (!vlaidationData()) { return }\n    const apiENDPOINT = \"api/addPredefinedAdminPostImages\";\n    setLoading(true)\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\n\n    var data = new FormData()\n    preDefinedImages.length > 0 && preDefinedImages.forEach((item, index) => {\n      data.append(`images[${index}][file]`, item)\n    })\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}${apiENDPOINT}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n        }\n      );\n      const response = await responsee.json();\n      setLoading(false)\n      setVisible(10)\n      if (response.message === \"Fail\") {\n        setErrorMessage(response.error);\n        return\n      }\n      else if (response.errors) { setErrorMessage(response.errors); }\n      else if (response.message && response.message == \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { handleAddUser(e) })\n      }\n\n      if (response.message && responsee.status == 200) {\n        setVisible(6)\n        setSuccessAdd(response.message)\n\n        setPreDefinedImages([])\n\n\n      }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n\n\n  const handleImagesPosts = (e) => {\n    if (e.target.files[0]) {\n      setPreDefinedImages(pre => [...pre, ...e.target.files])\n    }\n  }\n\n  const handleRemovePreFile = (index) => {\n    let temp = [...preDefinedImages]\n    temp.splice(index, 1)\n    setPreDefinedImages([...temp])\n  }\n\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n      <CContainer>\n        <CCard className=\"\">\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{i18n.language === \"ar\" ? \"اضافة صور للمنشورات\" : \"Add New Pre-Defined Posts Images\"}</strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                  onClick={() => history.goBack()} >  {t(\"Back\")}\n                </CButton>\n\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAddUser(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n\n\n                        {/* className=\"justify-content-center\" */}\n\n                        {/* <CCol md='12'> <strong>{i18n.language === \"ar\" ? \"   \" : \"User Information\"}</strong></CCol>\n                        */}\n\n                        <CCol md='6'  ><CCol md='12'  >\n                          <CFormGroup row >\n                            <CLabel col md={12}>{i18n.language == 'ar' ? `صورة مسبقة للمنشورات` : `Predefined Post Pictures`}</CLabel>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInputFile accept=\"image/*\" required\n                                custom multiple id=\"custom-files-input\"\n                                onChange={(e) => { handleImagesPosts(e) }} />\n\n                              <CLabel htmlFor=\"custom-files-input\" variant=\"custom-file\">\n                                {i18n.language == 'ar' ? `اختر صور ...` : `Choose images ...`}\n\n                              </CLabel>\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        </CCol>\n                        <CCol md=\"12\"></CCol>\n                        {preDefinedImages.length > 0 ?\n\n                          <>\n                            {preDefinedImages.map((item, index) => (\n                              <CCol key={`${index}${item.lastModified}`} md='3' className=\"mb-1\">\n                                <ul className=\" card list-group list-group-flush\">\n                                  <li className=\"list-group-item  \">\n                                    <img className=\"imgprediifined\" src={URL.createObjectURL(item)}></img>\n                                  </li>\n                                  <CButton color=\"secondary\" className='col-lg-12  ' type='button'\n                                    onClick={() => handleRemovePreFile(index)}\n                                    style={{ borderRadius: '0' }} >\n                                    {t(\"Remove\")}\n                                  </CButton>\n\n                                  {/* </CCol> */}\n                                </ul>\n\n                              </CCol>\n                            ))}\n                          </>\n\n\n\n                          : null}\n\n                      </CRow>\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\n                          {Object.keys(errorMessage).map((item, i) => (\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\n                          ))}\n                        </CAlert>\n                          :\n                          null}\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12    '\n                            color=\"success\"\n                            show={visible}\n                            onShowChange={setVisible}\n\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t(\"Save\")}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n      </CContainer>\n    </div >\n  )\n}\n\nexport default AddNewPreImages\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}