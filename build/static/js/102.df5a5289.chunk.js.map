{"version":3,"sources":["views/areas/areas.js"],"names":["Areas","history","useHistory","useTranslation","t","i18n","refreshTokenHandler","useContext","ProfileContext","useState","small","setSmall","country","setCountry","areas","setAreas","data","setData","setErrorMessage","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","JSON","parse","useEffect","a","fetchitems","e","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","message","payload","console","log","itemToDelete","setItemToDelete","handleDelete","document","getElementById","style","opacity","id","fetchAreas","handleCountry","value","val","status","xl","className","md","lg","language","color","onClick","push","row","htmlFor","xs","custom","name","onChange","target","length","map","item","items","fields","label","key","hover","striped","pagination","sorter","itemsPerPage","scopedSlots","handleShowModal","ar","en","show","onClose","size","closeButton"],"mappings":"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","file":"static/js/102.df5a5289.chunk.js","sourcesContent":["\n\nimport React, { useState, useEffect, useContext } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CForm,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend, CLabel,\n  CSelect,\n  CFormGroup,\n  CInputGroupText,\n  CCardFooter\n} from '@coreui/react'\nimport { CAlert } from '@coreui/react'\nimport '../../globalVar'\nimport './areas.scss'\nimport { ProfileContext } from 'src/App'\nimport { useTranslation } from 'react-i18next';\n\n\nconst Areas = () => {\n  const history = useHistory()\n  const [t, i18n] = useTranslation();\n  const { refreshTokenHandler } = useContext(ProfileContext)\n\n  const [small, setSmall] = useState(false)\n\n  const [country, setCountry] = useState(\"\")\n  const [areas, setAreas] = useState([])\n  const [data, setData] = useState('')\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const [pageStatus, setPageStatus] = useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n  const [visible, setVisible] = useState(10)\n\n\n  useEffect(async () => {\n    const fetchitems = async (e) => {\n\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\n\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/countries`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n        const response = await responsee.json();\n        if (response.message && response.message == \"Unauthenticated.\") {\n          return refreshTokenHandler(function () { fetchitems(e) })\n        }\n\n        if (response.message && response.message == \"Success\") {\n          setData(response.payload)\n\n\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n    }\n\n    fetchitems()\n  }, [])\n\n\n\n\n\n\n\n\n\n  const [itemToDelete, setItemToDelete] = useState('')\n  const handleShowModal = (item) => {\n    setSmall(true)\n    setItemToDelete(item)\n  }\n  const handleDelete = async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/areas/${itemToDelete.id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      if (response.message && response.message === \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { handleDelete() })\n      }\n      if (response.message && response.message === \"Success\") {\n        setSmall(false)\n        document.getElementById('root').style.opacity = 1;\n        fetchAreas(country)\n        // setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n\n  const handleCountry = async (value) => {\n    setCountry(value)\n    if (value) {\n      fetchAreas(value)\n    }\n    else {\n      setAreas([])\n    }\n\n  }\n  const fetchAreas = async (val) => {\n\n    const userToken = JSON.parse(localStorage.getItem(\"token\"))\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/countries?country_id=${val}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      if (responsee.status == 204) { setAreas([]) }\n      const response = await responsee.json();\n      if (response.message && response.message == \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { fetchAreas(val) })\n      }\n      if (response.message && response.message == \"Success\") { setAreas(response.payload) }\n\n    } catch (err) {\n      console.log(err);\n    }\n\n  }\n\n  return (\n\n    <CRow>\n      {pageStatus == 0 &&\n        <CCol xl={12}>\n          <CCard>\n            <CCardHeader>\n              <CRow className=\" row-gap-15\">\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                  {i18n.language === \"ar\" ? \"المناطق\" : \"Areas\"}\n                </CCol>\n\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                  <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                    onClick={() => history.push('/Areas/AddNewArea')} >\n                    {i18n.language === \"ar\" ? \"إضافة منطقة جديد\" : \"Add New Area\"}\n\n                  </CButton>\n\n                </CCol>\n                <CCol md=\"5\"  >\n                  <CFormGroup row>\n                    <CCol md=\"12\">\n                      <CLabel htmlFor=\"text-input\">   {t(\"Country\")}</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CSelect custom name=\"category_id\"\n                        value={country}\n                        onChange={(e) => handleCountry(e.target.value)}>\n                        <option value='' >{t(\"Select Country\")}</option>\n\n                        {data.length > 0 && data.map((item) => {\n                          return (<option value={item.id} key={item.id}>  {item.name[i18n.language]}   </option>)\n                        })}\n\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n\n            </CCardHeader>\n            <CCardBody className='usersTabel'>\n              {!country && <CRow>\n                <CCol md='12'>\n                  <CAlert className='col-lg-12 ' color=\"warning\" >\n                    {i18n.language == 'ar' ? \"اختر دولة لعرض المناطق الخاصة بها\" : \"Select a country to view its areas\"}\n                  </CAlert>\n                </CCol>\n              </CRow>\n              }\n              {areas && country && <CDataTable\n                items={areas}\n                fields={['id',\n                  { label: i18n.language === \"ar\" ? \"الاسم العربي\" : \"Arabic Name\", key: 'name_ar' },\n                  { label: i18n.language === \"ar\" ? \"الاسم الانكليزي\" : \"English Name\", key: 'name_en' },\n                  { label: i18n.language === \"ar\" ? \"عمليات\" : \"Actions\", key: 'Actions' }]}\n                hover\n                striped\n                pagination\n                sorter\n                itemsPerPage={12}\n                // columnFilter\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n                scopedSlots={{\n                  'Actions':\n                    (item) => (\n                      <td>\n                        <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\n                          onClick={() => handleShowModal(item)}\n                        > {t(\"Delete\")}</CBadge>\n                        {/* <br /> */}\n                        <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\n                          onClick={() => history.push(`/Areas/${country}/AreaUpdate/${item.id}`)}\n                        >\n                          {t(\"Update\")}  </CBadge>\n\n                      </td>\n                    ),\n                  'name_ar': (item) => (<td> {item.name.ar}  </td>),\n                  'name_en': (item) => (<td> {item.name.en}  </td>),\n\n                }}\n              />}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      }\n\n      <CModal\n        show={small}\n        onClose={() => setSmall(false)}\n        size=\"sm\"\n        color='danger'>\n        <CModalHeader closeButton>\n          <CModalTitle>{i18n.language === \"ar\" ? \"حذف منطقة\" : \"Delete Area\"} </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {`${i18n.language === \"ar\" ? \"هل انت متأكد من حذف منطقة\" : \"Are you sure you want to delete the Area\"}   (${itemToDelete.name && itemToDelete.name[i18n.language]})`}\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => handleDelete()}>{t(\"Delete\")} </CButton>{' '}\n          <CButton color=\"secondary\" onClick={() => setSmall(false)}>{t(\"Cancel\")}</CButton>\n        </CModalFooter>\n      </CModal>\n\n    </CRow>\n  )\n}\n\n\n\n\nexport default Areas\n"],"sourceRoot":""}