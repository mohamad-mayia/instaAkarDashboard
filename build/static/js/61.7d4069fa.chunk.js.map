{"version":3,"sources":["views/settings/apiKey/apiKey.js"],"names":["Settings","useHistory","useState","visible","setVisible","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","userId","api_key","upData","setUpData","handleUpdateProfile","e","a","preventDefault","data","FormData","append","fetch","global","apiUrl","method","headers","Authorization","Accept","body","responsee","json","response","console","log","message","document","getElementById","value","errors","className","onSubmit","md","lg","xl","name","onChange","target","required","id","defaultValue","type","placeholder","autoComplete","color","show","onShowChange","Object","keys","map","item","i","xs","sm","block"],"mappings":"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","file":"static/js/61.7d4069fa.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './apiKey.scss'\nimport {CAlert} from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\n  \nimport '../../../globalVar'\nconst Settings = () => {\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n  const [value, setValue] = useState()\n  const[fetchedData,setfetchedData]=useState('')\n  const[refresh,setRefresh]=useState('')\n  const [errorMessage, setErrorMessage] = useState();\n  \n  const[succesAdd,setSuccessAdd]=useState()\n  const[loading,setLoading]=useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const userId = localStorage.getItem(\"user_id\");\n  const user_id = JSON.parse(userId);\n  const [pageStatus,setPageStatus]=useState(0)\nconst [upData,setUpData]=useState({\n  api_key:'',\n\n})\nconst{ api_key,}=upData;\n\n\n\n\n\n\n\nconst handleData=(e)=>{\n  setUpData({...upData,[e.target.name]:e.target.value})\n\n  setErrorMessage('')\n  setSuccessAdd('')\n}\n\nconst handleUpdateProfile=async(e)=>{\n  e.preventDefault()\n  setLoading(true)\n  \n  setErrorMessage('')\n  setSuccessAdd('')\n\n\n  const data = new FormData();\napi_key&& data.append('api_key', api_key);\n\n\n\ntry {\n  const responsee = await fetch(\n    `${global.apiUrl}/settings/updateWebsiteSettings`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + userToken,\n                   // \"Content-Type\": \"application/json\",\n                  //'Access-Control-Allow-Origin': 'https://localhost:3000',\n                  // 'Access-Control-Allow-Credentials': 'true',\n        Accept: \"application/json\",\n      },\n      body:data,\n  \n    }\n  );\n  const response = await responsee.json();\n  console.log('response',response);\n  console.log(response);\n  if(response.message&&response.message==\"Website settings updated successfully!\"){\n   \n    setSuccessAdd(\"API Key updated successfully!\")\n    document.getElementById('apikey').value=''\nsetUpData({api_key:''})\n setVisible(5)\n  }\n  else{\n   \n    setVisible(5)\n  setErrorMessage(response.errors)\n  }\n \n} catch (err) {\n  console.log(err);\n \n}\n\nsetLoading(false)\n}\n\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n   \n      <CContainer>\n\n    \n\n\n\n\n\n         {/* mx-4 */}\n            <CCard className=\"\">\n\n            <CForm onSubmit={(e)=>{handleUpdateProfile(e)}}>\n\n            <CCardHeader>\n          <CRow className=\" row-gap-15\">\n            \n            <CCol md=\"12\" lg=\"12\" xl=\"12\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n           Update API Key\n            </CCol>\n         \n            </CRow>\n          </CCardHeader>\n\n              <CCardBody className=\"p-4\">\n          \n              <CRow className=\"justify-content-center\">\n              <CCol md=\"8\" lg=\"8\" xl=\"8\">\n              <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-code\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                    onChange={handleData}\n                    required\n                    id='apikey'\n                    defaultValue={api_key}\n                    name='api_key'\n                    type=\"text\" placeholder=\"*API Key\" autoComplete=\"off\"/>\n                  </CInputGroup>\n                 </CCol>\n      \n                 \n                 </CRow>\n              </CCardBody>\n              <CCardFooter className=\"p-4\">\n                <CRow className=\"justify-content-center\">\n         \n                   { errorMessage&& \n                   <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                   color=\"danger\"\n                   // closeButton\n                   show={visible}\n                   // closeButton\n                   onShowChange={setVisible}\n              > \n               {     Object.keys(errorMessage).map((item, i) => (\n              \n         <>{errorMessage[item]}<br/></>  \n            \n                      \n                \n          ))}\n          </CAlert>\n          \n          }\n          \n              \n              \n              \n                { succesAdd&& \n                \n                \n                <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                color=\"success\"\n                show={visible}\n                // closeButton\n                onShowChange={setVisible}\n                // closeButton\n              >\n            {succesAdd}\n              </CAlert>\n              \n              \n              }\n            \n                  <CCol  md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                  <CButton color=\"success\" block type='submit'>Save\n                  {loading&&<>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>\n                  </CCol>\n                \n                </CRow>\n              </CCardFooter>\n              </CForm>\n            </CCard>\n       \n       \n\n\n\n    \n\n\n\n\n\n\n     \n      </CContainer>\n    </div>\n  )\n}\n\nexport default Settings\n"],"sourceRoot":""}