{"version":3,"sources":["views/contactUs/contactUs.js","views/Pagination/pagination.js","views/contactUs/ReplayForm/editor.js","views/contactUs/ReplayForm/ReplayForm.js"],"names":["ConatctUs","useHistory","useTranslation","t","i18n","refreshTokenHandler","useContext","ProfileContext","useState","visible","setVisible","small","setSmall","dataText","setDataText","data","setData","refresh","setRefresh","errorMessage","setErrorMessage","currentPage","current_page","total","succesAdd","setSuccessAdd","loading","setLoading","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","modal","setModal","id","text","activeItem","setActiveItem","url","setUrl","handleSetItemToreplay","item","a","closeModal","fetchFAQs","pageNumber","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","status","json","response","message","payload","console","log","useEffect","itemToDelete","handleDelete","document","getElementById","style","opacity","handleReplay","e","preventDefault","FormData","append","body","language","error","errors","xl","md","lg","custom","name","onChange","target","value","handleUrlFilter","className","length","items","fields","label","key","hover","striped","sorter","pagination","itemsPerPage","size","scopedSlots","dangerouslySetInnerHTML","__html","replied","reply","created_at","slice","color","seen","onClick","then","res","catch","err","handleSeen","show","onClose","closeButton","Object","keys","map","i","Fragment","onShowChange","ControlledEditor","props","onEditorStateChange","editorState","setState","draftToHtml","convertToRaw","getCurrentContent","state","EditorState","createWithContent","ContentState","createFromBlockArray","htmlToDraft","this","wrapperClassName","editorClassName","Component","ReplayForm"],"mappings":"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","file":"static/js/20.0beb36df.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination, CSelect,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CAlert,\r\n\r\n\r\n} from '@coreui/react'\r\nimport { Pagination } from '../Pagination/pagination'\r\nimport '../../globalVar'\r\nimport ReplayForm from './ReplayForm/ReplayForm'\r\nimport { ProfileContext } from 'src/App'\r\nimport { useTranslation } from 'react-i18next';\r\nimport './contactUs.scss'\r\n\r\n\r\n\r\nconst ConatctUs = () => {\r\n  const history = useHistory()\r\n  const [t, i18n] = useTranslation();\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [visible, setVisible] = useState(10)\r\n  const [small, setSmall] = useState(false)\r\n  const [dataText, setDataText] = useState('')\r\n  const [data, setData] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [paginationInfo, setPaginationInfo] = useState({ current_page: 1, total: 1 })\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const [pageStatus, setPageStatus] = useState(0)\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [modal, setModal] = useState(false)\r\n  const [activeItem, setActiveItem] = useState({ id: '', text: '' })\r\n  const [url, setUrl] = useState(`api/viewAllRequests`)\r\n\r\n  const handleSetItemToreplay = async (item) => {\r\n\r\n    await setActiveItem({ id: item.id, text: item.text })\r\n    setDataText('')\r\n    await setModal(true)\r\n  }\r\n  const closeModal = () => {\r\n    setModal(false)\r\n    setDataText('')\r\n    setActiveItem({ id: '', text: '' })\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n  }\r\n  const handleUrlFilter = (e) => {\r\n    // setCurrentPage(1)\r\n    setUrl(`api/viewAllRequests${e.target.value}`)\r\n\r\n\r\n  }\r\n  // ?seen=1&replied=1?page=${pageNumber}\r\n  const fetchFAQs = async (pageNumber) => {\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}${url}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (responsee.status == 204) { setData([]) }\r\n      const response = await responsee.json();\r\n      if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { fetchFAQs(pageNumber) })\r\n      }\r\n      if (response.message && response.message == \"Success\") {\r\n        setData(response.payload)\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n\r\n    fetchFAQs()\r\n  }, [currentPage, refresh, url])\r\n\r\n\r\n\r\n  const [itemToDelete, setItemToDelete] = useState('')\r\n  const handleShowModal = (item) => {\r\n    setSmall(!small)\r\n    setItemToDelete(item)\r\n  }\r\n  const handleDelete = async () => {\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    document.getElementById('root').style.opacity = 0.75;\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/contacts/${itemToDelete.id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n\r\n            Accept: \"application/json\",\r\n          },\r\n\r\n\r\n        }\r\n      );\r\n\r\n      if (responsee.status == 200) {\r\n        setSmall(!small)\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n    document.getElementById('root').style.opacity = 1;\r\n\r\n  }\r\n  const handleReplay = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    const data = new FormData();\r\n    dataText && data.append('reply', dataText);\r\n    dataText && data.append('contact_us_id', activeItem.id);\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/reply`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            Accept: \"application/json\",\r\n            // \"Content-Type\": \"application/json\",\r\n            //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            // 'Access-Control-Allow-Credentials': 'true',\r\n\r\n          },\r\n          body: data,\r\n\r\n        }\r\n      );\r\n      if (responsee.status == 200) {\r\n        // setDataText(\"\")\r\n        setActiveItem(activeItem)\r\n        setSuccessAdd(i18n.language == \"ar\" ? \"تم ارسال الرد بنجاح\" : \"Reply has been sent successfully\")\r\n        setRefresh(!refresh)\r\n        setVisible(5)\r\n      }\r\n      setLoading(false)\r\n      const response = await responsee.json();\r\n      setVisible(10)\r\n      if (response.message === \"Fail\") {\r\n        setErrorMessage(response.error);\r\n        return\r\n      }\r\n      else if (response.errors) {\r\n        setErrorMessage(response.errors);\r\n      }\r\n      else if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { handleReplay(e) })\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n  const handleSeen = (id) => {\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    const data = new FormData();\r\n    data.append('contact_us_id', id);\r\n    fetch(`${global.apiUrl}api/setRequestAsSeen?_method=put`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: \"Bearer \" + userToken,\r\n          Accept: \"application/json\",\r\n        }, body: data,\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.message && (res.message == \"Contact us request has been set as seen\" || res.message == \"Contact us request has been set as unseen\")) {\r\n          setRefresh(!refresh)\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <CRow>\r\n      {pageStatus == 0 &&\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CCol md='12'><strong>{t(\"Messages\")}</strong></CCol>\r\n\r\n              <CCol md=\"4\" lg=\"4\" xl=\"4\" >\r\n                <CSelect custom name=\"select\" onChange={(e) => handleUrlFilter(e)}>\r\n                  <option value='' >{t(\"All\")} </option>\r\n                  <option value='?seen=1' >{i18n.language === \"ar\" ? \"تمت رؤيته\" : \"Seen\"}</option>\r\n                  <option value='?seen=0' >{i18n.language === \"ar\" ? \"لم تتم رؤيته\" : \"Unseen\"}</option>\r\n                  <option value='?replied=1' >{i18n.language === \"ar\" ? \"تم الرد\" : \"Replied\"}</option>\r\n                  <option value='?replied=0' >{i18n.language === \"ar\" ? \"لم يتم الرد\" : \"Not Replied\"}</option>\r\n                </CSelect>\r\n\r\n\r\n              </CCol>\r\n\r\n            </CCardHeader>\r\n            <CCardBody className='usersTabel'>\r\n              {data.length > 0 && <CDataTable\r\n                items={data}\r\n                fields={['id',\r\n                  { label: t(\"Name\"), key: \"name\" },\r\n                  { label: t(\"Email\"), key: 'email' },\r\n                  { label: t(\"Phone\"), key: 'phone' },\r\n                  { label: t(\"Address\"), key: 'address' },\r\n                  { label: t(\"Message\"), key: 'text' },\r\n                  { label: t(\"Replay\"), key: 'Replay' },\r\n                  { label: t(\"Date\"), key: 'date' },\r\n                  { label: t(\"Actions\"), key: 'عمليات' }\r\n                ]}\r\n                hover\r\n                striped\r\n                sorter\r\n                pagination\r\n                itemsPerPage={12}\r\n                size=\"sm\"\r\n                // clickableRows  dangerouslySetInnerHTML={{ __html: activeUser.content_en }}\r\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n                scopedSlots={{\r\n                  'Replay': (item) => (<td dangerouslySetInnerHTML={{ __html: item.replied && item.reply ? item.reply : \"No Replay\" }}></td>),\r\n                  'text': (item) => (<td dangerouslySetInnerHTML={{ __html: item.text }}></td>),\r\n                  'date': (item) => (<td >{item && item.created_at.slice(0, 10)}</td>),\r\n                  'عمليات':\r\n                    (item) => (\r\n                      <td>\r\n                        {/* <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\r\n                          onClick={() => handleShowModal(item)}\r\n                        >{t(\"Delete\")}     </CBadge>\r\n                        <br /> */}\r\n                        <CBadge className=\"p-1  m-1 badg-click\" color={item.seen ? \"success\" : \"secondary\"}\r\n                          // style={{ cursor: item.seen ? 'pointer' : \"auto\" }}\r\n                          onClick={() => handleSeen(item.id)}>\r\n                          {item.seen ?t(\"Viewed\")  : t(\"View\")}</CBadge>\r\n                        {/* <br /> */}\r\n                        {item.replied ?\r\n                          <CBadge className=\"p-1  m-1 badg-click\" color=\"success\"  >\r\n                            {i18n.language === \"ar\" ? \"تم الرد\" : \"Replied\"}      </CBadge> :\r\n                          <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\r\n                            onClick={() => handleSetItemToreplay(item)}  >\r\n                            {i18n.language === \"ar\" ? \"رد\" : \"Reply\"}      </CBadge>}\r\n\r\n                        {/* <br /> */}\r\n\r\n                      </td>\r\n\r\n\r\n                    ),\r\n\r\n                }}\r\n              />}\r\n\r\n            </CCardBody>\r\n            {/* <Pagination\r\n              current_page={paginationInfo.current_page}\r\n              total={paginationInfo.total}\r\n              fetchFAQs={fetchFAQs}\r\n            /> */}\r\n\r\n          </CCard>\r\n        </CCol>\r\n      }\r\n\r\n      <CModal\r\n        show={modal}\r\n        onClose={closeModal}\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>{i18n.language === \"ar\" ? \"ارسال رد\" : \"Send Reply\"}    </CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow  >\r\n            <CCol md=\"12\">{i18n.language === \"ar\" ? \"الرسالة :\" : \"Message :\"}  </CCol>\r\n            {/* */}\r\n            <CCol md=\"12\" >{activeItem.text ? <div dangerouslySetInnerHTML={{ __html: activeItem.text }}></div> : null}</CCol>\r\n            <CCol md=\"12\">{i18n.language === \"ar\" ? \"الرد :\" : \"Reply :\"}    </CCol>\r\n            {activeItem.message != '' && <ReplayForm setDataText={setDataText} dataText={dataText} />}\r\n          </CRow>\r\n          <CRow className=\"justify-content-center\">\r\n\r\n            {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\r\n              {Object.keys(errorMessage).map((item, i) => (\r\n                <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\r\n              ))}\r\n            </CAlert>\r\n              :\r\n              null}\r\n            {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\r\n            {succesAdd &&\r\n              <CCol md='12'>\r\n                <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                  color=\"success\"\r\n                  show={visible}\r\n                  // closeButton\r\n                  onShowChange={setVisible}\r\n                // closeButton\r\n                >\r\n                  {succesAdd}\r\n                </CAlert>\r\n              </CCol>}\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n\r\n          <CButton color=\"primary\" onClick={(e) => { handleReplay(e) }} >{i18n.language === \"ar\" ? \"ارسال رد\" : \"Send Reply\"}     {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>}</CButton>{' '}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => closeModal()}\r\n          >{t(\"Cancel\")}</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <CModal\r\n        show={small}\r\n        onClose={() => setSmall(!small)}\r\n        size=\"sm\"\r\n        color='danger'>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle> Delete Message</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          {`Are you sure you want to delete message (${itemToDelete.name})`}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={() => handleDelete()}>Delete</CButton>{' '}\r\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n\r\n\r\n\r\n\r\n    </CRow >\r\n  )\r\n}\r\n\r\nexport default ConatctUs\r\n","import './pagination.scss'\r\n\r\n\r\nimport {CButton} from '@coreui/react'\r\n\r\nexport const Pagination =(props) =>{\r\nlet {total,current_page,fetchFAQs} =props\r\nlet arr = new Array(total).fill(0)\r\nlet end = 5\r\nlet start=0\r\nif (current_page >=5){\r\n  if (arr.length - current_page > 5) {\r\n    end= current_page +3\r\n    start = current_page -2\r\n  }\r\n  if  (arr.length-current_page === 0){\r\n    end=arr.lenth\r\n    start=current_page -1\r\n\r\n  }\r\n  if (arr.length-current_page < 5 && arr.length-current_page >0) {\r\n     end = arr.length\r\n     start = current_page-2\r\n\r\n  }\r\n  else {\r\n    end= current_page+1\r\n    start = current_page -5\r\n  }\r\n}\r\nif (current_page <5) {\r\n\r\n  start =0\r\n  end=total\r\n}\r\n\r\n  return (\r\n    <div className='pagination'>\r\n          <div className=\"pagesList\">\r\n\r\n             <CButton aria-label=\"Previous\" disabled={current_page === 1}\r\n             onClick={()=>fetchFAQs(current_page -1)}>\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n              </CButton>\r\n              {\r\n                arr.slice(start,end).map((ele,index)=>{\r\n                  return (\r\n                    <CButton className={current_page -1 === index+start ?\"active\":\"\"}\r\n                        onClick={()=>fetchFAQs(index +start + 1)}>\r\n                      {index +start + 1}\r\n                    </CButton>\r\n                  )\r\n                })\r\n              }\r\n\r\n              <CButton aria-label=\"Next\" disabled={current_page === total}\r\n                  onClick={()=>fetchFAQs(current_page +1)}>\r\n                <span aria-hidden=\"true\">&raquo;</span>\r\n              </CButton>\r\n          </div>\r\n  </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport {EditorState, ContentState, convertFromHTML, convertToRaw,convertFromRaw} from 'draft-js';\r\nimport { Editor  } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {stateFromHTML} from 'draft-js-import-html';\r\nclass ControlledEditor extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     editorState: EditorState.createEmpty(),\r\n  //   };\r\n  //   console.log(props)\r\n  // }\r\n  constructor(props) {\r\n    super(props);\r\n    // var contentState = stateFromHTML(props.privacyPolicy);\r\n    // var editorStat = EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML(props.privacyPolicy)));\r\n\r\n    // const html = props.privacyPolicy;\r\n    // const contentBlock = htmlToDraft(html);\r\n\r\n\r\n    //  const editorStateInitial =\r\n    //   EditorState.createWithContent(\r\n    //     ContentState.createFromBlockArray(contentBlock.htmlToDraft(props.privacyPolicy)));\r\n\r\n    // var editorStat = EditorState.createWithContent(contentState);\r\n    this.state = {editorState:   EditorState.createWithContent(\r\n      ContentState.createFromBlockArray(htmlToDraft(props.dataText)))};\r\n}\r\n  onEditorStateChange=(editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n\r\n    this.props.setDataText(draftToHtml(convertToRaw(editorState.getCurrentContent())))\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        wrapperClassName=\"demo-wrapper \"\r\n        editorClassName=\"demo-editor\"\r\n        onEditorStateChange={this.onEditorStateChange}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default ControlledEditor\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './ReplayForm.scss'\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport '../../../globalVar'\r\nimport Editor from './editor'\r\nconst ReplayForm = ({ dataText, setDataText, }) => {\r\n\r\n  return (\r\n\r\n\r\n    <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n\r\n      <Editor className='col-md-12' setDataText={setDataText} dataText={dataText} />\r\n    </CCol>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ReplayForm\r\n\r\n"],"sourceRoot":""}