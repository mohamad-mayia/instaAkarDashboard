{"version":3,"sources":["views/companies/addNewCompany/addNewCompany.js"],"names":["AddNewCompany","useTranslation","i18n","useHistory","useState","visible","setVisible","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","pickedImg","setPickedImg","name_en","name_ar","upData","setUpData","handleData","e","target","name","value","handleAddCompany","a","preventDefault","data","FormData","append","fetch","global","apiUrl","method","headers","Authorization","Accept","body","responsee","json","response","console","log","success","messages","className","md","lg","xl","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","col","language","accept","custom","id","files","handleImg","variant","src","URL","createObjectURL","color","show","onShowChange","Object","keys","map","item","i","block","type"],"mappings":"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","file":"static/js/53.afe03ce5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './addNewCompany.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst AddNewCompany = () => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  // const userId = localStorage.getItem(\"user_id\");\n  // const user_id = JSON.parse(userId);\n\n  const [upData, setUpData] = useState({\n    name_en: '',\n    name_ar: '',\n\n\n  })\n  const { name_en,\n    name_ar,\n\n\n  } = upData;\n\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n\n\n\n  const handleAddCompany = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    const data = new FormData();\n    name_en && data.append(\"name_en\", name_en);\n\n    name_ar && data.append(\"name_ar\", name_ar);\n\n    pickedImg && data.append('logo', pickedImg);\n\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/companies`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            //  \"Content-Type\": \"application/json\",\n            //'Access-Control-Allow-Origin': 'https://localhost:3000',\n            // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      setVisible(10)\n      if (response.success) {\n        await setVisible(6)\n        setSuccessAdd(\"Company added successfully.\")\n\n\n        setUpData({\n          name_en: '',\n          name_ar: '',\n\n        })\n\n        setPickedImg('')\n\n        setVisible(6)\n      }\n      else {\n\n        setVisible(10)\n        setErrorMessage(response.messages)\n\n\n      }\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n\n\n\n  const handleImg = (e) => {\n    if (e.target.files[0]) { setPickedImg(e.target.files[0]) }\n  }\n  console.log('data', upData)\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>Add New Company</strong>\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAddCompany(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n                        <CCol md='12'> <strong>\n                          {\"Company Information:\"}\n                        </strong></CCol>\n\n                        {/* className=\"justify-content-center\" */}\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">\n                                {\"English Name\"}\n                              </CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={\"English Name\"}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n\n                        <CCol md=\"6\" lg=\"6\">\n                          <CFormGroup row className='arabic-align'>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\"></CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n\n                              <CInput name=\"name_ar\" required\n                                onChange={handleData}\n\n                                placeholder=\"Arabic Name\" value={upData.name_ar} />\n\n\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n\n\n\n\n\n                        <CCol md='6'  ><CCol md='12'  >\n                          <CFormGroup row >\n                            <CLabel col md={12}>{i18n.language == 'ar' ? `الشعار` : `Logo`}</CLabel>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInputFile required accept=\"image/*\" custom id=\"custom-file-input\" onChange={(e) => { handleImg(e) }} />\n\n                              <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\n                                {pickedImg ? pickedImg.name : i18n.language == 'ar' ? `اختر صورة ...` : `Choose image ...`}\n\n                              </CLabel>\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>  </CCol>\n                        <CCol md='6'>\n                          {pickedImg ? <img className=\"imgLogo\" src={URL.createObjectURL(pickedImg)}></img> :\n                            null}\n                        </CCol>\n\n\n\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage &&\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"danger\"\n                            // closeButton\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          >\n\n                            {Object.keys(errorMessage).map((item, i) => (\n\n                              <>{errorMessage[item]}<br /></>\n\n                            ))}\n                          </CAlert>}\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            Save\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\nexport default AddNewCompany\n"],"sourceRoot":""}