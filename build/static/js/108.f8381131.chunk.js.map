{"version":3,"sources":["views/purchases/purchases.js"],"names":["Purchases","history","useHistory","useState","data","setData","refresh","currentPage","setCurrentPage","totalPages","pageStatus","setPageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","console","log","message","payload","removeItem","clear","push","fetchFAQs","activeUser","setActiveUser","xl","className","items","fields","hover","striped","sorter","itemsPerPage","pagination","columnFilter","scopedSlots","item","checked_out","color","is_offer_used","orders","length","user","first_name","last_name","onClick","handleShow","align","addListClass","activePage","pages","onActivePageChange","md","lg","id","total_cost","created_at","slice","user_id","middle_name","email","phone","is_email_verified","map","order","index","link","target","rel","href","delay","details","charge","start_count","status","remains","service","name_en","quantity","short_description_en","old_price","new_price"],"mappings":"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","file":"static/js/108.f8381131.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton\n} from '@coreui/react'\nimport '../../globalVar'\nimport './purchases.scss'\n\n\n\nconst Purchases = () => {\n  const history = useHistory()\n\n  \n  const [data,setData]=useState('')\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState()\n  const[succesAdd,setSuccessAdd]=useState()\n  const[loading,setLoading]=useState('')\n  const [pageStatus,setPageStatus]=useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n\n\n  useEffect(async()=>{\n    const fetchFAQs=async(e)=>{\n  \n  \n    \n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/purchases/viewAllPurchases`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n                       // \"Content-Type\": \"application/json\",\n                      //'Access-Control-Allow-Origin': 'https://localhost:3000',\n                      // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n  \n      \n        }\n      );\n      const response = await responsee.json();\n      // console.log('response',response);\n      console.log('Purchases',response);\n    if(response.message== \"Purchases retrieved successfully!\"){\n     setData(response.payload)\n    //  setTotalPages(response.payload.last_page)\n  \n    }\n      if(response.message&&response.message==\"Unauthorized or invalid token!\"){\n      localStorage.removeItem(\"token\");\n      localStorage.clear()\n   \n    history.push(\"/login\");\n      }\n     \n    } catch (err) {\n      console.log(err);\n     \n    }\n  \n    // setLoading(false)\n    \n    \n    }\n  \n    fetchFAQs()\n  },[refresh])\n\n  \nconst handleAcivate=async(id)=>{\n  document.getElementById('root').style.opacity=0.75;\n   try {\n     const responsee = await fetch(\n       `${global.apiUrl}/users/activateUser?user_id=${id}`,\n       {\n         method: \"GET\",\n         headers: {\n           Authorization: \"Bearer \" + userToken,\n \n           Accept: \"application/json\",\n         },\n \n     \n       }\n     );\n     const response = await responsee.json();\n     \n     console.log(response);\n \n     if(response.message){\n      setRefresh(!refresh)\n  document.getElementById('root').style.opacity=1;\n    \n      }\n \n   // if(response){\n   //  setfetchedData(response)\n   //  setTotalPages(Math.ceil(response.length/12))\n   //  console.log(Math.ceil(response.length/12))\n   // }\n     if(response.message&&response.message==\"Unauthorized or invalid token!\"){\n  document.getElementById('root').style.opacity=1;\n \n     localStorage.removeItem(\"token\");\n     localStorage.clear()\n  \n   history.push(\"/login\");\n     }\n    \n   } catch (err) {\n     console.log(err);\n    \n   }\n   document.getElementById('root').style.opacity=1;\n \n }\n const [activeUser,setActiveUser]=useState('')\n const handleShow=(item)=>{\n   setActiveUser(item)\n   setPageStatus(1)\n }\n const handleBack=(item)=>{\n  setActiveUser('')\n  setPageStatus(0)\n}\n  return (\n    \n    <CRow>\n      {pageStatus==0&&\n       <CCol xl={12}>\n       <CCard>\n         <CCardHeader>\n         Purchases\n     \n         </CCardHeader>\n         <CCardBody className='usersTabel'>\n    { data&&    <CDataTable\n           items={data}\n           fields={['id','user_id','user','total_cost', 'checked_out','offer_used','orders','actions']}\n           hover\n           striped\n           sorter\n           itemsPerPage={12}\n           pagination\n           columnFilter\n          \n           // clickableRows\n           // onRowClick={(item) => history.push(`/users/${item.id}`)}\n           scopedSlots = {{\n             'checked_out':\n               (item)=>(\n                 <td>\n                   {item.checked_out==1?  <CBadge color='primary'>\n                     Yes \n                   </CBadge>\n                   :\n                   <CBadge color='dark'>\n                No\n                 </CBadge>\n                   }\n      \n                 </td>\n               ),\n               'offer_used':\n               (item)=>(\n                 <td>\n                   {item.is_offer_used==1?  <CBadge color='primary'>\n                         Yes \n                   </CBadge>\n                   :\n                   <CBadge color='dark'>\n                          No\n                 </CBadge>\n                   }\n      \n                 </td>\n               ),\n               'orders':\n               (item)=>(\n                 <td>\n                   {item.orders?  <>\n                        {item.orders.length}\n                  </>\n                   :\n               <>-</>\n                   }\n      \n                 </td>\n               ),\n               'user':\n               (item)=>(\n                 <td>\n                  \n                {item.user.first_name+' '+item.user.last_name}\n                 </td>\n               ),\n               'actions':\n               (item)=>(\n                 <td>\n               <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"  onClick={()=>handleShow(item)}  >Show....</CBadge> \n                  \n                 </td>\n               ),\n\n           }}\n         />}\n        {totalPages&&      <CPagination\n           align=\"center\"\n           addListClass=\"some-class\"\n           activePage={currentPage}\n           pages={totalPages}\n           onActivePageChange={setCurrentPage}\n           className='faqsPage'\n         />}\n         </CCardBody>\n       </CCard>\n     </CCol>\n      }\n      {\n        pageStatus==1&&activeUser&&\n        <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n          <CRow className=\"justify-content-center row-gap-15 \">\n            \n            <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n            {/* {activeUser.first_name+' ' +activeUser.last_name} */}\n            </CCol>\n            <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\n            <CButton color=\"success\"  className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n           onClick={()=>handleBack()} >Back\n                  </CButton>\n         \n            </CCol>\n            </CRow>\n      \n          </CCardHeader>\n          <CCardBody className=''>\n        \n\n          <CRow>\n          <CCol lg={6}>\n        <strong>Purchase informations</strong>\n              <table className=\"table table-striped table-hover\">\n                <tbody>\n                      \n                        <tr >\n                          <td>Purchase ID</td>\n                          <td><strong>{activeUser.id}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Total Cost</td>\n                          <td><strong>{activeUser.total_cost}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Checked Out</td>\n                          <td><strong>     {activeUser.checked_out==1?  'Yes':'No'}</strong></td>\n                    </tr>\n                        <tr >\n                          <td>Offer</td>\n                          <td><strong>     {activeUser.is_offer_used==1?'Yes':'No'}</strong></td>\n                        </tr>\n                    \n                        <tr >\n                          <td>Orders</td>\n                          <td><strong>{activeUser.orders? <>{activeUser.orders.length}</>:<>-</>}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Created At</td>\n                          <td><strong>{activeUser.orders? <>{activeUser.created_at.slice(0,10)}</>:<>-</>}</strong></td>\n                        </tr>\n                    \n\n                  \n                </tbody>\n              </table>\n              </CCol>\n      <CCol lg={6}>\n        <strong>User informations</strong>\n              <table className=\"table table-striped table-hover info_table\">\n                <tbody>\n                      \n                        <tr >\n                          <td>User ID</td>\n                          <td><strong>{activeUser.user_id}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>User Name</td>\n                          <td><strong> {activeUser.user.first_name+' '+activeUser.user.last_name}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Middle Name</td>\n                          <td><strong>{activeUser.user.middle_name?`${activeUser.user.middle_name}`:'-'}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Email</td>\n                          <td><strong>{activeUser.user.email}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Phone</td>\n                          <td><strong>{activeUser.user.phone}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Email Verificaton</td>\n                          <td><strong>{activeUser.user.is_email_verified==1?'Verified':'Not Verified'}</strong></td>\n                        </tr>\n\n                  \n                </tbody>\n              </table>\n              </CCol>\n          \n    </CRow>  \n<CRow>\n  <CCol md='12'><strong>Order Informations</strong></CCol>\n\n</CRow>\n\n{activeUser.orders&&activeUser.orders.map((order,index)=>{\n  return(\n    <CRow className='orderRow' key={order.id}>\n     <CCol lg={6}>\n        <strong>Order{' '+(index+1)}</strong>\n              <table className=\"table table-striped table-hover info_table\">\n                <tbody>\n                      \n                        <tr >\n                          <td>ID</td>\n                          <td><strong>{order.id}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Link</td>\n                          <td><strong>{order.link?\n                          <a target=\"_blank\" rel=\"noopener noreferrer\" href={order.link}>{order.link}</a>\n                          \n                          :'-'}</strong></td>\n\n                        </tr>\n                        <tr >\n                          <td>Delay</td>\n                          <td><strong>{order.delay}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Details</td>\n                          <td><strong>{order.details?`Charge: ${order.details.charge}`:'-'}</strong>\n                         {' , '} <strong>{order.details?`Start Count: ${order.details.start_count}`:'-'}</strong>{' , '}\n                          \n                          <strong>{order.details?`status: ${order.details.status}`:'-'}</strong>{' , '}\n                          <strong>{order.details?`Remains: ${order.details.remains}`:'-'}</strong>{' , '}\n                          </td>\n                        </tr>\n                        <tr >\n                          <td>Created_At</td>\n                          <td><strong>{order.created_at.slice(0,10)}</strong></td>\n                        </tr>\n                     \n\n                  \n                </tbody>\n              </table>\n              </CCol>\n              <CCol lg={6}>\n        <strong>Order{' '+(index+1) +' service'}</strong>\n              <table className=\"table table-striped table-hover info_table\">\n                <tbody>\n                      \n                        <tr >\n                          <td> ServiceID</td>\n                          <td><strong>{order.service.id}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Name</td>\n                          <td><strong>{order.service.name_en}</strong></td>\n\n                        </tr>\n                        <tr >\n                          <td>Quantity</td>\n                          <td><strong>{order.service.quantity}</strong></td>\n                        </tr>\n                     \n                        <tr >\n                          <td>Description</td>\n                          <td><strong>{order.service.short_description_en}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Price</td>\n                          <td><strong>Price:{' '+order.service.old_price} {order.service.new_price?' , New Price :'+order.service.new_price:null  }</strong></td>\n                        </tr> \n                        {/* <tr >\n                          <td>Email Verificaton</td>\n                          <td><strong>{activeUser.user.is_email_verified==1?'Verified':'Not Verified'}</strong></td>\n                        </tr> */}\n\n                  \n                </tbody>\n              </table>\n              </CCol>\n    \n    </CRow>\n  )\n})}\n<CRow>\n\n\n</CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n\n      }\n     \n    </CRow>\n  )\n}\n\nexport default Purchases\n"],"sourceRoot":""}