{"version":3,"sources":["views/companies/companies/companies.js","reusable/DocsLink.js"],"names":["Companies","useTranslation","i18n","history","useHistory","useState","small","setSmall","large","currentPage","setTotalPages","data","setData","refresh","setRefresh","setErrorMessage","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","console","log","success","temp","payload","map","item","index","push","name_ar","name_en","categories","length","cat","last_page","message","removeItem","clear","fetchcompanies","language","itemToDelete","setItemToDelete","handleDelete","document","getElementById","style","opacity","id","FindByAttributeValue","attribute","value","element_type","All","getElementsByTagName","i","getAttribute","disabled","className","md","lg","xl","color","onClick","items","fields","label","key","hover","striped","pagination","sorter","itemsPerPage","columnFilter","scopedSlots","src","logo","handleShow","show","onClose","size","closeButton","DocsLink","props","name","text","rest","href","rel","target","React","memo"],"mappings":"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","file":"static/js/24.eec58995.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CCollapse,\n  CPagination,\n  CProgress,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CBadge,\n  CDataTable,\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './companies.scss'\nimport { CAlert } from '@coreui/react'\nimport '../../../globalVar'\nimport { DocsLink } from 'src/reusable'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nconst Companies = () => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [modal, setModal] = useState(true)\n  const [small, setSmall] = useState(false)\n  const [large, setLarge] = useState(false)\n  const [danger, setDanger] = useState(false)\n  const [visible, setVisible] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [total, setTotal] = useState()\n  const [totalPages, setTotalPages] = useState()\n  const [accordion, setAccordion] = useState()\n  const [data, setData] = useState('')\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [errorPass, setErrorPass] = useState();\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const [pageStatus, setPageStatus] = useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n\n\n  useEffect(async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    const fetchcompanies = async (e) => {\n\n\n\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/companies`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              // \"Content-Type\": \"application/json\",\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\n              // 'Access-Control-Allow-Credentials': 'true',\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n        const response = await responsee.json();\n        // console.log('response',response);\n        console.log('companies', response);\n        if (response.success) {\n          let temp = []\n\n          await response.payload.map((item, index) => {\n\n            temp.push({\n\n\n              ...item,\n\n              \"الاسم العربي\": item.name_ar,\n              \"الاسم الانكليزي\": item.name_en,\n\n              \"التصنيف\": item.categories.length > 0 ? item.categories.map((cat, index) => {\n                return (cat.name_en)\n              })\n                :\n                \"No Category\"\n\n\n            })\n\n          })\n          setData(temp)\n\n          setTotalPages(response.payload.last_page)\n\n        }\n        if (response.message && response.message == \"Unauthorized.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n      // setLoading(false)\n\n\n    }\n\n    fetchcompanies()\n  }, [currentPage, refresh, i18n.language])\n  const handleBack = () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    setPageStatus(0)\n  }\n  const [itemToDelete, setItemToDelete] = useState('')\n  const handleShow = (item) => {\n    setSmall(!large)\n    setItemToDelete(item)\n  }\n  const handleDelete = async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/companies/${itemToDelete.id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success == true && response.payload) {\n        setSmall(!small)\n        document.getElementById('root').style.opacity = 1;\n\n        setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n  function FindByAttributeValue(attribute, value, element_type) {\n    element_type = element_type || \"*\";\n    var All = document.getElementsByTagName(element_type);\n    for (var i = 0; i < All.length; i++) {\n      if (All[i].getAttribute(attribute) == value) { All[i].disabled = true; }\n    }\n  }\n  FindByAttributeValue(\"aria-label\", \"column name: 'الشعار' filter input\", \"input\")\n  FindByAttributeValue(\"aria-label\", \"column name: 'عمليات' filter input\", \"input\")\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n      <CContainer className='p-0'>\n\n        {pageStatus == 0 &&\n          <CCard className=\"\">\n\n            <CCardHeader>\n              <CRow className=\"justify-content-center row-gap-15 \">\n\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                  Categories\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\n                  <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                    onClick={() => history.push('/companies/AddNewCompany')} >\n                    Add New Category\n                  </CButton>\n\n                </CCol>\n              </CRow>\n            </CCardHeader>\n\n            <CCardBody className=\"p-1\">\n              <CRow className=\"justify-content-center\">\n                <CCol md=\"12\">\n                  <CCard>\n\n                    <CCardBody className='compTabel'>\n\n                      {data && <CDataTable\n                        items={data}\n                        fields={['id',\n                          { label: \"Arabic Name\", key: 'الاسم العربي' },\n                          { label: \"English Name\", key: 'الاسم الانكليزي' },\n                          { label: \"Category\", key: 'التصنيف' },\n                          { label: \"Logo\", key: 'الشعار' },\n                          { label: \"Actions\", key: 'عمليات' },\n                        ]}\n                        hover\n                        striped\n                        pagination\n                        // tableFilter={{\n                        //   placeholder: \". . .\",\n                        //   label: \"بحث:\",\n                        // }}\n                        sorter\n                        itemsPerPage={12}\n                        columnFilter\n                        scopedSlots={{\n\n                          'الشعار':\n                            (item) => (\n                              <td>\n                                <img className='logoAll' src={global.apiUrl + item.logo} />\n                              </td>\n                            ),\n\n\n                          'عمليات':\n                            (item) => (\n                              <td>\n\n\n                                <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\n                                  onClick={() => handleShow(item)}\n                                >{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CBadge>\n\n\n                                <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\n                                  onClick={() => history.push(`/companies/Company/${item.id}`)}\n                                >{i18n.language == 'ar' ? \"عرض .....\" : \"Show....\"}</CBadge>\n\n                              </td>\n                            ),\n\n                        }}\n                      />}\n\n\n\n                      {/* {totalPages && <CPagination\n                        align=\"center\"\n                        addListClass=\"some-class\"\n                        activePage={currentPage}\n                        pages={totalPages}\n                        onActivePageChange={setCurrentPage}\n                        className='faqsPage'\n                      />} */}\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n\n              </CRow>\n            </CCardBody>\n\n          </CCard>}\n\n\n\n\n\n\n\n\n\n\n      </CContainer>\n\n      <CModal\n        show={small}\n        onClose={() => setSmall(!small)}\n        size=\"sm\"\n        color='danger'\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>{i18n.language == 'ar' ? \"Delete Company\" : \"Delete Company\"}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {`Are you sure you want to delete a company(  ${itemToDelete.name_en} )`}\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => handleDelete()}>Delete </CButton>{' '}\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>Cancel</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Companies\n\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)"],"sourceRoot":""}