{"version":3,"sources":["views/reciepients/ReciepientUpdate/ReciepientUpdate.js","views/reciepients/ReciepientUpdate/Attachments.js","views/reciepients/ReciepientUpdate/UpdateCategory.js","../node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"names":["theme","createTheme","direction","cacheRtl","createCache","key","stylisPlugins","prefixer","rtlPlugin","ReciepientUpdate","match","useTranslation","i18n","history","useHistory","useState","visible","setVisible","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","customer","setCustomer","allCustomers","setAllCustomers","countries","setCountries","addresses","setAddresses","name_ar","name_en","upData","setUpData","doneCountries","setDoneCountries","doneUsers","setDoneUsers","useEffect","a","fetchUsers","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","success","payload","filter","item","admin","message","removeItem","clear","push","console","log","fetchCountries","getUser","id","status","customer_id","temp","arr","map","index","city","itemm","Code","country_code","fetchCitiesForStart","country","cities","new","params","handleData","target","name","value","handleAddUser","preventDefault","data","length","stringify","_method","body","messages","code","fetchCities","handleCountry","handleCity","handleAddressData","handleMoreAddress","Math","floor","random","line_1","line_2","line_3","state_code","post_code","type","main","removeAddress","className","md","lg","xl","language","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","dir","size","options","autoHighlight","rtl","onChange","event","newValue","getOptionLabel","option","renderOption","props","component","sx","mr","flexShrink","email","phone","renderInput","required","label","inputProps","autoComplete","placeholder","Fragment","Name","width","src","toLowerCase","srcSet","alt","InternationalCallingNumber","custom","show","onShowChange","Object","keys","i","block","Attachments","pickedImg","setPickedImg","inputType","setInputType","FormData","append","errors","inputModalType","setInputModalType","modal","setModal","updateFile","setUpdatefile","activeItem","setActiveItem","handleSetItemToUpdate","file","handleUPdateData","handleDeleteItem","document","getElementById","style","opacity","handleUpdateItem","attachments","min","disabled","defaultValue","href","class","typeChange","col","files","handleImg","variant","onClose","closeButton","typeModalChange","handleFile","UpdateCat","small","setSmall","itemToDelete","setItemToDelete","category","setCategory","categories","setCategories","fetchitems","handleAddToCat","handleDelete","cat","borderRadius","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","hasSymbol","Symbol","for","ThemeProvider","children","localTheme","outerTheme","useTheme","React","output","mergeOuterLocalTheme","nested","_jsx","ThemeContext","Provider","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider"],"mappings":"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","file":"static/js/19.a25645d2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './ReciepientUpdate.scss'\nimport CustomerUpdate from './CustomerUpdate'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { prefixer } from 'stylis';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst theme = createTheme({\n  direction: 'rtl', // Both here and <body dir=\"rtl\">\n});\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\n\n\nconst ReciepientUpdate = ({ match }) => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [fetchedData, setfetchedData] = useState([])\n  const [refresh, setRefresh] = useState('')\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  const [customer, setCustomer] = useState(null)\n  const [allCustomers, setAllCustomers] = useState([])\n  const [countries, setCountries] = useState([])\n  const [addresses, setAddresses] = useState([])\n  const [upData, setUpData] = useState({\n\n    name_ar: '',\n    name_en: '',\n\n  })\n  const { name_ar,\n    name_en,\n  } = upData;\n\n  const [doneCountries, setDoneCountries] = useState(false)\n  const [doneUsers, setDoneUsers] = useState(false)\n\n\n\n  useEffect(async () => {\n    const fetchUsers = async (e) => {\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/users?paginate=0`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              Accept: \"application/json\",\n            },\n\n          }\n        );\n        const response = await responsee.json();\n\n\n        if (response.success) {\n\n\n          await setAllCustomers(response.payload.filter(item => item.admin == 0))\n\n          setDoneUsers(true)\n        }\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n\n\n    }\n\n    await fetchUsers()\n    const fetchCountries = async (e) => {\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/shipping/countries`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              // \"Content-Type\": \"application/json\",\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\n              // 'Access-Control-Allow-Credentials': 'true',\n              Accept: \"application/json\",\n            },\n          }\n        );\n\n        const response = await responsee.json();\n\n\n        if (response.success) {\n          setCountries(response.payload)\n          setDoneCountries(true)\n        }\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n          history.push(\"/login\");\n        }\n      } catch (err) { console.log(err); }\n\n    }\n\n    await fetchCountries()\n\n  }, [])\n  useEffect(async () => {\n\n\n    if (doneCountries == true && doneUsers == true) {\n      const getUser = async (id) => {\n\n        try {\n          const responsee = await fetch(\n            `${global.apiUrl}api/reciepients/${id}`,\n            {\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer \" + userToken,\n\n                Accept: \"application/json\",\n              },\n            }\n          );\n          if (responsee.status == 204) {\n\n          }\n          const response = await responsee.json();\n\n          if (response.success == true) {\n            setAddresses([])\n            setUpData({\n              name_ar: response.payload.name_ar,\n              name_en: response.payload.name_en,\n            })\n\n            setCustomer(allCustomers.filter(item => item.customer.id == response.payload.customer_id)[0])\n            let temp = {}\n            let arr = []\n            await response.payload.addresses.map(async (item, index) => {\n              temp = {\n                ...item,\n                city: item.city ? item.city : null,\n                country: countries.filter(itemm => itemm.Code == item.country_code)[0],\n                cities: await fetchCitiesForStart(item.country_code),\n                new: false\n              }\n              arr.push({ ...temp })\n              setAddresses([...arr])\n              setAddresses([...arr])\n\n            })\n\n            console.log(\"temp\", temp);\n\n          }\n        } catch (err) {\n          console.log(err);\n\n        }\n      }\n      await getUser(match.params.id)\n    }\n\n  }, [doneCountries, doneUsers, refresh])\n\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n  const [phones, setPhones] = useState([\"\"])\n\n\n\n\n\n\n  const handleAddUser = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    setErrorMessage('')\n    setSuccessAdd('')\n    let temp = []\n    let data = {}\n    addresses.filter(item => item.new == true).length > 0 && addresses.filter(item => item.new == true).map(item => {\n      temp.push(item)\n    })\n    if (temp.length > 0) {\n      data = JSON.stringify({\n        _method: 'put',\n        customer_id: customer.customer.id, name_ar,\n        name_en, addresses: temp\n      })\n    } else {\n      data = JSON.stringify({\n        _method: 'put',\n        customer_id: customer.customer.id, name_ar,\n        name_en\n      })\n    }\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/reciepients/${match.params.id}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\n            'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n\n\n      setVisible(10)\n      if (response.success) {\n        await setVisible(6)\n        setSuccessAdd(\"تمت تعديل مستلم بنجاح\")\n\n        setRefresh(!refresh)\n      }\n      else {\n        setVisible(10)\n        setErrorMessage(response.messages)\n      }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n  const fetchCitiesForStart = async (code) => {\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/shipping/cities?code=${code}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n        }\n      );\n      if (responsee.status == 204) {\n        return []\n      }\n      const response = await responsee.json();\n      if (response.success) {\n        return response.payload;\n\n      }\n\n    } catch (err) { console.log(err); }\n\n  }\n\n  const fetchCities = async (code, index) => {\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/shipping/cities?code=${code}&paginate=0`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n        }\n      );\n      if (responsee.status == 204) {\n        let temp = [...addresses]\n        temp[index].cities = []\n        setAddresses(...temp)\n      }\n      const response = await responsee.json();\n\n      if (response.success) {\n        let temp = [...addresses]\n        temp[index].cities = response.payload\n        setAddresses([...temp])\n\n      }\n\n    } catch (err) { console.log(err); }\n\n  }\n\n  const handleCountry = async (value, index) => {\n    let temp = [...addresses]\n    temp[index].country = value\n    temp[index].city = null\n    if (value != null) {\n      fetchCities(value.Code, index)\n      temp[index].country_code = value.Code\n    }\n    else {\n      temp[index].cities = []\n      temp[index].country_code = ''\n    }\n\n    setAddresses([...temp])\n\n  }\n  const handleCity = async (value, index) => {\n\n\n    let temp = [...addresses]\n    temp[index].city = value\n    setAddresses([...temp])\n  }\n  const handleAddressData = async (e, index) => {\n\n    let temp = [...addresses]\n    temp[index][e.target.name] = e.target.value\n    setAddresses([...temp])\n  }\n\n  const handleMoreAddress = async () => {\n\n    let temp = [...addresses]\n    temp.push({\n      id: Math.floor(Math.random() * (10000 + 1)),\n      line_1: '',\n      line_2: '',\n      line_3: '',\n      city: null,\n      state_code: '',\n      post_code: '',\n      country_code: null,\n      country: null,\n      type: '',\n      main: '',\n      new: true,\n      cities: []\n    })\n    setAddresses([...temp])\n  }\n  const removeAddress = async (id) => {\n\n    let temp = [...addresses].filter((item => item.id != id))\n\n    setAddresses([...temp])\n  }\n\n\n  console.log('adresss', addresses.length, addresses)\n\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{i18n.language == 'ar' ? \"تعديل مستخدم\" : \"Update User\"}</strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                  onClick={() => history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\n                </CButton>\n\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAddUser(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n                        <CCol md='12'> <strong>معلومات المستلم</strong></CCol>\n                        <CCol md=\"12\" lg=\"12\" xl=\"12\">\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">الزبون</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n                              <CacheProvider value={cacheRtl}>\n                                <ThemeProvider theme={theme}>\n                                  <div dir=\"rtl\">\n                                    <Autocomplete\n                                      id=\"country-select-demo\"\n                                      size=\"small\"\n                                      options={allCustomers}\n                                      autoHighlight\n\n                                      dir='rtl'\n                                      rtl='true'\n                                      value={customer}\n                                      onChange={(event, newValue) => {\n                                        setCustomer(newValue);\n                                      }}\n                                      getOptionLabel={(option) => option.name + ' ( id : ' + option.id + ' )'}\n                                      renderOption={(props, option) => (\n                                        <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n\n                                          اسم : {option.name} / ( ايميل :{option.email}) / ( هاتف : {option.customer.phone ? option.customer.phone : '-'}) / ( Id: {option.id})\n                                        </Box>\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField\n                                          {...params}\n                                          required\n                                          label={i18n.language == 'ar' ? \"اختر زبون\" : \"Select Country\"}\n                                          inputProps={{\n                                            ...params.inputProps,\n                                            autoComplete: 'new-password', // disable autocomplete and autofill\n                                          }}\n                                        />\n                                      )}\n                                      required={true}\n                                    />\n\n                                  </div>\n                                </ThemeProvider>\n                              </CacheProvider>\n\n\n\n\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">اسم المستلم بالعربية</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_ar\"\n                                required\n                                onChange={handleData}\n                                placeholder={`اسم المستلم بالعربية`}\n                                value={upData.name_ar} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">اسم المستلم بالانكليزية</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={`اسم المستلم بالانكليزية`}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n\n                        {addresses.length > 0 && countries && allCustomers &&\n                          <>\n                            <CCol md='12'>\n                              <strong>العناوين</strong>\n                            </CCol>\n                            {\n                              addresses.length > 0 && countries && allCustomers && addresses.map((item, index) => {\n                                return (<React.Fragment key={item.id}>\n                                  <hr className='fullWidth' />\n\n                                  <CCol md='12'>\n                                    <CRow className=\" row-gap-15\">\n                                      <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                                        <strong>{`عنوان ${index + 1} ${item.new == true ? \"(جديد)\" : ''}`}</strong>\n                                      </CCol>\n\n                                      <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                                        {index > 0 && item.new == true && <CButton color=\"danger\" className='col-lg-3  col-md-3 col-sm-12 col-xs-12 updatebtn'\n                                          onClick={() => removeAddress(item.id)} >  حذف عنوان\n                                        </CButton>}\n\n                                      </CCol>\n                                    </CRow>\n\n\n\n                                  </CCol>\n                                  <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">الدولة </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n                                        <CacheProvider value={cacheRtl}>\n                                          <ThemeProvider theme={theme}>\n                                            <div dir=\"rtl\">\n                                              <Autocomplete\n                                                id=\"country-select-demo\"\n                                                size=\"small\"\n                                                options={countries}\n                                                required\n                                                autoHighlight\n                                                dir='rtl'\n                                                rtl='true'\n                                                value={item.country ? item.country : null}\n                                                onChange={(event, newValue) => {\n                                                  handleCountry(newValue, index);\n                                                }}\n                                                getOptionLabel={(option) => option.Name + \"  \" + option.Code}\n                                                renderOption={(props, option) => (\n                                                  <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n                                                    <img\n                                                      loading=\"lazy\"\n                                                      width=\"20\"\n                                                      src={`https://flagcdn.com/w20/${option.Code.toLowerCase()}.png`}\n                                                      srcSet={`https://flagcdn.com/w40/${option.Code.toLowerCase()}.png 2x`}\n                                                      alt=\"\"\n                                                    />\n                                                    {option.Name} ({option.Code}) +{option.InternationalCallingNumber}\n                                                  </Box>\n                                                )}\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    required\n                                                    {...params}\n                                                    label={i18n.language == 'ar' ? \"اختر دولة\" : \"Select Country\"}\n                                                    inputProps={{\n                                                      ...params.inputProps,\n                                                      autoComplete: 'new-password', // disable autocomplete and autofill\n                                                    }}\n                                                  />\n                                                )}\n                                              />\n\n                                            </div>\n                                          </ThemeProvider>\n                                        </CacheProvider>\n                                      </CCol>\n                                    </CFormGroup>\n\n                                  </CCol>\n                                  <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">المدينة </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n                                        <CacheProvider value={cacheRtl}>\n                                          <ThemeProvider theme={theme}>\n                                            <div dir=\"rtl\">\n                                              <Autocomplete\n                                                id=\"country-select-demo\"\n                                                size=\"small\"\n                                                options={item.cities}\n                                                autoHighlight\n                                                dir='rtl'\n                                                rtl='true'\n                                                value={item.city}\n                                                onChange={(event, newValue) => {\n                                                  handleCity(newValue, index);\n                                                }}\n                                                getOptionLabel={(option) => option}\n\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    required\n                                                    {...params}\n                                                    label={i18n.language == 'ar' ? \"اختر مدينة\" : \"Select Country\"}\n                                                    inputProps={{\n                                                      ...params.inputProps,\n                                                      autoComplete: 'new-password', // disable autocomplete and autofill\n                                                    }}\n                                                  />\n                                                )}\n                                              />\n\n                                            </div>\n                                          </ThemeProvider>\n                                        </CacheProvider>\n\n\n\n\n                                      </CCol>\n                                    </CFormGroup>\n\n                                  </CCol>\n                                  <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">         السطر 1    </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n\n                                        <CInput name=\"line_1\"\n                                          required\n                                          autoComplete='off'\n                                          onChange={(e) => handleAddressData(e, index)}\n                                          placeholder={`السطر 1`}\n                                          value={item.line_1} />\n                                      </CCol>\n                                    </CFormGroup>\n                                  </CCol>\n                                  <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">   السطر 2</CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n\n                                        <CInput name=\"line_2\"\n                                          onChange={(e) => handleAddressData(e, index)}\n                                          placeholder={`السطر 2`}\n                                          value={item.line_2} />\n                                      </CCol>\n                                    </CFormGroup>\n                                  </CCol>\n                                  <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">      السطر 3    </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n\n                                        <CInput name=\"line_3\"\n                                          onChange={(e) => handleAddressData(e, index)}\n                                          placeholder={`السطر 3`}\n                                          value={item.line_3} />\n                                      </CCol>\n                                    </CFormGroup>\n                                  </CCol>\n                                  <CCol md=\"3\" lg=\"3\" xl=\"3\">\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">  رمز الولاية   </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n\n                                        <CInput name=\"state_code\"\n                                          onChange={(e) => handleAddressData(e, index)}\n                                          placeholder={`رمز الولاية`}\n                                          value={item.state_code} />\n                                      </CCol>\n                                    </CFormGroup>\n                                  </CCol>\n                                  <CCol md=\"3\" lg=\"3\" xl=\"3\">\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">الرمز البريدي  </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n\n                                        <CInput name=\"post_code\"\n\n                                          onChange={(e) => handleAddressData(e, index)}\n                                          placeholder={`الرمز البريدي`}\n                                          value={item.post_code} />\n                                      </CCol>\n                                    </CFormGroup>\n                                  </CCol>\n\n                                  <CCol md=\"3\" lg=\"3\" xl=\"3\">\n\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">\n                                          حالة العنوان </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n                                        <CSelect custom name=\"main\" id=\"select\"\n                                          required value={item.main} onChange={(e) => handleAddressData(e, index)}>\n                                          <option value='' >اختر</option>\n\n                                          <option value='1'>رئيسي</option>\n                                          <option value='0'> فرعي </option>\n\n\n                                        </CSelect>\n                                      </CCol>\n                                    </CFormGroup>\n\n                                  </CCol>\n\n                                  <CCol md=\"3\" lg=\"3\" xl=\"3\">\n\n                                    <CFormGroup row>\n                                      <CCol md=\"12\">\n                                        <CLabel htmlFor=\"text-input\">\n                                          النوع   </CLabel>\n                                      </CCol>\n                                      <CCol xs=\"12\" md=\"12\">\n                                        <CSelect custom name=\"type\" id=\"select\"\n                                          required value={item.type} onChange={(e) => handleAddressData(e, index)}>\n                                          <option value='' >اختر</option>\n\n                                          <option value='home'>منزل</option>\n                                          <option value='work'> عمل </option>\n                                          <option value='other'> مكان آخر </option>\n\n\n                                        </CSelect>\n                                      </CCol>\n                                    </CFormGroup>\n\n                                  </CCol>\n\n                                  <hr className='fullWidth' />\n                                </React.Fragment>)\n                              })\n                            }\n\n                          </>\n                        }\n\n                        <CCol md=\"12\" lg=\"12\" xl=\"12\" className='row-gap-15 col-gap-15'>\n\n                          <CButton color=\"primary\" type='button' className='col-lg-4  col-md-4 col-sm-12 col-xs-12 updatebtn'\n                            onClick={() => handleMoreAddress()} >  اضافة عنوان جديد\n                          </CButton>\n\n                        </CCol>\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage &&\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"danger\"\n                            // closeButton\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          >\n\n                            {Object.keys(errorMessage).map((item, i) => (\n\n                              <>{errorMessage[item]}<br /></>\n\n\n\n                            ))}\n                          </CAlert>}\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            حفظ\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ReciepientUpdate \n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardFooter,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CPagination,\r\n    CDataTable,\r\n    CSelect,\r\n    CFormText,\r\n    CTextarea,\r\n    CFormGroup,\r\n    CLabel,\r\n    CSwitch,\r\n    CInputFile,\r\n    CLink,\r\n    CFade,\r\n    CCollapse,\r\n    CBadge,\r\n    CRow,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { CAlert } from '@coreui/react'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst Attachments = ({ customer, setRefresh, refresh }) => {\r\n    const [t, i18n] = useTranslation();\r\n    const history = useHistory()\r\n    const [visible, setVisible] = useState(10)\r\n\r\n\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n    const [succesAdd, setSuccessAdd] = useState()\r\n    const [loading, setLoading] = useState('')\r\n    const tokenString = localStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    const [pickedImg, setPickedImg] = useState('')\r\n    const [inputType, setInputType] = useState('2')\r\n\r\n    const [upData, setUpData] = useState({\r\n\r\n        key: '',\r\n        value: '',\r\n\r\n    })\r\n    const { key, value } = upData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleData = (e) => {\r\n        setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n    }\r\n    // const [data, setData] = useState({ _method: 'put', })\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n        var data = new FormData()\r\n        data.append('customer_id', customer.id)\r\n        key && data.append('key', key)\r\n        inputType == 1 && value && data.append('value', value)\r\n        inputType == 0 && pickedImg && data.append('value', pickedImg)\r\n\r\n        try {\r\n            const responsee = await fetch(\r\n                `${global.apiUrl}api/attachments`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + userToken,\r\n                        // \"Content-Type\": \"application/json\",\r\n                        // 'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n                        // 'Access-Control-Allow-Credentials': 'true',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    body: data\r\n                    ,\r\n\r\n                }\r\n            );\r\n            const response = await responsee.json();\r\n            console.log('response', response);\r\n            console.log(response);\r\n            setVisible(10)\r\n            if (response.success) {\r\n                await setVisible(6)\r\n                setInputType('2')\r\n                setUpData({ key: '', value: '' })\r\n                setPickedImg('')\r\n                setSuccessAdd(\"تم اضافة حقل بنجاح\")\r\n                // setData({ _method: 'put', })\r\n                setRefresh(!refresh)\r\n\r\n\r\n            }\r\n            else {\r\n\r\n                setVisible(10)\r\n                setErrorMessage(response.errors)\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    const typeChange = (e) => {\r\n        setInputType(e.target.value)\r\n        setUpData({ ...upData, value: '' })\r\n        setPickedImg('')\r\n    }\r\n\r\n\r\n    const handleImg = (e) => {\r\n        if (e.target.files[0]) { setPickedImg(e.target.files[0]) }\r\n    }\r\n    console.log('data', upData)\r\n    const [inputModalType, setInputModalType] = useState('2')\r\n    const [modal, setModal] = useState(false)\r\n    const [updateFile, setUpdatefile] = useState('')\r\n    const [activeItem, setActiveItem] = useState({ id: '', key: '', value: \"\", type: '' })\r\n    const handleFile = (e) => {\r\n        if (e.target.files[0]) { setUpdatefile(e.target.files[0]) }\r\n    }\r\n    const handleSetItemToUpdate = async (item) => {\r\n        console.log(item)\r\n        await setActiveItem({\r\n            id: item.id,\r\n            key: item.key,\r\n            value: item.value,\r\n            type: item.file\r\n        })\r\n        setInputModalType(item.file)\r\n        await setModal(!modal)\r\n    }\r\n    const closeModal = () => {\r\n        setModal(false)\r\n        setActiveItem({ id: '', key: '', value: \"\", type: '' })\r\n        setUpdatefile('')\r\n    }\r\n    const handleUPdateData = (e) => {\r\n        setActiveItem({ ...activeItem, [e.target.name]: e.target.value })\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n    }\r\n    const typeModalChange = (e) => {\r\n        setInputModalType(e.target.value)\r\n        setActiveItem({ ...activeItem, value: '' })\r\n        setUpdatefile('')\r\n    }\r\n\r\n    const handleDeleteItem = async (id) => {\r\n        document.getElementById('root').style.opacity = 0.75;\r\n        try {\r\n            const responsee = await fetch(\r\n                `${global.apiUrl}api/attachments/${id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + userToken,\r\n\r\n                        Accept: \"application/json\",\r\n                    },\r\n\r\n\r\n                }\r\n            );\r\n            const response = await responsee.json();\r\n\r\n            console.log(response);\r\n\r\n            if (response.success) {\r\n                setRefresh(!refresh)\r\n                document.getElementById('root').style.opacity = 1;\r\n            }\r\n\r\n            if (response.message && response.message == \"Unauthenticated.\") {\r\n                document.getElementById('root').style.opacity = 1;\r\n\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.clear()\r\n\r\n                history.push(\"/login\");\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n    }\r\n\r\n    const handleUpdateItem = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n\r\n        const data = new FormData();\r\n        data.append(\"_method\", 'put');\r\n        data.append(\"key\", activeItem.key);\r\n        inputModalType == 0 && activeItem.value && data.append('value', activeItem.value)\r\n        inputModalType == 1 && updateFile && data.append('value', updateFile)\r\n        try {\r\n            const responsee = await fetch(\r\n                `${global.apiUrl}api/attachments/${activeItem.id}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + userToken,\r\n                        // \"Content-Type\": \"application/json\",\r\n                        //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n                        // 'Access-Control-Allow-Credentials': 'true',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    body: data\r\n                    ,\r\n\r\n                }\r\n            );\r\n            const response = await responsee.json();\r\n            console.log('responseeeeeeeeeeee', response);\r\n\r\n            setVisible(10)\r\n            if (response.success) {\r\n                await setVisible(6)\r\n                setSuccessAdd(\"تم التعديل بنجاح\")\r\n\r\n                setRefresh(!refresh)\r\n\r\n                setLoading(false)\r\n                setVisible(6)\r\n\r\n\r\n            }\r\n            else {\r\n                setVisible(10)\r\n                setErrorMessage(response.errors)\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    return (\r\n\r\n\r\n        <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n                <CForm onSubmit={(e) => { handleAddUser(e) }}>\r\n                    <CCardBody>\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <CRow >\r\n\r\n\r\n                                    {/* className=\"justify-content-center\" */}\r\n\r\n                                    <CCol md='12'> <strong>معلومات اضافية</strong></CCol>\r\n                                    <CCol md='12'>\r\n\r\n                                        {customer.attachments && customer.attachments.map((item, index) => {\r\n                                            return (\r\n                                                <CRow key={(item.id + item.value + item.key)} >\r\n                                                    <CCol md=\"3\" lg=\"3\" xl=\"3\">\r\n\r\n                                                        <CFormGroup row>\r\n                                                            <CCol md=\"12\">\r\n                                                                <CLabel htmlFor=\"text-input\">حقل ({index + 1}) </CLabel>\r\n                                                            </CCol>\r\n                                                            <CCol xs=\"12\" md=\"12\">\r\n                                                                <CInput\r\n                                                                    //   onChange={(e) => handleChange(index, e.target.name, e.target.value)}\r\n                                                                    // type='number'\r\n                                                                    required\r\n                                                                    min=\"0\"\r\n                                                                    name=\"quantity\"\r\n                                                                    disabled\r\n\r\n                                                                    //   placeholder={`(min: ${activeService.original_min}),(max:${activeService.original_max})`}\r\n\r\n                                                                    defaultValue={item.key} />\r\n\r\n                                                            </CCol>\r\n                                                        </CFormGroup>\r\n\r\n\r\n\r\n                                                    </CCol>\r\n                                                    {item.file == 0 ?\r\n\r\n                                                        <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n\r\n                                                            <CFormGroup row>\r\n                                                                <CCol md=\"12\">\r\n                                                                    <CLabel htmlFor=\"text-input\">النص</CLabel>\r\n                                                                </CCol>\r\n                                                                <CCol xs=\"12\" md=\"12\">\r\n                                                                    <CInput id=\"text-input\"\r\n                                                                        required\r\n                                                                        //   min='0'\r\n                                                                        disabled\r\n                                                                        //   onChange={(e) => handleChange(index, e.target.name, e.target.value)}\r\n                                                                        //   type='number'\r\n                                                                        name=\"old_price\" placeholder=\"Price\" defaultValue={item.value} />\r\n\r\n                                                                </CCol>\r\n                                                            </CFormGroup>\r\n\r\n\r\n\r\n                                                        </CCol>\r\n                                                        :\r\n                                                        <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n\r\n                                                            <CFormGroup row>\r\n                                                                <CCol md=\"12\">\r\n                                                                    <CLabel htmlFor=\"text-input\">ملف</CLabel>\r\n                                                                </CCol>\r\n                                                                <CCol xs=\"12\" md=\"12\">\r\n                                                                    <a\r\n                                                                        className=\"updateRef\"\r\n\r\n                                                                        href={`${global.apiUrl + item.value}`} target=\"_blank\">رابط الملف\r\n                                                                    </a>\r\n\r\n                                                                </CCol>\r\n                                                            </CFormGroup>\r\n\r\n\r\n\r\n                                                        </CCol>\r\n\r\n                                                    }\r\n\r\n                                                    <CCol md='2' className='col-md-2'>\r\n                                                        <CFormGroup row>\r\n                                                            <CCol md=\"12\">\r\n                                                                <CLabel htmlFor=\"text-input\">\r\n                                                                    تعديل\r\n                                                                </CLabel>\r\n                                                            </CCol>\r\n                                                            <CCol xs=\"12\" md=\"12\">\r\n\r\n\r\n                                                                <CButton color=\"primary\" className='col-lg-10 col-md-10 col-sm-12 col-xs-12 '\r\n                                                                    onClick={() => handleSetItemToUpdate(item)}\r\n                                                                > تعديل\r\n                                                                </CButton>\r\n\r\n                                                            </CCol>\r\n                                                        </CFormGroup>\r\n\r\n                                                    </CCol>\r\n\r\n\r\n\r\n\r\n\r\n                                                    <CCol md='2' className='col-md-2'>\r\n                                                        <CFormGroup row>\r\n                                                            <CCol md=\"12\">\r\n                                                                <CLabel htmlFor=\"text-input\">\r\n                                                                    حذف\r\n                                                                </CLabel>\r\n                                                            </CCol>\r\n                                                            <CCol xs=\"12\" md=\"12\">\r\n\r\n\r\n                                                                <CButton color=\"danger\" className='col-lg-5 col-md-5 col-sm-6 col-xs-6 '\r\n                                                                    onClick={() => handleDeleteItem(item.id)}\r\n                                                                ><i class=\"fa fa-trash\" aria-hidden=\"true\" ></i>\r\n                                                                </CButton>\r\n\r\n                                                            </CCol>\r\n                                                        </CFormGroup>\r\n\r\n                                                    </CCol>\r\n                                                </CRow>\r\n\r\n\r\n\r\n                                            )\r\n                                        })}\r\n\r\n                                    </CCol>\r\n\r\n\r\n\r\n\r\n\r\n                                    <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                                        <CFormGroup row>\r\n                                            <CCol md=\"12\">\r\n                                                <CLabel htmlFor=\"text-input\"> اسم الحقل</CLabel>\r\n                                            </CCol>\r\n                                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                                                <CInput name=\"key\"\r\n                                                    autoComplete='off'\r\n                                                    onChange={handleData}\r\n                                                    placeholder={`اسم الحقل`}\r\n                                                    value={upData.key} />\r\n                                            </CCol>\r\n                                        </CFormGroup>\r\n\r\n\r\n\r\n                                    </CCol>\r\n                                    <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n\r\n                                        <CFormGroup row>\r\n                                            <CCol md=\"12\">\r\n                                                <CLabel htmlFor=\"text-input\">\r\n                                                    نوع الحقل </CLabel>\r\n                                            </CCol>\r\n                                            <CCol xs=\"12\" md=\"12\">\r\n                                                <CSelect custom name=\"role\" id=\"select\"\r\n                                                    required value={inputType} onChange={(e) => typeChange(e)}>\r\n                                                    <option value='' >اختر</option>\r\n\r\n                                                    <option value='1'>نص</option>\r\n                                                    <option value='0'> ملف</option>\r\n\r\n\r\n                                                </CSelect>\r\n                                            </CCol>\r\n                                        </CFormGroup>\r\n\r\n                                    </CCol>\r\n                                    {inputType === \"1\" ? <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                                        <CFormGroup row>\r\n                                            <CCol md=\"12\">\r\n                                                <CLabel htmlFor=\"text-input\">{`النص`}</CLabel>\r\n                                            </CCol>\r\n                                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                                                <CInput name=\"value\"\r\n                                                    autoComplete='off'\r\n                                                    required\r\n                                                    type='text'\r\n                                                    onChange={handleData}\r\n                                                    placeholder={`النص`}\r\n                                                    value={upData.value} />\r\n                                            </CCol>\r\n                                        </CFormGroup>\r\n                                    </CCol> : null}\r\n                                    {inputType === \"0\" ? <CCol md='12'  ><CCol md='12'  >\r\n                                        <CFormGroup row >\r\n                                            <CLabel col md={12}> ملف</CLabel>\r\n                                            <CCol xs=\"12\" md=\"12\">\r\n                                                {/* accept=\"image/*\" */}\r\n                                                <CInputFile required custom id=\"custom-file-input\" onChange={(e) => { handleImg(e) }} />\r\n\r\n                                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                                    {pickedImg ? pickedImg.name : `اختر ملف ...`}\r\n\r\n                                                </CLabel>\r\n                                            </CCol>\r\n                                        </CFormGroup>\r\n                                    </CCol></CCol> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </CRow>\r\n\r\n\r\n                            </CCardBody>\r\n                            <CCardFooter className=\"p-4\">\r\n                                <CRow className=\"justify-content-center\">\r\n\r\n                                    {errorMessage &&\r\n                                        <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                            color=\"danger\"\r\n                                            // closeButton\r\n                                            show={visible}\r\n                                            // closeButton\r\n                                            onShowChange={setVisible}\r\n                                        >\r\n\r\n                                            {Object.keys(errorMessage).map((item, i) => (\r\n\r\n                                                <>{errorMessage[item]}<br /></>\r\n\r\n\r\n\r\n                                            ))}\r\n                                        </CAlert>}\r\n\r\n                                    {succesAdd &&\r\n\r\n                                        <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                            color=\"success\"\r\n                                            show={visible}\r\n                                            // closeButton\r\n                                            onShowChange={setVisible}\r\n                                        // closeButton\r\n                                        >\r\n                                            {succesAdd}\r\n                                        </CAlert>}\r\n\r\n                                    <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                                        {<CButton color=\"success\" block type='submit'>\r\n                                            حفظ\r\n                                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                                    </CCol>\r\n\r\n                                </CRow>\r\n                            </CCardFooter>\r\n                        </CCard>\r\n\r\n\r\n\r\n                    </CCardBody>\r\n\r\n                </CForm>\r\n            </CCol>\r\n\r\n            <CModal\r\n                show={modal}\r\n                onClose={setModal}\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>تعديل معلومات</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CRow  >\r\n\r\n                        <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                            <CFormGroup row>\r\n                                <CCol md=\"12\">\r\n                                    <CLabel htmlFor=\"text-input\"> اسم الحقل</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n\r\n                                    <CInput name=\"key\"\r\n                                        required\r\n                                        autoComplete='off'\r\n                                        onChange={(e) => handleUPdateData(e)}\r\n                                        placeholder={`اسم الحقل`}\r\n                                        value={activeItem.key} />\r\n\r\n                                </CCol>\r\n                            </CFormGroup>\r\n\r\n\r\n\r\n                        </CCol>\r\n                        <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n\r\n                            <CFormGroup row>\r\n                                <CCol md=\"12\">\r\n                                    <CLabel htmlFor=\"text-input\">\r\n                                        نوع الحقل </CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n                                    <CSelect custom name=\"role\" id=\"select\"\r\n                                        required value={inputModalType} onChange={(e) => typeModalChange(e)}>\r\n                                        <option value='' >اختر</option>\r\n\r\n                                        <option value='0'>نص</option>\r\n                                        <option value='1'> ملف</option>\r\n\r\n\r\n                                    </CSelect>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n\r\n                        </CCol>\r\n                        {inputModalType == \"0\" ? <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                            <CFormGroup row>\r\n                                <CCol md=\"12\">\r\n                                    <CLabel htmlFor=\"text-input\">{`النص`}</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n\r\n                                    <CInput name=\"value\"\r\n                                        autoComplete='off'\r\n                                        required\r\n                                        type='text'\r\n                                        onChange={(e) => handleUPdateData(e)}\r\n                                        placeholder={`النص`}\r\n                                        value={activeItem.value} />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol> : null}\r\n                        {inputModalType == \"1\" ? <CCol md='12'  ><CCol md='12'  >\r\n                            <CFormGroup row >\r\n                                <CLabel col md={12}> ملف</CLabel>\r\n                                <CCol xs=\"12\" md=\"12\">\r\n                                    {/* accept=\"image/*\" */}\r\n                                    <CInputFile required custom id=\"custom-file-input\" onChange={(e) => { handleFile(e) }} />\r\n\r\n                                    <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                        {updateFile ? updateFile.name : `اختر ملف ...`}\r\n\r\n                                    </CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol></CCol> : null}\r\n\r\n                    </CRow>\r\n                    <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage &&\r\n                            <CCol md='12'>\r\n\r\n                                <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                    color=\"danger\"\r\n                                    // closeButton\r\n                                    show={visible}\r\n                                    // closeButton\r\n                                    onShowChange={setVisible}\r\n                                >\r\n\r\n                                    {Object.keys(errorMessage).map((item, i) => (\r\n\r\n                                        <>{errorMessage[item]}<br /></>\r\n\r\n\r\n\r\n                                    ))}\r\n                                </CAlert>\r\n                            </CCol>\r\n                        }\r\n\r\n\r\n\r\n\r\n                        {succesAdd &&\r\n                            <CCol md='12'>\r\n                                <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                    color=\"success\"\r\n                                    show={visible}\r\n                                    // closeButton\r\n                                    onShowChange={setVisible}\r\n                                // closeButton\r\n                                >\r\n                                    {succesAdd}\r\n                                </CAlert>\r\n                            </CCol>\r\n\r\n\r\n\r\n\r\n                        }\r\n                    </CRow>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n\r\n                    <CButton color=\"primary\" onClick={(e) => { handleUpdateItem(e) }} >حفظ {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>}</CButton>{' '}\r\n                    <CButton\r\n                        color=\"secondary\"\r\n                        onClick={() => closeModal()}\r\n                    >الغاء</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n\r\n\r\n\r\n\r\n\r\n        </CRow>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Attachments\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardFooter,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CPagination,\r\n    CDataTable,\r\n    CSelect,\r\n    CFormText,\r\n    CTextarea,\r\n    CFormGroup,\r\n    CLabel,\r\n    CSwitch,\r\n    CInputFile,\r\n    CLink,\r\n    CFade,\r\n    CCollapse,\r\n    CBadge,\r\n    CRow,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { CAlert } from '@coreui/react'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst UpdateCat = ({ customer, setRefresh, refresh }) => {\r\n    const [t, i18n] = useTranslation();\r\n    const history = useHistory()\r\n    const [visible, setVisible] = useState(10)\r\n\r\n    const [modal, setModal] = useState(true)\r\n    const [small, setSmall] = useState(false)\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n    const [succesAdd, setSuccessAdd] = useState()\r\n    const [loading, setLoading] = useState('')\r\n    const tokenString = localStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    const [pickedImg, setPickedImg] = useState('')\r\n    const [inputType, setInputType] = useState('2')\r\n\r\n\r\n\r\n    const [itemToDelete, setItemToDelete] = useState('')\r\n\r\n    const [category, setCategory] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const fetchitems = async (e) => {\r\n\r\n\r\n\r\n            try {\r\n                const responsee = await fetch(\r\n                    `${global.apiUrl}api/categories??paginate=0`,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + userToken,\r\n                            // \"Content-Type\": \"application/json\",\r\n                            //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n                            // 'Access-Control-Allow-Credentials': 'true',\r\n                            Accept: \"application/json\",\r\n                        },\r\n                    }\r\n                );\r\n                const response = await responsee.json();\r\n                // console.log('response',response);\r\n                console.log('faqs', response);\r\n                if (response.success) {\r\n                    setCategories(response.payload)\r\n                    //  setTotalPages(response.payload.last_page)\r\n\r\n\r\n                }\r\n                if (response.message && response.message == \"Unauthenticated.\") {\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.clear()\r\n\r\n                    history.push(\"/login\");\r\n                }\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n\r\n            }\r\n\r\n            // setLoading(false)\r\n\r\n\r\n        }\r\n\r\n        fetchitems()\r\n    }, [refresh])\r\n\r\n\r\n    // const [data, setData] = useState({ _method: 'put', })\r\n    const handleAddToCat = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n        var data = new FormData()\r\n        data.append('customer_id', customer.id)\r\n        category != '' && data.append('category_id', category);\r\n\r\n\r\n        try {\r\n            const responsee = await fetch(\r\n                `${global.apiUrl}api/customers/attach/category`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + userToken,\r\n                        // \"Content-Type\": \"application/json\",\r\n                        // 'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n                        // 'Access-Control-Allow-Credentials': 'true',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    body: data\r\n                    ,\r\n\r\n                }\r\n            );\r\n            const response = await responsee.json();\r\n            console.log('response', response);\r\n            console.log(response);\r\n            setVisible(10)\r\n            if (response.success) {\r\n                setSuccessAdd(\"تمت اضافة تصنيف الى  الزبون بنجاح\")\r\n                setRefresh(!refresh)\r\n                setCategory('')\r\n                setVisible(7)\r\n\r\n\r\n            }\r\n            else {\r\n\r\n                setVisible(10)\r\n                setErrorMessage(response.messages)\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleShow = (item) => {\r\n        setSmall(!small)\r\n        setItemToDelete(item)\r\n    }\r\n    const handleDelete = async () => {\r\n        setErrorMessage('')\r\n        setSuccessAdd('')\r\n        document.getElementById('root').style.opacity = 0.75;\r\n        const data = new FormData();\r\n        data.append('customer_id', customer.id)\r\n        data.append('category_id', itemToDelete.id);\r\n\r\n        try {\r\n            const responsee = await fetch(\r\n                `${global.apiUrl}api/customers/detach/category`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + userToken,\r\n                        //  \"Content-Type\": \"application/json\",\r\n                        // 'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n                        // 'Access-Control-Allow-Credentials': 'true',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    body: data\r\n                    ,\r\n\r\n                }\r\n            );\r\n            const response = await responsee.json();\r\n            console.log('response', response);\r\n            console.log(response);\r\n            if (response.success == true && response.payload) {\r\n                setSmall(!small)\r\n                document.getElementById('root').style.opacity = 1;\r\n\r\n                setRefresh(!refresh)\r\n\r\n            }\r\n            else {\r\n                setErrorMessage(response.messages)\r\n                setSmall(!small)\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>         <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <CRow className=\"\">\r\n\r\n                            <CCol md=\"6\" lg=\"6\" xl=\"6\" >\r\n                                <strong> اضافة تصنيف </strong>\r\n                            </CCol>\r\n\r\n                        </CRow>\r\n\r\n                    </CCardHeader>\r\n                    <CCardBody className=''>\r\n\r\n                        <CForm onSubmit={(e) => { handleAddToCat(e) }}  >\r\n                            <CRow className=\"justify-content-center\" >\r\n\r\n                                <CCol md=\"8\" lg=\"8\" xl=\"8\">\r\n\r\n                                    <CFormGroup row>\r\n                                        {/* <CCol md=\"1\">\r\n                <CLabel htmlFor=\"text-input\">\r\n                  \r\n                </CLabel>\r\n              </CCol> */}\r\n                                        <CCol xs=\"10\" md=\"10\">\r\n                                            <CSelect custom name=\"country_id\"\r\n\r\n                                                required value={category} onChange={(e) => setCategory(e.target.value)}  >\r\n                                                <option value='' >\r\n                                                    اختر تصنيف\r\n                                                </option>\r\n                                                {categories.length > 0 && categories.map((cat) => {\r\n                                                    return (<option value={cat.id} key={cat.id}>\r\n                                                        {cat.name_ar}\r\n                                                    </option>)\r\n                                                })}\r\n\r\n                                            </CSelect>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n\r\n                                </CCol>\r\n\r\n\r\n\r\n                                <CCol md=\"4\" lg=\"4\" xl=\"4\" className='mr-t' >\r\n                                    {/* className=\" row-gap-15 col-gap-15 \" */}\r\n                                    <CButton color=\"success\" className='col-12' type='submit'\r\n                                    > إضافة   {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>}\r\n                                        {/* className='col-lg-2  col-md-2 col-sm-12 col-xs-12 ' */}\r\n                                    </CButton>\r\n\r\n                                </CCol>\r\n\r\n                            </CRow>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    {/* <CCardFooter className=\"p-4\"> */}\r\n                    <CRow className=\"justify-content-center\">\r\n\r\n                        <CCol md='12' >\r\n                            <CCol md='12' >\r\n\r\n                                {errorMessage &&\r\n\r\n\r\n                                    <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                        color=\"danger\"\r\n                                        // closeButton\r\n                                        show={visible}\r\n                                        // closeButton\r\n                                        onShowChange={setVisible}\r\n                                    >\r\n                                        {Object.keys(errorMessage).map((item, i) => (<>{errorMessage[item]}<br /></>))}\r\n                                    </CAlert>\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n                                {succesAdd &&\r\n\r\n\r\n                                    <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                                        color=\"success\"\r\n                                        show={visible}\r\n                                        // closeButton\r\n                                        onShowChange={setVisible}\r\n                                    // closeButton\r\n                                    >\r\n                                        {succesAdd}\r\n                                    </CAlert>\r\n                                }\r\n                            </CCol>\r\n\r\n                        </CCol>\r\n\r\n                    </CRow>\r\n\r\n\r\n                    {customer.categories && customer.categories.length > 0 &&\r\n                        <CCardFooter className=\"p-4\"> <CRow md='12' >\r\n                            <CCol md='12'> <strong>التصنيفات</strong> </CCol>\r\n                            {\r\n\r\n                                customer.categories.length > 0 && customer.categories.map((cat, index) => {\r\n                                    return (\r\n\r\n                                        <CCol key={cat.id} md='6' >\r\n\r\n\r\n                                            <ul className=\" card list-group list-group-flush\">\r\n                                                <li className=\"list-group-item arabic-align\">\r\n                                                    <strong>اسم عربي :{' '}</strong> {cat.name_ar}\r\n                                                    <br />\r\n                                                    <strong>  اسم انكليزي :  {' '}</strong>  {cat.name_en}</li>\r\n                                                {/* <CCol xs=\"12\" md=\"12\"> */}\r\n\r\n\r\n                                                <CButton color=\"secondary\" className='col-lg-12 col-md-12 col-sm-12 col-xs-12 '\r\n                                                    onClick={() => handleShow(cat)}\r\n                                                    style={{ borderRadius: '0' }} >\r\n                                                    إزلة التصنيف\r\n                                                </CButton>\r\n\r\n                                                {/* </CCol> */}\r\n                                            </ul>\r\n\r\n                                        </CCol>\r\n\r\n\r\n\r\n                                    )\r\n                                })}\r\n                        </CRow> </CCardFooter>}\r\n\r\n                    <CModal\r\n                        show={small}\r\n                        onClose={() => setSmall(!small)}\r\n                        size=\"sm\"\r\n                        color='danger'\r\n                    >\r\n                        <CModalHeader closeButton>\r\n                            <CModalTitle>  إزالة تصنيف </CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            {`هل انت متأكد أنك تريد حذف تصنيف الزبون (  ${itemToDelete.name_ar} )`}\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"danger\" onClick={() => handleDelete()}>حذف </CButton>{' '}\r\n                            <CButton color=\"secondary\" onClick={() => setSmall(!small)}>الغاء</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n\r\n                </CCard>\r\n\r\n\r\n\r\n            </CCol>       </CCol>\r\n\r\n\r\n        </CRow>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UpdateCat\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : {},\n    children: props.children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;"],"sourceRoot":""}