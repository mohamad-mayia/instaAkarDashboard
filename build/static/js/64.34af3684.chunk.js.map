{"version":3,"sources":["views/DynamicPages/UpdatePage/UpdatePage.js","views/DynamicPages/UpdatePage/editor.js"],"names":["UpdatePage","props","match","useTranslation","t","i18n","history","useHistory","refreshTokenHandler","useContext","ProfileContext","useState","visible","setVisible","setfetchedData","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userId","JSON","parse","title_ar","title_en","name","upData","setUpData","OrginalData","setOrginalData","dataText","setDataText","dataTextArabic","setDataTextArabic","useEffect","a","fetchSettings","e","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","message","temp","payload","filter","item","id","params","title","ar","en","body","console","log","handleData","target","value","addNewPage","preventDefault","data","FormData","append","error","errors","language","className","md","lg","xl","color","onClick","goBack","onSubmit","row","htmlFor","xs","required","onChange","placeholder","style","direction","Object","keys","map","i","Fragment","show","onShowChange","sm","block","type","ControlledEditor","onEditorStateChange","editorState","setState","draftToHtml","convertToRaw","getCurrentContent","state","EditorState","createWithContent","ContentState","createFromBlockArray","htmlToDraft","this","wrapperClassName","editorClassName","Component"],"mappings":"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","file":"static/js/64.34af3684.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CFormGroup,\r\n  CLabel,\r\n\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './UpdatePage.scss'\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ProfileContext } from 'src/App'\r\nimport '../../../globalVar'\r\nimport Editor from './editor'\r\nimport { useTranslation } from 'react-i18next';\r\nconst UpdatePage = ({ props, match }) => {\r\n\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [visible, setVisible] = useState(10)\r\n  // const [value, setValue] = useState()\r\n  const [fetchedData, setfetchedData] = useState('')\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const userId = localStorage.getItem(\"user_id\");\r\n  const user_id = JSON.parse(userId);\r\n  const [pageStatus, setPageStatus] = useState(0)\r\n  const [upData, setUpData] = useState({\r\n    title_ar: '',\r\n    title_en: '',\r\n    name: \"\"\r\n\r\n\r\n  })\r\n  const [OrginalData, setOrginalData] = useState({\r\n    title_ar: '',\r\n    title_en: '',\r\n\r\n\r\n\r\n  })\r\n  const { title_ar,\r\n    title_en,\r\n\r\n  } = upData;\r\n\r\n  const [dataText, setDataText] = useState('')\r\n  const [dataTextArabic, setDataTextArabic] = useState('')\r\n  useEffect(async () => {\r\n    const fetchSettings = async (e) => {\r\n\r\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/websitePages`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n\r\n              Accept: \"application/json\",\r\n            },\r\n\r\n\r\n          }\r\n        );\r\n        const response = await responsee.json();\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          return refreshTokenHandler(function () { fetchSettings(e) })\r\n        }\r\n        if (response.message && response.message == \"Success\") {\r\n          const temp = response.payload.filter(item => item.id == match.params.id)[0]\r\n          setfetchedData(response.payload)\r\n          setUpData({\r\n            title_ar: temp.title.ar\r\n            , title_en: temp.title.en,\r\n            name: temp.name\r\n          })\r\n          setDataText(temp.body.en)\r\n          setDataTextArabic(temp.body.ar)\r\n          setOrginalData(temp)\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n\r\n      // setLoading(false)\r\n\r\n\r\n    }\r\n\r\n    fetchSettings()\r\n  }, [refresh])\r\n\r\n\r\n  const [reload, setReload] = useState(true)\r\n  const reloader = async () => {\r\n\r\n    await setDataText('')\r\n    await setDataTextArabic('')\r\n    await setReload(!reload)\r\n  }\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n  const addNewPage = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n\r\n    const data = new FormData();\r\n    title_ar != OrginalData.title.ar && data.append('title[ar]', title_ar);\r\n    title_en != OrginalData.title.en && data.append('title[en]', title_en);\r\n    upData.name != OrginalData.name && data.append('name', upData.name);\r\n    dataTextArabic && data.append('body[ar]', dataTextArabic);\r\n    dataText && data.append('body[en]', dataText);\r\n    // data.append('_method', 'put');\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/websitePages/${match.params.id}?_method=put`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            Accept: \"application/json\",\r\n          },\r\n          body: data,\r\n\r\n        }\r\n      );\r\n      setLoading(false)\r\n      const response = await responsee.json();\r\n      setVisible(10)\r\n\r\n      if (response.message === \"Fail\") {\r\n        setErrorMessage(response.error);\r\n        return\r\n      }\r\n      else if (response.errors) {\r\n        setErrorMessage(response.errors);\r\n      }\r\n      else if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { addNewPage(e) })\r\n      }\r\n\r\n      if (response.message && response.message == \"Success\") {\r\n        setSuccessAdd(i18n.language === \"ar\" ? \"تم تعديل صفحة بنجاح\" : \" page has been updated successfully\")\r\n\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language === \"ar\" ? \"تعديل صفحة\" : \"Update Page\"}</strong>\r\n              </CCol>\r\n\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} > {t(\"Back\")}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CForm onSubmit={(e) => { addNewPage(e) }}>\r\n            <CCardBody className=\"p-4\">\r\n              <CRow>\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                  <CFormGroup row>\r\n                    <CCol md=\"12\">\r\n                      <CLabel htmlFor=\"text-input\">{i18n.language === \"ar\" ? \"اسم الصفحة\" : \"Page Name\"}</CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"12\">\r\n\r\n                      <CInput name=\"name\"\r\n                        required\r\n                        onChange={handleData}\r\n                        placeholder={i18n.language === \"ar\" ? \"اسم الصفحة\" : \"Page Name\"}\r\n                        value={upData.name} />\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                  <CFormGroup row>\r\n                    <CCol md=\"12\">\r\n                      <CLabel htmlFor=\"text-input\">{i18n.language === \"ar\" ? \"عنوان انكليزي\" : \"English Title\"}</CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"12\">\r\n\r\n                      <CInput name=\"title_en\"\r\n                        required\r\n                        onChange={handleData}\r\n                        placeholder={i18n.language === \"ar\" ? \"عنوان انكليزي\" : \"English Title\"}\r\n                        value={upData.title_en} />\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                  <CFormGroup row>\r\n                    <CCol md=\"12\">\r\n                      <CLabel htmlFor=\"text-input\">{i18n.language === \"ar\" ? \"عنوان عربي\" : \"Arabic Title\"} </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"12\">\r\n\r\n                      <CInput name=\"title_ar\"\r\n                        required\r\n                        onChange={handleData}\r\n                        placeholder={i18n.language === \"ar\" ? \"عنوان عربي\" : \"Arabic Title\"}\r\n                        value={upData.title_ar} />\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </CCol>\r\n\r\n\r\n              </CRow>\r\n              <hr />\r\n              <CRow className=\"justify-content-center\" style={{ direction: 'ltr' }}>\r\n                <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n\r\n                  <h5>{i18n.language === \"ar\" ? \"محتوى انكليزي\" : \"English Content\"}</h5>\r\n                </CCol>\r\n\r\n                <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n\r\n                  {dataText &&\r\n                    <Editor className='col-md-12' setDataText={setDataText} dataText={dataText} />\r\n                  }\r\n\r\n                </CCol>\r\n\r\n\r\n              </CRow>\r\n              <hr />\r\n              <CRow className=\"justify-content-center\" style={{ direction: 'ltr' }}>\r\n                <CCol md=\"12\" lg=\"12\" xl=\"12\" style={{ direction: 'rtl' }}>\r\n                  <h5>{i18n.language === \"ar\" ? \"محتوى عربي\" : \"Arabic Content\"}</h5>\r\n                </CCol>\r\n\r\n                <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                  {dataTextArabic &&\r\n                    <Editor className='col-md-12' setDataText={setDataTextArabic} dataText={dataTextArabic} />\r\n                  }\r\n\r\n                </CCol>\r\n\r\n\r\n              </CRow>\r\n            </CCardBody>\r\n            <CCardFooter className=\"p-4\">\r\n              <CRow className=\"justify-content-center\">\r\n\r\n                {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\r\n                  {Object.keys(errorMessage).map((item, i) => (\r\n                    <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\r\n                  ))}\r\n                </CAlert>\r\n                  :\r\n                  null}\r\n                {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\r\n\r\n                {succesAdd &&\r\n\r\n\r\n                  <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                    color=\"success\"\r\n                    show={visible}\r\n                    // closeButton\r\n                    onShowChange={setVisible}\r\n                  // closeButton\r\n                  >\r\n                    {succesAdd}\r\n                  </CAlert>\r\n\r\n\r\n                }\r\n\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                  <CButton color=\"success\" block type='submit'>{t(\"Save\")}\r\n                    {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>\r\n                </CCol>\r\n\r\n              </CRow>\r\n            </CCardFooter>\r\n          </CForm>\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdatePage\r\n","import React, { Component } from 'react';\r\nimport {EditorState, ContentState, convertFromHTML, convertToRaw,convertFromRaw} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {stateFromHTML} from 'draft-js-import-html';\r\nclass ControlledEditor extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     editorState: EditorState.createEmpty(),\r\n  //   };\r\n  //   console.log(props)\r\n  // }\r\n  constructor(props) {\r\n    super(props);\r\n    // var contentState = stateFromHTML(props.privacyPolicy);\r\n    // var editorStat = EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML(props.privacyPolicy)));\r\n\r\n    // const html = props.privacyPolicy;\r\n    // const contentBlock = htmlToDraft(html);\r\n\r\n\r\n    //  const editorStateInitial =\r\n    //   EditorState.createWithContent(\r\n    //     ContentState.createFromBlockArray(contentBlock.htmlToDraft(props.privacyPolicy)));\r\n\r\n    // var editorStat = EditorState.createWithContent(contentState);\r\n    this.state = {editorState:   EditorState.createWithContent(\r\n      ContentState.createFromBlockArray(htmlToDraft(props.dataText)))};\r\n}\r\n  onEditorStateChange=(editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n\r\n    this.props.setDataText(draftToHtml(convertToRaw(editorState.getCurrentContent())))\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        wrapperClassName=\"demo-wrapper \"\r\n        editorClassName=\"demo-editor\"\r\n        onEditorStateChange={this.onEditorStateChange}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default ControlledEditor\r\n"],"sourceRoot":""}