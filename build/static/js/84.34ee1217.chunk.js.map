{"version":3,"sources":["views/Locations/countries/countries.js"],"names":["Countries","history","useHistory","useTranslation","i18n","useState","small","setSmall","data","setData","refresh","setRefresh","setErrorMessage","currentPage","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","console","log","success","temp","payload","map","item","index","push","message","removeItem","clear","fetchitems","itemToDelete","handleDelete","document","getElementById","style","opacity","id","xl","className","md","lg","language","items","fields","hover","striped","pagination","sorter","itemsPerPage","columnFilter","onRowClick","Code","scopedSlots","color","onClick","show","onClose","size","closeButton","country_name_ar"],"mappings":"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","file":"static/js/84.34ee1217.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CForm,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CCardFooter\n} from '@coreui/react'\nimport { CAlert } from '@coreui/react'\nimport '../../../globalVar'\nimport './countries.scss'\n\nimport { useTranslation } from 'react-i18next';\n\n\nconst Countries = () => {\n  const history = useHistory()\n  const [t, i18n] = useTranslation();\n\n  const [modal, setModal] = useState(true)\n  const [small, setSmall] = useState(false)\n  const [large, setLarge] = useState(false)\n  const [danger, setDanger] = useState(false)\n  const [data, setData] = useState('')\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState()\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const [pageStatus, setPageStatus] = useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [amount, setAmount] = useState('')\n  const [visible, setVisible] = useState(10)\n\n\n  useEffect(async () => {\n    const fetchitems = async (e) => {\n\n\n\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/shipping/countries`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              // \"Content-Type\": \"application/json\",\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\n              // 'Access-Control-Allow-Credentials': 'true',\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n        const response = await responsee.json();\n        // console.log('response',response);\n        console.log('faqs', response);\n        if (response.success) {\n          let temp = []\n\n          await response.payload.map((item, index) => {\n\n            temp.push({\n              ...item,\n              'index': index + 1,\n            })\n\n          })\n          setData(temp)\n\n\n        }\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n      // setLoading(false)\n\n\n    }\n\n    fetchitems()\n  }, [currentPage, refresh])\n\n\n\n  const [activeUser, setActiveUser] = useState('')\n\n  const handleShow = (item) => {\n    setActiveUser(item)\n    //  getUser(item.id)\n    setPageStatus(1)\n  }\n\n  const handleBack = (item) => {\n    setActiveUser('')\n    setPageStatus(0)\n\n  }\n\n\n  const [itemToDelete, setItemToDelete] = useState('')\n  const handleShowModal = (item) => {\n    setSmall(!small)\n    setItemToDelete(item)\n  }\n  const handleDelete = async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/countries/${itemToDelete.id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success == true && response.payload) {\n        setSmall(!small)\n        document.getElementById('root').style.opacity = 1;\n\n        setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n\n  return (\n\n    <CRow>\n      {pageStatus == 0 &&\n        <CCol xl={12}>\n          <CCard>\n            <CCardHeader>\n              <CRow className=\" row-gap-15\">\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                  {i18n.language == 'ar' ? \"الدول\" : \"Countries\"}\n                </CCol>\n\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                  {/* <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                    onClick={() => history.push('/Countries/AddNewCountry')} >{i18n.language == 'ar' ? `إضافة دولة جديدة` : `Add New Country`}\n                  </CButton> */}\n\n                </CCol>\n\n              </CRow>\n\n            </CCardHeader>\n            <CCardBody className='usersTabel'>\n              {data && <CDataTable\n                items={data}\n                fields={['index', \"Code\", 'Name', 'IsoCode', 'InternationalCallingNumber', 'StateRequired', 'PostCodeRequired', 'actions']}\n                hover\n                striped\n                pagination\n                sorter\n                itemsPerPage={15}\n                columnFilter\n                // clickableRows\n                onRowClick={(item) => history.push(`/Locations/Offices/${item.Code}`)}\n                scopedSlots={{\n                  'actions':\n                    (item) => (\n                      <td>\n\n                        <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\n                          onClick={() => history.push(`/Locations/Offices/${item.Code}`)}  >\n                          عرض المكاتب</CBadge>\n\n                      </td>\n                    ),\n                }}\n              />}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      }\n\n      <CModal\n        show={small}\n        onClose={() => setSmall(!small)}\n        size=\"sm\"\n        color='danger'>\n        <CModalHeader closeButton>\n          <CModalTitle> حذف دولة</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {`هل انت متأكد أنك تريد حذف دولة (${itemToDelete.country_name_ar})`}\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => handleDelete()}>حذف</CButton>{' '}\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>الغاء</CButton>\n        </CModalFooter>\n      </CModal>\n\n    </CRow>\n  )\n}\n\nexport default Countries\n"],"sourceRoot":""}