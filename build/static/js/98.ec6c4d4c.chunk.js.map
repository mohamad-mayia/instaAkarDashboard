{"version":3,"sources":["views/TicketTypes/Types.js"],"names":["Types","history","useHistory","useTranslation","i18n","useState","small","setSmall","large","data","setData","refresh","setRefresh","setErrorMessage","currentPage","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","console","log","success","payload","activeUser","id","setActiveUser","filter","item","message","removeItem","clear","push","fetchFAQs","itemToDelete","setItemToDelete","handleDelete","document","getElementById","style","opacity","xl","className","md","lg","language","color","onClick","items","fields","hover","striped","pagination","sorter","itemsPerPage","columnFilter","scopedSlots","handleShowModal","show","onClose","size","closeButton","name_ar","name_en"],"mappings":"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","file":"static/js/98.ec6c4d4c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CForm,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\nCInput,\nCInputGroup,\nCInputGroupPrepend,\nCInputGroupText,\nCCardFooter\n} from '@coreui/react'\nimport {CAlert} from '@coreui/react'\nimport '../../globalVar'\nimport './Types.scss'\n\nimport { useTranslation } from 'react-i18next';\n\n\nconst Types = () => {\n  const history = useHistory()\n  const [t, i18n] = useTranslation();\n\n  const [modal, setModal] = useState(true)\n  const [small, setSmall] = useState(false)\n  const [large, setLarge] = useState(false)\n   const [danger, setDanger] = useState(false)\n  const [data,setData]=useState('')\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState()\n  const[succesAdd,setSuccessAdd]=useState()\n  const[loading,setLoading]=useState('')\n  const [pageStatus,setPageStatus]=useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const[amount,setAmount]=useState('')\n  const [visible, setVisible] = useState(10)\n\n\n  useEffect(async()=>{\n    const fetchFAQs=async(e)=>{\n  \n  \n    \n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/super/ticketTypes?paginate=0`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n                       // \"Content-Type\": \"application/json\",\n                      //'Access-Control-Allow-Origin': 'https://localhost:3000',\n                      // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n  \n      \n        }\n      );\n      const response = await responsee.json();\n      // console.log('response',response);\n      console.log('faqs',response);\n    if(response.success){\n     setData(response.payload)\n    //  setTotalPages(response.payload.last_page)\n    if(activeUser.id){setActiveUser(response.payload.filter(item=>item.id==activeUser.id)[0])}\n  \n    }\n      if(response.message&&response.message==\"Unauthenticated.\"){\n      localStorage.removeItem(\"token\");\n      localStorage.clear()\n   \n    history.push(\"/login\");\n      }\n     \n    } catch (err) {\n      console.log(err);\n     \n    }\n  \n    // setLoading(false)\n    \n    \n    }\n  \n    fetchFAQs()\n  },[currentPage,refresh])\n\n  \n const [activeUser,setActiveUser]=useState('')\n const[charge,setCharge]=useState([])\nconst[nocharge,setNoCharge]=useState(false)\n const handleShow=(item)=>{\n   setActiveUser(item)\n  //  getUser(item.id)\n   setPageStatus(1)\n }\n\n const handleBack=(item)=>{\n  setActiveUser('')\n  setPageStatus(0)\n  setAmount('')\n  setCharge([])\n  setNoCharge(false)\n}\n\n\n\nconst  getUser=async(id)=>{\n  \n  try {\n    const responsee = await fetch(\n      `${global.apiUrl}/super/users/${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + userToken,\n                 \n          Accept: \"application/json\",\n        },\n     }\n    );\n    if(responsee.status==204){\n     \n    }\n    const response = await responsee.json();\n    console.log('response',response);\n    console.log(response);\n    if(response.success==true){\n      setActiveUser(response.payload)\n    }\n  } catch (err) {\n    console.log(err);\n   \n  }\n}\n\nconst [itemToDelete,setItemToDelete]=useState('')\nconst handleShowModal=(item)=>{\n  setSmall(!large)\n  setItemToDelete(item)\n}\nconst handleDelete=async()=>{\n  setErrorMessage('')\n  setSuccessAdd('')\n  document.getElementById('root').style.opacity=0.75;\n\ntry {\n  const responsee = await fetch(\n    `${global.apiUrl}/super/ticketTypes/${itemToDelete.id}`,\n    {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + userToken,\n       \n        Accept: \"application/json\",\n      },\n \n  \n    }\n  );\n  const response = await responsee.json();\n  console.log('response',response);\n  console.log(response);\n  if(response.success==true&& response.payload){\n    setSmall(!small)\n    document.getElementById('root').style.opacity=1;\n   \n   setRefresh(!refresh)\n  \n  }\n  // else{\n  // setErrorMessage(response.errors)\n  // }\n \n} catch (err) {\n  console.log(err);\n \n}\ndocument.getElementById('root').style.opacity=1;\n\n}\n\n  return (\n    \n    <CRow>\n      {pageStatus==0&&\n       <CCol xl={12}>\n       <CCard>\n         <CCardHeader>\n         <CRow className=\" row-gap-15\">\n         <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n         {i18n.language == 'ar' ? \"أنواع البطاقات\" : \"Ticket Types\"}\n              </CCol>\n        \n         <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n          \n          <CButton color=\"success\"  className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n         onClick={()=>history.push('/Types/AddNewType')} >{i18n.language == 'ar' ? `إضافة نوع جديد` : `Add New Type`}\n                </CButton>\n             \n          </CCol>\n\n         </CRow>\n         \n          </CCardHeader>\n         <CCardBody className='usersTabel'>\n           { data&&  <CDataTable\n           items={data}\n           fields={['id','name_en','name_ar','actions']}\n           hover\n           striped\n           pagination\n           sorter\n           itemsPerPage={12}\n           columnFilter\n           // clickableRows\n           // onRowClick={(item) => history.push(`/users/${item.id}`)}\n           scopedSlots = {{\n            'actions':\n               (item)=>(\n                 <td>\n                 <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\n                     onClick={() =>handleShowModal(item) }\n                      >{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CBadge>\n                    <br/>\n                     <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"  \n                     onClick={()=>history.push(`/Types/Update/${item.id}`)}  >\n                     {i18n.language == 'ar' ? \"تعديل .....\" : \"Update....\"}</CBadge> \n                  \n                 </td>\n               ),\n\n           }}\n         />}\n          </CCardBody>\n          </CCard>\n          </CCol>\n         }\n             \n             <CModal \n              show={small} \n              onClose={() => setSmall(!small)}\n              size=\"sm\"\n              color='danger'>\n              <CModalHeader closeButton>\n                <CModalTitle>{i18n.language == 'ar' ? \"حذف نوع\" : \"Delete Type\"}</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n              {i18n.language == 'ar' ? `هل انت متأكد أنك تريد حذف نوع (${itemToDelete.name_ar})` \n              : `Are you sure you want to delete a type (${itemToDelete.name_en})`}\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"danger\" onClick={() =>handleDelete()}>{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CButton>{' '}\n                <CButton color=\"secondary\" onClick={() => setSmall(!small)}>{i18n.language == 'ar' ? \"الغاء\" : \"Cancel\"}</CButton>\n              </CModalFooter>\n            </CModal>\n     \n    </CRow>\n  )\n}\n\nexport default Types\n"],"sourceRoot":""}