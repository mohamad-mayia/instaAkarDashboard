{"version":3,"sources":["views/PakageTypes/PakageTypes.js"],"names":["PakageTypes","history","useHistory","useTranslation","i18n","useState","small","setSmall","data","setData","refresh","setRefresh","setErrorMessage","currentPage","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","success","temp","payload","map","item","index","push","name_ar","name_en","allowed_weight","activeUser","id","setActiveUser","filter","message","removeItem","clear","console","log","fetchitems","itemToDelete","setItemToDelete","handleDelete","document","getElementById","style","opacity","xl","className","md","lg","color","onClick","items","fields","label","key","hover","striped","pagination","sorter","itemsPerPage","columnFilter","scopedSlots","handleShowModal","language","show","onClose","size","closeButton"],"mappings":"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","file":"static/js/86.edf52e96.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n  CButton,\r\n  CForm,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CCardFooter\r\n} from '@coreui/react'\r\nimport { CAlert } from '@coreui/react'\r\nimport '../../globalVar'\r\nimport './PakageTypes.scss'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst PakageTypes = () => {\r\n  const history = useHistory()\r\n  const [t, i18n] = useTranslation();\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [small, setSmall] = useState(false)\r\n  const [large, setLarge] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [data, setData] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalPages, setTotalPages] = useState()\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const [pageStatus, setPageStatus] = useState(0)\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [amount, setAmount] = useState('')\r\n  const [visible, setVisible] = useState(10)\r\n\r\n\r\n  useEffect(async () => {\r\n    const fetchitems = async (e) => {\r\n\r\n\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/shipping/packageTypes`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n              // \"Content-Type\": \"application/json\",\r\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n              // 'Access-Control-Allow-Credentials': 'true',\r\n              Accept: \"application/json\",\r\n            },\r\n\r\n\r\n          }\r\n        );\r\n        const response = await responsee.json();\r\n        // console.log('response',response);\r\n\r\n        if (response.success) {\r\n          let temp = []\r\n\r\n          await response.payload.map((item, index) => {\r\n\r\n            temp.push({\r\n              ...item,\r\n              'الاسم العربي': item.name_ar,\r\n              'الاسم الانكليزي': item.name_en,\r\n              'الوزن المسموح': item.allowed_weight,\r\n            })\r\n\r\n          })\r\n          setData(temp)\r\n\r\n\r\n\r\n          // setData(response.payload)\r\n          //  setTotalPages(response.payload.last_page)\r\n          if (activeUser.id) { setActiveUser(response.payload.data.filter(item => item.id == activeUser.id)[0]) }\r\n\r\n        }\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.clear()\r\n\r\n          history.push(\"/login\");\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n\r\n      // setLoading(false)\r\n\r\n\r\n    }\r\n\r\n    fetchitems()\r\n  }, [currentPage, refresh])\r\n\r\n\r\n\r\n  const [activeUser, setActiveUser] = useState('')\r\n\r\n  const handleShow = (item) => {\r\n    setActiveUser(item)\r\n    //  getUser(item.id)\r\n    setPageStatus(1)\r\n  }\r\n\r\n  const handleBack = (item) => {\r\n    setActiveUser('')\r\n    setPageStatus(0)\r\n\r\n  }\r\n\r\n\r\n  const [itemToDelete, setItemToDelete] = useState('')\r\n  const handleShowModal = (item) => {\r\n    setSmall(!small)\r\n    setItemToDelete(item)\r\n  }\r\n  const handleDelete = async () => {\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    document.getElementById('root').style.opacity = 0.75;\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/packages/deletePackageType?package_type_ID=${itemToDelete.id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n\r\n            Accept: \"application/json\",\r\n          },\r\n\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n\r\n      if (response.success == true && response.payload) {\r\n        setSmall(!small)\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n    document.getElementById('root').style.opacity = 1;\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <CRow>\r\n      {pageStatus == 0 &&\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow className=\" row-gap-15\">\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                 Packaging Types\r\n                </CCol>\r\n\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                  <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                    onClick={() => history.push('/Packages/AddNewPakageType')} > Add New Type\r\n                  </CButton>\r\n\r\n                </CCol>\r\n\r\n              </CRow>\r\n\r\n            </CCardHeader>\r\n            <CCardBody className='usersTabel'>\r\n              {data && <CDataTable\r\n                items={data}\r\n                fields={['id', {label:'Arabic Name',key:'الاسم العربي'}\r\n                               , {label:\"English Name\",key:'الاسم الانكليزي'}\r\n                               , {label:'Allowed Weight',key:'الوزن المسموح'}\r\n                               , {label:'Actions',key:'عمليات'}]}\r\n                hover\r\n                striped\r\n                pagination\r\n                sorter\r\n                itemsPerPage={12}\r\n                columnFilter\r\n                // clickableRows\r\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n                scopedSlots={{\r\n                  'عمليات':\r\n                    (item) => (\r\n                      <td>\r\n                        <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\r\n                          onClick={() => handleShowModal(item)}\r\n                        >{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CBadge>\r\n\r\n                        <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\r\n                          onClick={() => history.push(`/Packages/Update/${item.id}`)}  >\r\n                          {i18n.language == 'ar' ? \"تعديل .....\" : \"Update....\"}</CBadge>\r\n\r\n                      </td>\r\n                    ),\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }}\r\n              />}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      }\r\n\r\n      <CModal\r\n        show={small}\r\n        onClose={() => setSmall(!small)}\r\n        size=\"sm\"\r\n        color='danger'>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle> Delete Type</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          {`Are you sure you want to delete the packaging type${itemToDelete.name_en})`}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={() => handleDelete()}>Delete</CButton>{' '}\r\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default PakageTypes\r\n"],"sourceRoot":""}