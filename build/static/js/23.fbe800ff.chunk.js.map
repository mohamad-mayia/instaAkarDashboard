{"version":3,"sources":["views/Roles/RoleUpdate/RoleUpdate.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["RoleUpdate","match","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refreshTokenHandler","useContext","ProfileContext","refresh","setRefresh","errorMessage","setErrorMessage","files","setFiles","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","name_en","name_ar","upData","setUpData","useEffect","a","id","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","status","json","response","message","temp","payload","filter","item","name","en","ar","console","log","params","handleData","e","target","value","handleUpdate","preventDefault","data","FormData","map","file","index","append","length","body","error","errors","language","handleFileName","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","type","pre","min","max","Math","floor","random","Object","keys","i","Fragment","show","onShowChange","block","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/23.fbe800ff.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CPagination,\r\n  CDataTable,\r\n  CSelect,\r\n  CFormText,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSwitch,\r\n  CInputFile,\r\n  CLink,\r\n  CFade,\r\n  CCollapse,\r\n  CBadge,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './RoleUpdate.scss'\r\n\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ProfileContext } from 'src/App'\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst RoleUpdate = ({ match }) => {\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [fetchedData, setfetchedData] = useState([])\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [files, setFiles] = useState([])\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [pickedImg, setPickedImg] = useState('')\r\n  // const userId = localStorage.getItem(\"user_id\");\r\n  // const user_id = JSON.parse(userId);\r\n\r\n  const [upData, setUpData] = useState({\r\n    name_en: '',\r\n    name_ar: '',\r\n    // criteriaDirection: '',\r\n\r\n\r\n  })\r\n  const { name_en, name_ar,\r\n  } = upData;\r\n\r\n  useEffect(async () => {\r\n    const getItem = async (id) => {\r\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/roles`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n\r\n              Accept: \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (responsee.status == 204) {\r\n\r\n        }\r\n        const response = await responsee.json();\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          return refreshTokenHandler(function () { getItem(id) })\r\n        }\r\n\r\n        if (response.message && response.message == \"Success\") {\r\n          const temp = response.payload.filter(item => item.id == id)[0]\r\n          setUpData({\r\n            name_en: temp.name.en,\r\n            name_ar: temp.name.ar,\r\n          })\r\n\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n    }\r\n    getItem(match.params.id)\r\n  }, [refresh])\r\n\r\n\r\n\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    const data = new FormData();\r\n    files && files.map((file, index) => {\r\n      file.name_ar && data.append(`requiredDocuments[${index}][ar]`, file.name_ar);\r\n      file.name_en && data.append(`requiredDocuments[${index}][en]`, file.name_en);\r\n    })\r\n    if (!files || files.length === 0) { data.append(`delete_all_required_documents`, 1); }\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/role/${match.params.id}?_method=put`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            Accept: \"application/json\",\r\n          },\r\n          body: data\r\n          ,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n\r\n      setVisible(10)\r\n      if (response.message === \"Fail\") {\r\n        setErrorMessage(response.error);\r\n        setLoading(false)\r\n        return\r\n      }\r\n      else if (response.errors) {\r\n        setErrorMessage(response.errors);\r\n        setLoading(false)\r\n      }\r\n      else if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { handleUpdate(e) })\r\n      }\r\n      if (response.message && response.message == \"Success\") {\r\n        setSuccessAdd(i18n.language === \"ar\" ? \"تم تعديل دور  بنجاح\" : \"Role has been Updated successfully\")\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  function randomInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  // const handleFiles = (e, index) => {\r\n\r\n  //   if (e.target.files[0]) {\r\n  //     let temp = [...files]\r\n  //     temp[index] = { ...temp[index], file: e.target.files[0] }\r\n  //     setFiles(temp)\r\n  //   }\r\n\r\n  // }\r\n  const addFileObject = () => {\r\n    setFiles(pre => [...pre, { id: randomInteger(1, 10000), name_en: \"\", name_ar: \"\" }])\r\n  }\r\n  const remveFile = (id) => {\r\n    setFiles(pre => pre.filter(item => item.id !== id))\r\n  }\r\n  const handleFileName = (e, index) => {\r\n    let temp = [...files]\r\n    temp[index] = { ...temp[index], [e.target.name]: e.target.value }\r\n    setFiles(temp)\r\n  }\r\n\r\n\r\n\r\n  console.log('data', upData)\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language === \"ar\" ? \"تعديل دور\" : \"Update Role\"} </strong>\r\n              </CCol>\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} >{t(\"Back\")}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n              <CForm onSubmit={(e) => { handleUpdate(e) }}>\r\n                <CCardBody>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow >\r\n\r\n\r\n                        <CCol md='12'> <strong> {i18n.language == \"ar\" ? \"معلومات الدور\" : \"Role Information\"}</strong></CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\"> {t(`English Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_en\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`English Name`)}\r\n                                value={upData.name_en} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{t(`Arabic Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_ar\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`Arabic Name`)}\r\n                                value={upData.name_ar} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md='12'> <strong> {i18n.language == \"ar\" ? \"الملفات المطلوبة\" : \"Required Files\"}</strong></CCol>\r\n\r\n                        <CCol md='12'>\r\n\r\n                          {files ?\r\n                            //  className={\"fileRow\"}\r\n                            files.map((file, index) => (\r\n                              <CRow key={file.id} >\r\n                                <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                                  <CFormGroup row>\r\n                                    <CCol md=\"12\">\r\n                                      <CLabel htmlFor=\"text-input\">{i18n.language === \"ar\" ? `اسم الملف بالانكليزية (${(index + 1)})` : `New File (${(index + 1)}) name en`}</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"12\">\r\n\r\n                                      <CInput name=\"name_en\"\r\n                                        required\r\n                                        onChange={(e) => handleFileName(e, index)}\r\n                                        placeholder={i18n.language === \"ar\" ? `اسم الملف بالانكليزية (${(index + 1)})` : `New File (${(index + 1)}) name en`}\r\n                                        value={file.name_en} />\r\n                                    </CCol>\r\n                                  </CFormGroup>\r\n                                </CCol>\r\n                                <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                                  <CFormGroup row>\r\n                                    <CCol md=\"12\">\r\n                                      <CLabel htmlFor=\"text-input\">{i18n.language === \"ar\" ? `اسم الملف بالعربية (${(index + 1)})` : `New File (${(index + 1)}) name ar`}</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"12\">\r\n\r\n                                      <CInput name=\"name_ar\"\r\n                                        required\r\n                                        onChange={(e) => handleFileName(e, index)}\r\n                                        placeholder={i18n.language === \"ar\" ? `اسم الملف بالعربية (${(index + 1)})` : `New File (${(index + 1)}) name ar`}\r\n                                        value={file.name_ar} />\r\n                                    </CCol>\r\n                                  </CFormGroup>\r\n                                </CCol>\r\n                                <CCol md='2'>\r\n                                  <CFormGroup row>\r\n                                    <CCol md=\"12\">\r\n                                      <CLabel htmlFor=\"text-input\"> {i18n.language == \"ar\" ? \"إزالة\" : \"Remove\"}</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"12\">\r\n                                      <CButton color=\"danger\" type='button' onClick={() => { remveFile(file.id) }} >\r\n                                        <i className=\"fa fa-trash  \" ></i>\r\n                                      </CButton>\r\n                                    </CCol>\r\n                                  </CFormGroup>\r\n                                  {/* <div className={\"fileCont\"}> */}\r\n                                  {/* <div>  {file.file.name}</div> */}\r\n\r\n                                  {/* </div> */}\r\n                                </CCol>\r\n                              </CRow>\r\n                            ))\r\n\r\n                            :\r\n                            null}\r\n\r\n                        </CCol>\r\n                        <CCol md='12'>\r\n                          <CButton color=\"primary\" className={'col-md-4'} type='button'\r\n                            onClick={() => addFileObject()}\r\n                          >\r\n                            {i18n.language == \"ar\" ? \"إضافة ملفات اخرى\" : \"Add More Files\"}\r\n                          </CButton>\r\n                        </CCol>\r\n\r\n\r\n                      </CRow>\r\n\r\n\r\n                    </CCardBody>\r\n                    <CCardFooter className=\"p-4\">\r\n                      <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\r\n                          {Object.keys(errorMessage).map((item, i) => (\r\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\r\n                          ))}\r\n                        </CAlert>\r\n                          :\r\n                          null}\r\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\r\n\r\n\r\n                        {succesAdd &&\r\n\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"success\"\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          // closeButton\r\n                          >\r\n                            {succesAdd}\r\n                          </CAlert>}\r\n\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                          {<CButton color=\"success\" block type='submit'>\r\n                            {t(\"Save\")}  {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n\r\n\r\n\r\n                </CCardBody>\r\n\r\n              </CForm>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoleUpdate\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}