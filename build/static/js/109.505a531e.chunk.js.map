{"version":3,"sources":["views/users/User.js"],"names":["User","match","history","useHistory","useTranslation","t","i18n","refreshTokenHandler","useContext","ProfileContext","useState","refresher","setRefresher","activeUser","setActiveUser","preImages","setPreImages","useEffect","a","fetchUser","userToken","JSON","parse","localStorage","getItem","fetch","global","apiUrl","params","id","method","headers","Authorization","Accept","responsee","json","response","message","payload","data","company","files","prefiles","filter","item","file_purpose","length","console","log","handleActivation","status","document","getElementById","style","opacity","success","xl","className","md","lg","full_name","color","onClick","push","language","goBack","email","roles","name","active","area","country","special","can_add_posts","phone_verified_at","slice","email_verified_at","latest_password_reset","forgot_password","created_at","phone_numbers","map","index","direction","primary","international_code","phone","categories","items","block","avenue","street","building","floor","flat","PACIID","fields","label","key","hover","striped","scopedSlots","file_name","en","ar","href","path","target","itemm","original","thumbnail","profile_picture","showThumbnails","showPlayButton","description","charAt","toUpperCase","admin","customer","address","bank_name","bank_account_number","IBAN_number","attachments","file","value","cat","name_ar","name_en"],"mappings":"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","file":"static/js/109.505a531e.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CForm, CInputCheckbox,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CFormGroup,\n  CLabel,\n  CSelect,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CCardFooter\n} from '@coreui/react'\nimport { CAlert } from '@coreui/react'\nimport '../../globalVar'\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport './users.scss'\nimport { ProfileContext } from 'src/App'\nimport { useTranslation } from 'react-i18next';\n\nconst User = ({ match }) => {\n\n  const history = useHistory()\n  const [t, i18n] = useTranslation();\n  const { refreshTokenHandler } = useContext(ProfileContext)\n  // const [modal, setModal] = useState(false)\n  // const [small, setSmall] = useState(false)\n\n  const socialURLS = [\"website\", \"facebook\", \"twitter\", \"snapchat\", \"tiktok\", \"youtube\", \"instagram\"]\n  // const [refresh, setRefresh] = useState(false)\n  const [refresher, setRefresher] = useState(false)\n  // const [errorMessage, setErrorMessage] = useState();\n  // const [currentPage, setCurrentPage] = useState(1)\n  const [activeUser, setActiveUser] = useState({})\n  // const [totalPages, setTotalPages] = useState()\n  // const [succesAdd, setSuccessAdd] = useState()\n  // const [loading, setLoading] = useState('')\n  // const [pageStatus, setPageStatus] = useState(0)\n  // const tokenString = localStorage.getItem(\"token\");\n  // const userToken = JSON.parse(tokenString);\n  // const [amount, setAmount] = useState('')\n  // const [visible, setVisible] = useState(10)\n\n  const [preImages, setPreImages] = useState([])\n  useEffect(async () => {\n    const fetchUser = async () => {\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\n      // &companies=0\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/users?user_id=${match.params.id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n\n\n        const response = await responsee.json();\n\n        if (response.message && response.message == \"Unauthenticated.\") {\n          return refreshTokenHandler(function () { fetchUser() })\n        }\n\n        if (response.message && response.message == \"Success\") {\n          setActiveUser(response.payload.data[0])\n          if (response.payload.data[0].company && response.payload.data[0].company.files) {\n            const prefiles = response.payload.data[0].company.files.filter(item => item.file_purpose === \"predefined_post_picture\")\n            if (prefiles && prefiles.length > 0) {\n              setPreImages(prefiles)\n            }\n          }\n        }\n\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n\n    fetchUser()\n  }, [refresher])\n\n  const handleActivation = async (id, status) => {\n    document.getElementById('root').style.opacity = 0.4;\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/accountActivation?${id ? `user_id=${id}&` : \"\"}${status}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n\n        }\n      );\n      document.getElementById('root').style.opacity = 1;\n      if (responsee.status == 200) { setRefresher(!refresher) }\n      const response = await responsee.json();\n      if (response.message && response.message == \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { handleActivation(id, status) })\n      }\n      if (response.success) { document.getElementById('root').style.opacity = 1; }\n    } catch (err) { console.log(err); }\n\n    document.getElementById('root').style.opacity = 1;\n  }\n\n\n\n\n  return (\n\n    <CRow>\n\n      {activeUser &&\n        <CCol xl={12}>\n          <CCard>\n            <CCardHeader>\n              <CRow className=\"justify-content-center row-gap-15 \">\n\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                  <strong>{activeUser.full_name}</strong>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\" row-gap-15 col-gap-15 \">\n                  <CButton color=\"info\" className='col-lg-4  col-md-4 col-sm-12 col-xs-12 updatebtn'\n                    onClick={() => history.push(`/users/Update/${activeUser.id}`)} >{i18n.language == 'ar' ? `تعديل` : `Update`}\n                  </CButton>\n                  <CButton color=\"success\" className='col-lg-4  col-md-4col-sm-12 col-xs-12 updatebtn'\n                    onClick={() => history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\n                  </CButton>\n\n                </CCol>\n\n              </CRow>\n\n            </CCardHeader>\n            <CCardBody className=''>\n\n\n\n              <CRow>\n                <CCol md='12'><strong>{i18n.language == 'ar' ? `معلومات الحساب` : `Account Information`}</strong></CCol>\n                <CCol lg={6}>\n                  <table className=\"table table-striped table-hover\">\n                    <tbody>\n                      <tr >\n                        <td>ID</td>\n                        <td><strong>{activeUser.id}</strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"fullName\")} </td>\n                        <td><strong>{activeUser.full_name}</strong></td>\n                      </tr>\n                      <tr >\n                        <td> {t(\"Email\")}</td>\n                        <td><strong>{activeUser.email || \"-\"}</strong></td>\n                      </tr>\n\n                      <tr >\n                        <td>{t(\"Role\")}</td>\n                        <td><strong>{activeUser.roles && activeUser.roles[0].name[i18n.language]}</strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"Active\")}  </td>\n                        <td><strong>{!!activeUser.active ? t(\"Active\") : t(\"Inactive\")}\n                        </strong></td>\n                      </tr>\n                      <tr >\n                        <td> {t(\"Country\")}</td>\n                        <td><strong>{activeUser.area ? activeUser.area.country.name[i18n.language] : \"-\"}</strong></td>\n                      </tr>\n                      <tr >\n                        <td> {t(\"Area\")}</td>\n                        <td><strong>{activeUser.area ? activeUser.area.name[i18n.language] : \"-\"}</strong></td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </CCol>\n                <CCol lg={6}>\n                  <table className=\"table table-striped table-hover\">\n                    <tbody>\n                      <tr >\n                        <td> {t(\"Special\")}  </td>\n                        <td><strong>{activeUser.company && !!activeUser.company.special ? t(\"Yes\") : t(\"No\")} </strong></td>\n                      </tr>\n                      <tr >\n                        <td> {t(\"AddPosts\")}  </td>\n                        <td><strong>{!!activeUser.can_add_posts ? t(\"Yes\") : t(\"No\")} </strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"phone_verified_at\")}</td>\n                        <td><strong>{activeUser.phone_verified_at ? activeUser.phone_verified_at.slice(0, 10) :\n                          <> {t(\"No\")} <CBadge className=\"p-2  m-1 badg-click\" color=\"success\"\n                            onClick={() => handleActivation(activeUser.id, \"verify_phone=1\")}\n                          >\n\n                            {i18n.language == 'ar' ? \"تأكيد الهاتف\" : \"Verify Phone\"} </CBadge></>}</strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"email_verified_at\")}</td>\n                        <td><strong>{activeUser.email_verified_at ? activeUser.email_verified_at.slice(0, 10) : <>\n                          {t(\"No\")} <CBadge className=\"p-2  m-1 badg-click\" color=\"success\"\n                            onClick={() => handleActivation(activeUser.id, \"verify_email=1\")}\n                          >\n\n                            {i18n.language == 'ar' ? \"تأكيد الإيميل\" : \"Verify Email\"} </CBadge></>}</strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"latest_password_reset\")}</td>\n                        <td><strong>{activeUser.latest_password_reset ? activeUser.latest_password_reset.slice(0, 10) : t(\"No\")}</strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"forgot_password\")}</td>\n                        <td><strong>{activeUser.forgot_password}</strong></td>\n                      </tr>\n\n\n                      <tr >\n                        <td>{t(\"Created at\")}</td>\n                        <td><strong> {activeUser.created_at && activeUser.created_at.slice(0, 10)}</strong></td>\n                      </tr>\n\n\n\n                    </tbody>\n                  </table>\n                </CCol>\n              </CRow>\n              <hr />\n              <CRow>\n                <CCol md='12'><strong>{t(\"Phones\")}</strong></CCol>\n                {activeUser.phone_numbers && activeUser.phone_numbers.length > 0 && activeUser.phone_numbers.map((item, index) => (\n                  <CCol md='4' key={item.id} >\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        <tr >\n                          <td>{t(\"Phone\")}  ({(index + 1)}) </td>\n                          <td><strong style={{ direction: \"ltr\" }}>\n                            {`${item.primary ? `(${t(\"Primary\")})  ` : \"\"}`}{`${item.international_code}${item.phone}`}\n                          </strong></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </CCol>\n                ))}\n\n              </CRow>\n              {activeUser.company && activeUser.company.categories.length > 0 ?\n                <>\n                  <hr />\n                  <CRow>\n                    <CCol md='12'><strong>{t(\"Categories\")}</strong></CCol>\n                    {activeUser.company.categories.map((item, index) => (\n                      <CCol md='4' key={item.id} >\n                        <table className=\"table table-striped table-hover\">\n                          <tbody>\n                            <tr >\n                              <td>{t(\"Category\")}  ({(index + 1)}) </td>\n                              <td><strong style={{ direction: \"ltr\" }}>\n                                {item.name[i18n.language]}\n                              </strong></td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </CCol>\n                    ))}\n\n                  </CRow>\n                </>\n\n\n                : null}\n\n              <hr />\n              {activeUser && activeUser.roles && activeUser.roles[0].id != 1 && activeUser.roles[0].id != 2 ?\n                <CRow>\n\n                  <CCol md='12'><strong>{t(\"Address\")}</strong></CCol>\n\n                  <CCol md='12' className='usersTabel'>\n                    {activeUser && <CDataTable\n                      items={[{\n                        block: activeUser.block || \"-\",\n                        avenue: activeUser.avenue || \"-\",\n                        street: activeUser.street || \"-\",\n                        building: activeUser.building || \"-\",\n                        floor: activeUser.floor || \"-\",\n                        flat: activeUser.flat || \"-\",\n                        PACIID: activeUser.PACIID || \"-\",\n                      }]}\n                      fields={[{ label: t(\"Block\"), key: 'block' },\n                      { label: t(\"Avenue\"), key: 'avenue' },\n                      { label: t(\"Street\"), key: 'street' },\n                      { label: t(\"Building\"), key: 'building' },\n                      { label: t(\"Floor\"), key: 'floor' },\n                      { label: t(\"Flat\"), key: 'flat' },\n                      { label: t(\"PACCID\"), key: 'PACIID' },]}\n                      hover\n                    // striped\n\n\n\n                    />}\n                  </CCol>\n                  {activeUser.company && activeUser.company.files && activeUser.company.files.length > 0 && activeUser.company.files.filter(item => item.file_purpose !== \"predefined_post_picture\").length > 0 ?\n                    <>\n                      <CCol md='12'><strong>{t(\"Files\")}</strong></CCol>\n\n                      <CCol md='12' className='usersTabel'>\n                        {activeUser.company && activeUser.company.files && activeUser.company.files.length > 0 && activeUser.company.files.filter(item => item.file_purpose !== \"predefined_post_picture\").length > 0 ?\n                          <CDataTable\n                            items={activeUser.company.files.filter(item => item.file_purpose !== \"predefined_post_picture\")}\n                            fields={[{ label: t(\"Name en\"), key: 'name_en' },\n                            { label: t(\"Name ar\"), key: 'name_ar' },\n                            { label: t(\"Type\"), key: 'type' },\n                            { label: t(\"URL\"), key: 'url' },\n                            ]}\n                            hover\n                            striped\n                            scopedSlots={{\n                              'name_en': (item) => (<td  >{item.file_name.en}</td>),\n                              'name_ar': (item) => (<td  >{item.file_name.ar}</td>),\n                              'type': (item) => (<td  >{t(item.file_purpose)}</td>),\n                              'url': (item) => (<td  >  <a href={`${item.path}`} target=\"_blank\">\n                                {t(\"File URL\")}\n                              </a></td>),\n                            }}\n\n\n                          /> : null}\n\n                      </CCol>  </> : null}\n                  {preImages.length > 0 ? <>\n                    <CCol md='12'><strong>    {i18n.language == 'ar' ? `صورة مسبقة للمنشورات` : `Predefined Post Pictures`}</strong></CCol>\n                    <CCol md=\"6\">\n\n                      <ImageGallery items={preImages.map(itemm => { return { original: itemm.path, thumbnail: itemm.path, } })} />\n                    </CCol>\n\n                  </> : null}\n                  {activeUser.profile_picture ? <CCol md=\"6\">\n                    <CCol md='12' className={\"text-center\"}><strong>\n                      {i18n.language == 'ar' ? `صورة بروفايل` : `Pofile Picture`}</strong></CCol>\n                    <ImageGallery showThumbnails={false}\n                      showPlayButton={false} items={[{ original: activeUser.profile_picture }]} />\n                  </CCol> : null}\n\n\n\n\n\n                  <CCol md='12'><strong>{t(\"Description\")}</strong></CCol>\n                  <CCol md=\"12\">  <table className=\"table table-striped table-hover\">\n                    <tbody>\n                      <tr >\n                        <td>{t(\"Description En\")}  </td>\n                        <td><strong  >  {activeUser.company && activeUser.company.description ? activeUser.company.description.en : \"-\"}  </strong></td>\n                      </tr>\n                      <tr >\n                        <td>{t(\"Description Ar\")} </td>\n                        <td><strong  >  {activeUser.company && activeUser.company.description ? activeUser.company.description.ar : \"-\"}  </strong></td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  </CCol>\n                  <CCol md='12'> <strong>{i18n.language === \"ar\" ? \"روابط\" : \"URLS\"}</strong></CCol>\n                  {socialURLS.map((item) => (\n                    < CCol md=\"4\" key={item}>\n                      <table className=\"table table-striped table-hover\">\n                        <tbody>\n                          <tr >\n                            <td>  {item.charAt(0).toUpperCase() + item.slice(1)} </td>\n                            <td><strong  >  {activeUser.company && activeUser.company[item] ?\n                              <a href={`${activeUser.company[item]}`} target=\"_blank\">\n                                {item.charAt(0).toUpperCase() + item.slice(1)} {\" URL\"}\n                              </a>\n\n                              : \"-\"}  </strong></td>\n                          </tr>\n\n                        </tbody>\n                      </table>\n\n                    </CCol>\n\n                  ))}\n\n                </CRow> : null}\n              {activeUser.admin == 0 && <>\n                <CRow>\n                  <CCol md='12'><strong>Customer  Information</strong></CCol>\n                  <CCol lg={6}>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        <tr >\n                          <td>Phone</td>\n                          <td><strong>{activeUser.customer.phone ? activeUser.customer.phone : \"-\"}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Company</td>\n                          <td><strong>{activeUser.customer.company ? activeUser.customer.company : \"-\"}</strong></td>\n                        </tr>\n                        <tr >\n                          <td>Address</td>\n                          <td><strong>{activeUser.customer.address ? activeUser.customer.address : \"-\"}</strong></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </CCol>\n                  <CCol lg={6}>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n\n                        <tr >\n                          <td>   Bank Name</td>\n                          <td>\n                            <strong>\n                              {activeUser.customer.bank_name ? activeUser.customer.bank_name : \"-\"}</strong></td>\n                        </tr>\n\n                        <tr >\n                          <td>Bank Account Number</td>\n                          <td><strong>\n                            {activeUser.customer.bank_account_number ? activeUser.customer.bank_account_number : \"-\"}</strong></td>\n                        </tr>\n                        <tr >\n                          <td> IBAN Number  </td>\n                          <td><strong>\n                            {activeUser.customer.IBAN_number ? activeUser.customer.IBAN_number : \"-\"}</strong></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </CCol>\n                </CRow>\n\n\n                <hr />\n                <CRow>\n                  <CCol md='6'><strong> Shipments Sending Address </strong></CCol>\n\n\n\n\n\n\n\n                  <CCol lg={12} className='mt-3'>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        <tr >\n\n                        </tr>\n\n                      </tbody>\n                    </table>\n                  </CCol>\n\n                </CRow>\n\n\n\n\n                {activeUser.customer.attachments.length > 0 ?\n                  <>\n                    <hr />\n\n                    <CRow>\n                      <CCol md='12'><strong> Additional Information  </strong></CCol>\n                      <CCol lg={12} >\n                        <table className=\"table table-striped table-hover\">\n                          <tbody>\n\n                            {activeUser.customer.attachments.map((item) => {\n                              return (\n\n                                <tr key={item.id}>\n                                  <td>{item.key}</td>\n                                  <td>\n                                    <strong>\n                                      {item.file == 0 ? item.value :\n                                        <>\n\n\n\n\n                                        </>\n\n                                      }</strong></td>\n                                </tr>\n\n                              )\n                            })}\n\n                          </tbody>\n                        </table>\n                      </CCol>\n                    </CRow>\n                  </>\n                  :\n                  null}\n                {activeUser.customer.categories && activeUser.customer.categories.length > 0 &&\n                  <CRow   >\n                    <CCol md='12'> <strong>Categories</strong> </CCol>\n                    {\n\n                      activeUser.customer.categories.length > 0 && activeUser.customer.categories.map((cat, index) => {\n                        return (\n\n                          <CCol key={cat.id} md='6' >\n\n\n                            <ul className=\" card list-group list-group-flush\">\n                              <li className=\"list-group-item    \">\n                                <strong>   Arabic Name :{' '}</strong> {cat.name_ar}\n                                <br />\n                                <strong>     English Name :  {' '}</strong>  {cat.name_en}</li>\n\n\n\n                            </ul>\n\n                          </CCol>\n\n\n\n                        )\n                      })}\n                  </CRow>}\n\n\n              </>}\n\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n\n      }\n\n\n    </CRow >\n  )\n}\n\nexport default User\n"],"sourceRoot":""}