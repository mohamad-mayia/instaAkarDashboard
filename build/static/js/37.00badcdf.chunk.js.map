{"version":3,"sources":["views/PropertySites/AddNewPropertySite/AddNewPropertySite.js"],"names":["AddNewPropertySite","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refreshTokenHandler","useContext","ProfileContext","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","name_en","name_ar","upData","setUpData","handleData","e","target","name","value","handleAdd","a","preventDefault","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","body","stringify","ar","en","responsee","json","response","message","error","errors","language","console","log","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","Object","keys","map","item","i","Fragment","show","onShowChange","block","type"],"mappings":"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","file":"static/js/37.00badcdf.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CPagination,\r\n  CDataTable,\r\n  CSelect,\r\n  CFormText,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSwitch,\r\n  CInputFile,\r\n  CLink,\r\n  CFade,\r\n  CCollapse,\r\n  CBadge,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './AddNewPropertySite.scss'\r\n\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ProfileContext } from 'src/App'\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst AddNewPropertySite = () => {\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [fetchedData, setfetchedData] = useState([])\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [pickedImg, setPickedImg] = useState('')\r\n  // const userId = localStorage.getItem(\"user_id\");\r\n  // const user_id = JSON.parse(userId);\r\n\r\n  const [upData, setUpData] = useState({\r\n    name_en: '',\r\n    name_ar: '',\r\n  })\r\n  const { name_en,\r\n    name_ar,\r\n\r\n  } = upData;\r\n\r\n\r\n\r\n\r\n\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/propertySites`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            \"Content-Type\": \"application/json\",\r\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            name: { ar: name_ar, en: name_en },\r\n            // is_category: 1\r\n          })\r\n          ,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n      setVisible(10)\r\n      if (response.message === \"Fail\") {\r\n        setErrorMessage(response.error);\r\n        return\r\n\r\n      }\r\n      else if (response.errors) {\r\n        setErrorMessage(response.errors);\r\n      }\r\n      else if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { handleAdd(e) })\r\n      }\r\n\r\n      if (response.message && response.message == \"Success\") {\r\n\r\n        setSuccessAdd(i18n.language === \"ar\" ? \"تم اضافة ميزة بنجاح\" : \"Amenity has been added successfully\")\r\n        setUpData({\r\n          name_ar: '',\r\n          name_en: '',\r\n        })\r\n\r\n      }\r\n\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center justify-content-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language == \"ar\" ? \"اضافة ميزة جديدة\" : \"Add New Amenity\"}  </strong>\r\n              </CCol>\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} >{t(\"Back\")}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n              <CForm onSubmit={(e) => { handleAdd(e) }}>\r\n                <CCardBody>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow >\r\n\r\n\r\n                        {/* className=\"justify-content-center\" */}\r\n\r\n                        <CCol md='12'> <strong>{i18n.language == \"ar\" ? \"معلومات الميزة\" : \"Amenity Information\"}</strong></CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{t(`English Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_en\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`English Name`)}\r\n                                value={upData.name_en} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{t(`Arabic Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_ar\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`Arabic Name`)}\r\n                                value={upData.name_ar} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n\r\n\r\n                      </CRow>\r\n\r\n\r\n                    </CCardBody>\r\n                    <CCardFooter className=\"p-4\">\r\n                      <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\r\n                          {Object.keys(errorMessage).map((item, i) => (\r\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\r\n                          ))}\r\n                        </CAlert>\r\n                          :\r\n                          null}\r\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\r\n\r\n\r\n                        {succesAdd &&\r\n\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"success\"\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          // closeButton\r\n                          >\r\n                            {succesAdd}\r\n                          </CAlert>}\r\n\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                          {<CButton color=\"success\" block type='submit'>\r\n                            {t(\"Save\")}\r\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n\r\n\r\n\r\n                </CCardBody>\r\n\r\n              </CForm>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddNewPropertySite\r\n"],"sourceRoot":""}