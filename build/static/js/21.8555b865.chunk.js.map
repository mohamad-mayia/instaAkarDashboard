{"version":3,"sources":["views/companies/company/company.js","views/companies/updateCompany/updateCompany.js"],"names":["Company","match","history","useHistory","useTranslation","i18n","useState","visible","setVisible","fetchedData","setfetchedData","refresh","setRefresh","errorMessage","setErrorMessage","showCard","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","small","setSmall","pageStatus","setPageStatus","useEffect","a","console","log","fetchCompany","id","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","status","json","response","payload","filter","item","message","removeItem","clear","push","params","language","category","setCategory","categories","setCategories","e","success","fetchitems","handleAddToCat","preventDefault","data","FormData","append","body","messages","itemToDelete","setItemToDelete","handleDelete","document","getElementById","style","opacity","className","md","lg","xl","name_en","color","onClick","goBack","xs","sm","in","onSubmit","row","custom","name","required","value","onChange","target","length","map","cat","type","show","onShowChange","Object","keys","i","index","name_ar","borderRadius","onClose","size","closeButton","src","logo","updatefetchedData","UpdateCompany","t","pickedImg","setPickedImg","upData","setUpData","fetchCountries","handleData","handleAddCompany","htmlFor","placeholder","col","accept","files","handleImg","variant","URL","createObjectURL","block"],"mappings":"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","file":"static/js/21.8555b865.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CSwitch\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './company.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport UpdateCompany from '../updateCompany/updateCompany'\nimport '../../../globalVar'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst Company = ({ match }) => {\n  let history = useHistory();\n  const [t, i18n] = useTranslation();\n\n  const [visible, setVisible] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState()\n  const [fetchedData, setfetchedData] = useState([])\n  const [fetchedUsers, setfetchedUsers] = useState([])\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [collapsed, setCollapsed] = useState(true)\n  const [showCard, setShowCard] = useState(true)\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [activeAmount, setActiveAmount] = useState(false)\n\n  const [modal, setModal] = useState(true)\n  const [small, setSmall] = useState(false)\n  const [large, setLarge] = useState(false)\n  const [pageStatus, setPageStatus] = useState(0)\n\n\n\n  useEffect(async () => {\n    console.log('refreshed parent')\n\n    const fetchCompany = async (id) => {\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/companies`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n\n              Accept: \"application/json\",\n            },\n          }\n        );\n        console.log(responsee.status);\n        if (responsee.status == '204') { setfetchedData([]) }\n        const response = await responsee.json();\n\n        console.log(response);\n\n        if (response.payload) {\n          setfetchedData(response.payload.filter(item => item.id == id)[0])\n\n        }\n\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n    }\n\n\n    await fetchCompany(match.params.id)\n  }, [i18n.language, refresh])\n  const [category, setCategory] = useState('')\n  const [categories, setCategories] = useState([])\n\n  useEffect(async () => {\n    const fetchitems = async (e) => {\n\n\n\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/categories??paginate=0`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              // \"Content-Type\": \"application/json\",\n              //'Access-Control-Allow-Origin': 'https://localhost:3000',\n              // 'Access-Control-Allow-Credentials': 'true',\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n        const response = await responsee.json();\n        // console.log('response',response);\n        console.log('faqs', response);\n        if (response.success) {\n          setCategories(response.payload)\n          //  setTotalPages(response.payload.last_page)\n\n\n        }\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n      // setLoading(false)\n\n\n    }\n\n    fetchitems()\n  }, [refresh])\n  const handleAddToCat = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    setVisible(7)\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    const data = new FormData();\n    data.append('company_id', match.params.id);\n    category != '' && data.append('category_id', category);\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/companies/attach/category`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            //  \"Content-Type\": \"application/json\",\n            // 'Access-Control-Allow-Origin': 'https://localhost:3000',\n            // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success) {\n\n        setSuccessAdd(\"Category has been added to the company successfully.\")\n        setRefresh(!refresh)\n        setCategory('')\n        setVisible(7)\n      }\n      else {\n\n        setVisible(7)\n        setErrorMessage(response.messages)\n      }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n\n\n  }\n  const [itemToDelete, setItemToDelete] = useState('')\n  const handleShow = (item) => {\n    setSmall(!small)\n    setItemToDelete(item)\n  }\n  const handleDelete = async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n    const data = new FormData();\n    data.append('company_id', match.params.id);\n    data.append('category_id', itemToDelete.id);\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/companies/detach/category`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            //  \"Content-Type\": \"application/json\",\n            // 'Access-Control-Allow-Origin': 'https://localhost:3000',\n            // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success == true && response.payload) {\n        setSmall(!small)\n        document.getElementById('root').style.opacity = 1;\n\n        setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n  return (\n\n    <>\n      {pageStatus == 0 ? <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n        <CContainer>\n\n\n\n          {fetchedData && <>\n\n\n\n            <CCard className=\"\">\n\n\n\n              <CCardHeader>\n                <CRow className=\" row-gap-15\">\n\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                    <strong>{fetchedData.name_en}</strong>\n                  </CCol>\n\n                  <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n                    <CButton color=\"info\" className='col-lg-3  col-md-3 col-sm-6 col-xs-6 updatebtn'\n                      onClick={() => setPageStatus(1)} > Update\n                    </CButton>\n                    <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                      onClick={() => history.goBack()} > Back\n                    </CButton>\n\n                  </CCol>\n                </CRow>\n              </CCardHeader>\n\n              <CCardBody className=\"p-4 ps-0\">\n                <CRow>\n                  <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n                    <CFade in={showCard}>\n\n                      {fetchedData &&\n                        <CRow className=''>\n                          <CCol className=' p-1' md='12' >\n                            <CCard>\n                              <CCardHeader>\n                                <CRow className=\"\">\n\n                                  <CCol md=\"6\" lg=\"6\" xl=\"6\" >\n                                    <strong>Add Category</strong>\n                                  </CCol>\n\n                                </CRow>\n\n                              </CCardHeader>\n                              <CCardBody className=''>\n\n                                <CForm onSubmit={(e) => { handleAddToCat(e) }}  >\n                                  <CRow className=\"justify-content-center\" >\n\n                                    <CCol md=\"8\" lg=\"8\" xl=\"8\">\n\n                                      <CFormGroup row>\n                                        {/* <CCol md=\"1\">\n                                          <CLabel htmlFor=\"text-input\">\n                                            \n                                          </CLabel>\n                                        </CCol> */}\n                                        <CCol xs=\"10\" md=\"10\">\n                                          <CSelect custom name=\"country_id\"\n\n                                            required value={category} onChange={(e) => setCategory(e.target.value)}  >\n                                            <option value='' >\n                                              Select Category\n                                            </option>\n                                            {categories.length > 0 && categories.map((cat) => {\n                                              return (<option value={cat.id} key={cat.id}>\n                                                {cat.name_en}\n                                              </option>)\n                                            })}\n\n                                          </CSelect>\n                                        </CCol>\n                                      </CFormGroup>\n\n                                    </CCol>\n\n\n\n                                    <CCol md=\"4\" lg=\"4\" xl=\"4\" className='mr-t' >\n                                      {/* className=\" row-gap-15 col-gap-15 \" */}\n                                      <CButton color=\"success\" className='col-12' type='submit'\n                                      > Add   {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>}\n                                        {/* className='col-lg-2  col-md-2 col-sm-12 col-xs-12 ' */}\n                                      </CButton>\n\n                                    </CCol>\n\n                                  </CRow>\n                                </CForm>\n                              </CCardBody>\n                              {/* <CCardFooter className=\"p-4\"> */}\n                              <CRow className=\"justify-content-center\">\n\n                                <CCol md='12' >\n                                  <CCol md='12' >\n\n                                    {errorMessage &&\n\n\n                                      <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                                        color=\"danger\"\n                                        // closeButton\n                                        show={visible}\n                                        // closeButton\n                                        onShowChange={setVisible}\n                                      >\n                                        {Object.keys(errorMessage).map((item, i) => (<>{errorMessage[item]}<br /></>))}\n                                      </CAlert>\n\n                                    }\n\n\n\n\n                                    {succesAdd &&\n\n\n                                      <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                                        color=\"success\"\n                                        show={visible}\n                                        // closeButton\n                                        onShowChange={setVisible}\n                                      // closeButton\n                                      >\n                                        {succesAdd}\n                                      </CAlert>\n\n\n                                    }\n                                  </CCol>\n\n                                </CCol>\n\n                              </CRow>\n\n\n                              {fetchedData.categories && fetchedData.categories.length > 0 &&\n                                <CCardFooter className=\"p-4\"> <CRow md='12' >\n                                  <CCol md='12'> <strong>Categories</strong> </CCol>\n                                  {\n\n                                    fetchedData.categories.length > 0 && fetchedData.categories.map((cat, index) => {\n                                      return (\n\n                                        <CCol key={cat.id} md='6' >\n\n\n                                          <ul className=\" card list-group list-group-flush\">\n                                            <li className=\"list-group-item  \">\n                                              <strong>Arabic Name :{' '}</strong> {cat.name_ar}\n                                              <br />\n                                              <strong>   English Name :  {' '}</strong>  {cat.name_en}</li>\n                                            {/* <CCol xs=\"12\" md=\"12\"> */}\n\n\n                                            <CButton color=\"secondary\" className='col-lg-12 col-md-12 col-sm-12 col-xs-12 '\n                                              onClick={() => handleShow(cat)}\n                                              style={{ borderRadius: '0' }} >\n                                              Remove\n                                            </CButton>\n\n                                            {/* </CCol> */}\n                                          </ul>\n\n                                        </CCol>\n\n\n\n                                      )\n                                    })}\n                                </CRow> </CCardFooter>}\n\n                              <CModal\n                                show={small}\n                                onClose={() => setSmall(!small)}\n                                size=\"sm\"\n                                color='danger'\n                              >\n                                <CModalHeader closeButton>\n                                  <CModalTitle>Remove Category</CModalTitle>\n                                </CModalHeader>\n                                <CModalBody>\n                                  {`Are you sure you want to delete a category from the company (  ${itemToDelete.name_en} )`}\n                                </CModalBody>\n                                <CModalFooter>\n                                  <CButton color=\"danger\" onClick={() => handleDelete()}>Remove</CButton>{' '}\n                                  <CButton color=\"secondary\" onClick={() => setSmall(!small)}>Cancel</CButton>\n                                </CModalFooter>\n                              </CModal>\n\n                            </CCard>\n\n\n\n                          </CCol>\n\n\n\n                          <CCol className=' p-1' md='6' >\n\n                            <ul className=\" card list-group list-group-flush\">\n                              <li className=\"list-group-item\"><strong>Id : {' '}</strong> {fetchedData.id}</li>\n                              <li className=\"list-group-item\"><strong>{i18n.language == 'ar' ? `اسم انكليزي :` : `English Name :`}\n\n                                {' '}</strong>  {fetchedData.name_en}</li>\n                              <li className=\"list-group-item  \"><strong>Arabic Name :{' '}</strong> {fetchedData.name_ar}</li>\n                            </ul>\n\n\n                          </CCol>\n                          <CCol className=' p-1' md='6'>\n                            <ul className=\" card list-group list-group-flush\">\n                              <li className=\"list-group-item\">\n                                <strong> Logo   </strong>\n                                <img className='detLogo' src={global.apiUrl + fetchedData.logo} /></li>\n\n                            </ul>\n                            {/* <ul className=\" card list-group list-group-flush\">\n\n\n                              {fetchedData.phones && <li className=\"list-group-item \">\n                                <strong>{i18n.language == 'ar' ? \"هواتف : \" : \"Phones :\"}</strong><br /> {' / '}\n                                {fetchedData && fetchedData.phones.length > 0 && fetchedData.phones.map((phone, index) => {\n                                  return (<React.Fragment key={index}>{phone.number + ' / '}</React.Fragment>)\n                                })}\n                              </li>}\n\n\n\n\n                            </ul> */}\n                          </CCol>\n\n\n                        </CRow>}\n\n                    </CFade>\n                  </CCol>\n                </CRow>\n\n              </CCardBody>\n            </CCard>\n\n          </>}\n\n\n        </CContainer>\n      </div>\n        :\n        <UpdateCompany\n          setPageStatus={setPageStatus}\n          updatefetchedData={fetchedData}\n          refresh={refresh}\n          setRefresh={setRefresh} />\n      }\n    </>\n  )\n}\n\nexport default Company\n","import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './updateCompany.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst UpdateCompany = ({ setPageStatus, updatefetchedData, refresh, setRefresh }) => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [fetchedData, setfetchedData] = useState([])\n\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  // const userId = localStorage.getItem(\"user_id\");\n  // const user_id = JSON.parse(userId);\n  // updatefetchedData.logo_url\n  // updatefetchedData.phones\n\n\n\n  const [upData, setUpData] = useState({\n    name_en: updatefetchedData.name_en,\n    name_ar: updatefetchedData.name_ar,\n\n\n\n  })\n  const { name_en,\n    name_ar,\n\n\n  } = upData;\n\n\n  useEffect(async () => {\n\n    const fetchCountries = async (e) => {\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}/super/countries?paginate=0`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n\n              Accept: \"application/json\",\n            },\n          }\n        );\n        const response = await responsee.json();\n        console.log(response);\n\n        if (response.success) {\n          setfetchedData(response.payload)\n        }\n\n\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n      // setLoading(false)\n\n\n    }\n\n    fetchCountries()\n  }, [refresh])\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n\n\n\n\n  const handleAddCompany = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    const data = new FormData();\n    upData.name_en != updatefetchedData.name_en && data.append(\"name_en\", name_en);\n    data.append(\"_method\", 'put');\n    upData.name_ar != updatefetchedData.name_ar && data.append(\"name_ar\", name_ar);\n\n    pickedImg && data.append('logo', pickedImg);\n\n    // \n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/companies/${updatefetchedData.id}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            //  \"Content-Type\": \"application/json\",\n            //'Access-Control-Allow-Origin': 'https://localhost:3000',\n            // 'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      setVisible(10)\n      if (response.payload) {\n        await setVisible(6)\n        setSuccessAdd(i18n.language == 'ar' ? \"تم تعديل معلومات بنجاح\" : \"Company Updated Successfuly\")\n        // document.getElementById('phone1').value=''\n        await setRefresh(!refresh)\n\n\n\n        setVisible(6)\n      }\n      else {\n\n        await setVisible(10)\n        setErrorMessage(response.messages)\n\n\n      }\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n  const handleDelete = async (id) => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n\n\n\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/super/companies/${updatefetchedData.id}/phones/${id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success == true && response.payload) {\n\n        document.getElementById('root').style.opacity = 1;\n\n        setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n\n\n\n  const handleImg = (e) => {\n    if (e.target.files[0]) { setPickedImg(e.target.files[0]) }\n  }\n  console.log('data', upData)\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong> {i18n.language == 'ar' ? updatefetchedData.name_ar : updatefetchedData.name_en}</strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                  onClick={() => setPageStatus(0)} >\n                  {i18n.language == 'ar' ? `رجوع` : `Back`}\n                </CButton>\n\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAddCompany(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n                        <CCol md='12'> <strong>\n                          {i18n.language == 'ar' ? \"معلومات الشركة :\" : \"Company Informations :\"}\n                        </strong></CCol>\n\n                        {/* className=\"justify-content-center\" */}\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">\n                                {i18n.language == 'ar' ? \"الاسم الانكليزي\" : \"English Name\"}\n                              </CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={i18n.language == 'ar' ? \"الاسم الانكليزي\" : \"English Name\"}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n\n                        <CCol md=\"6\" lg=\"6\">\n                          <CFormGroup row className='arabic-align'>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">Arabic Name</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n\n                              <CInput name=\"name_ar\" required\n                                onChange={handleData}\n\n                                placeholder=\"Arabic Name\" value={upData.name_ar} />\n\n\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n\n\n                        <CCol md='6' className='p-4'>\n                          <CFormGroup row >\n                            <CLabel col md={12}>{i18n.language == 'ar' ? `الشعار` : `Logo`}</CLabel>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInputFile accept=\"image/*\" custom id=\"custom-file-input\" onChange={(e) => { handleImg(e) }} />\n\n                              <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\n                                {pickedImg ? pickedImg.name : i18n.language == 'ar' ? `اختر صورة ...` : `Choose image ...`}\n\n                              </CLabel>\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md='6'>\n                          {pickedImg ? <img className=\"imgLogo\" src={URL.createObjectURL(pickedImg)}></img> :\n                            <img className=\"imgLogo\" src={global.apiUrl + updatefetchedData.logo}></img>}\n                        </CCol>\n\n\n\n\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage &&\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"danger\"\n                            // closeButton\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          >\n\n                            {errorMessage && errorMessage.map((item, i) => (\n\n                              <>{errorMessage[i]}<br /></>\n\n                            ))}\n                          </CAlert>}\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t('Save')}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\nexport default UpdateCompany\n"],"sourceRoot":""}