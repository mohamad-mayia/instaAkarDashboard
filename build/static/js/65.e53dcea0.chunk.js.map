{"version":3,"sources":["views/Locations/cities/cities.js","../node_modules/@mui/private-theming/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"names":["theme","createTheme","direction","cacheRtl","createCache","key","stylisPlugins","prefixer","rtlPlugin","Cities","useHistory","useTranslation","i18n","useState","small","setSmall","countries","setCountries","refresh","setRefresh","setErrorMessage","cities","setCities","setSuccessAdd","pageStatus","tokenString","localStorage","getItem","userToken","JSON","parse","country","setCountry","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","success","payload","console","log","fetchCountries","handleCountry","value","fetchCities","id","status","temp","map","item","index","push","code","name_ar","name_en","itemToDelete","handleDelete","document","getElementById","style","opacity","xl","className","md","lg","language","row","xs","dir","size","options","required","autoHighlight","rtl","onChange","event","newValue","getOptionLabel","option","country_name_en","country_code","renderOption","props","component","sx","mr","flexShrink","loading","width","src","toLowerCase","srcSet","alt","renderInput","params","label","inputProps","autoComplete","length","items","fields","hover","striped","pagination","sorter","itemsPerPage","columnFilter","color","show","onClose","closeButton","onClick","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","hasSymbol","Symbol","for","ThemeProvider","children","localTheme","outerTheme","useTheme","React","output","mergeOuterLocalTheme","nested","_jsx","ThemeContext","Provider","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider"],"mappings":"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","file":"static/js/65.e53dcea0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CCardFooter\n} from '@coreui/react'\nimport { CAlert } from '@coreui/react'\nimport '../../../globalVar'\nimport './cities.scss'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { prefixer } from 'stylis';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport { useTranslation } from 'react-i18next';\nconst theme = createTheme({\n  direction: 'rtl', // Both here and <body dir=\"rtl\">\n});\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\nconst Cities = () => {\n  const history = useHistory()\n  const [t, i18n] = useTranslation();\n  const [modal, setModal] = useState(true)\n  const [small, setSmall] = useState(false)\n  const [large, setLarge] = useState(false)\n\n\n  const [countries, setCountries] = useState([])\n  const [refresh, setRefresh] = useState(false)\n  const [errorMessage, setErrorMessage] = useState();\n  const [cities, setCities] = useState([])\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const [pageStatus, setPageStatus] = useState(0)\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n  const [visible, setVisible] = useState(10)\n  const [country, setCountry] = useState(null)\n\n  useEffect(async () => {\n\n    const fetchCountries = async (e) => {\n      try {\n        const responsee = await fetch(`${global.apiUrl}api/countries`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              Accept: \"application/json\",\n            },\n          }\n        );\n        const response = await responsee.json();\n        if (response.success) {\n          setCountries(response.payload)\n\n        }\n\n      } catch (err) { console.log(err); }\n\n    }\n\n    fetchCountries()\n\n\n  }, [])\n\n  const handleCountry = async (value) => {\n    setCountry(value)\n    if (value != null) {\n      fetchCities(value.id)\n    }\n    else {\n      setCities([])\n    }\n\n  }\n\n  const fetchCities = async (id) => {\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/cities/getCityByCountryId?country_id=${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n        }\n      );\n      if (responsee.status == 204) {\n\n      }\n      const response = await responsee.json();\n      if (response.success) {\n\n        let temp = []\n\n        await response.payload.map((item, index) => {\n\n          temp.push({\n            ...item,\n            'الرمز': item.code ? item.code : \"-\",\n            'الاسم العربي': item.name_ar ? item.name_ar : \"-\",\n            'الاسم الانكليزي': item.name_en,\n\n          })\n\n        })\n        setCities(temp)\n\n\n      }\n\n    } catch (err) { console.log(err); }\n\n  }\n\n\n\n\n\n  const [itemToDelete, setItemToDelete] = useState('')\n  const handleShowModal = (item) => {\n    setSmall(!large)\n    setItemToDelete(item)\n  }\n  const handleDelete = async () => {\n    setErrorMessage('')\n    setSuccessAdd('')\n    document.getElementById('root').style.opacity = 0.75;\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/super/cities/${itemToDelete.id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n\n            Accept: \"application/json\",\n          },\n\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      if (response.success == true && response.payload) {\n        setSmall(!small)\n        document.getElementById('root').style.opacity = 1;\n\n        setRefresh(!refresh)\n\n      }\n      // else{\n      // setErrorMessage(response.errors)\n      // }\n\n    } catch (err) {\n      console.log(err);\n\n    }\n    document.getElementById('root').style.opacity = 1;\n\n  }\n\n  return (\n\n    <CRow>\n      {pageStatus == 0 &&\n        <CCol xl={12}>\n          <CCard>\n            <CCardHeader>\n              <CRow className=\" row-gap-15\">\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                  {i18n.language == 'ar' ? \"المدن\" : \"Cities\"}\n                </CCol>\n\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n\n\n                </CCol>\n\n              </CRow>\n\n            </CCardHeader>\n            <CCardBody className='usersTabel'>\n              <CRow >\n                <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                  <CFormGroup row>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CacheProvider value={cacheRtl}>\n                        <ThemeProvider theme={theme}>\n                          <div dir=\"rtl\">\n                            <Autocomplete\n                              id=\"country-select-demo\"\n                              size=\"small\"\n                              options={countries}\n                              required\n                              autoHighlight\n                              dir='rtl'\n                              rtl='true'\n                              value={country}\n                              onChange={(event, newValue) => {\n                                handleCountry(newValue);\n                              }}\n                              getOptionLabel={(option) => option.country_name_en + \"  \" + option.country_code}\n                              renderOption={(props, option) => (\n                                <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n                                  <img\n                                    loading=\"lazy\"\n                                    width=\"20\"\n                                    src={`https://flagcdn.com/w20/${option.country_code.toLowerCase()}.png`}\n                                    srcSet={`https://flagcdn.com/w40/${option.country_code.toLowerCase()}.png 2x`}\n                                    alt=\"\"\n                                  />\n                                  {option.country_name_en} ({option.country_code})\n                                </Box>\n                              )}\n                              renderInput={(params) => (\n                                <TextField\n                                  required\n                                  {...params}\n                                  label={\"اختر دولة\"}\n                                  inputProps={{\n                                    ...params.inputProps,\n                                    autoComplete: 'off', // disable autocomplete and autofill\n                                  }}\n                                />\n                              )}\n                            />\n\n                          </div>\n                        </ThemeProvider>\n                      </CacheProvider>\n\n\n\n\n                    </CCol>\n                  </CFormGroup>\n\n                </CCol>\n\n              </CRow>\n              {cities.length > 0 ?\n\n\n                <CDataTable\n                  items={cities}\n                  fields={['id', 'الاسم الانكليزي', \"الاسم العربي\", \"الرمز\", \"عمليات\"]}\n                  hover\n                  striped\n                  pagination\n\n                  sorter\n                  itemsPerPage={20}\n                  columnFilter\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n                // scopedSlots={{\n                //   'actions':\n                //     (item) => (\n                //       <td>\n                //         <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\n                //           onClick={() => handleShowModal(item)}\n                //         >{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CBadge>\n                //         <br />\n                //         <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\n                //           onClick={() => history.push(`/Country/${country}/CityUpdate/${item.id}`)}  >\n                //           {i18n.language == 'ar' ? \"تعديل .....\" : \"Update....\"}</CBadge>\n\n                //       </td>\n                //     ),\n\n                // }}\n                />\n\n                :\n                null\n              }\n              {!country && <CRow>\n                <CCol md='12'>\n                  <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                    color=\"warning\"\n                  // closeButton\n                  // show={visible}\n                  // closeButton\n                  // onShowChange={setVisible}\n                  >\n                    {i18n.language == 'ar' ? \"اختر دولة لعرض المدن الخاصة بها\" : \"Select a country to view its cities\"}\n                  </CAlert>\n                </CCol>\n              </CRow>\n              }\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n      }\n\n      <CModal\n        show={small}\n        onClose={() => setSmall(!small)}\n        size=\"sm\"\n        color='danger'\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>{i18n.language == 'ar' ? \"حذف مدينة\" : \"Delete City\"}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {i18n.language == 'ar' ? `هل انت متأكد أنك تريد حذف مدينة (${itemToDelete.name_ar})`\n            : `Are you sure you want to delete a City (${itemToDelete.name_en})`}\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => handleDelete()}>{i18n.language == 'ar' ? \"حذف\" : \"Delete\"}</CButton>{' '}\n          <CButton color=\"secondary\" onClick={() => setSmall(!small)}>{i18n.language == 'ar' ? \"الغاء\" : \"Cancel\"}</CButton>\n        </CModalFooter>\n      </CModal>\n\n    </CRow>\n  )\n}\n\nexport default Cities\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : {},\n    children: props.children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;"],"sourceRoot":""}