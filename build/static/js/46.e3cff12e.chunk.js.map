{"version":3,"sources":["views/TicketStatuses/StatusUpdate/StatusUpdate.js"],"names":["StatusUpdate","match","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","name_en","name_ar","upData","setUpData","useEffect","a","id","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","status","json","response","console","log","success","payload","filter","item","getStatus","params","handleData","e","target","name","value","handleUpdate","preventDefault","body","stringify","language","messages","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","show","onShowChange","Object","keys","map","i","block","type"],"mappings":"iQAmUeA,UA1RM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB,EAAkBC,cAAlB,mBAAOC,EAAP,KAAUC,EAAV,KACIC,EAAUC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAsCF,mBAAS,IAA/C,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,qBAAxC,mBAAOK,EAAP,KAAqBC,EAArB,KAEA,EAAmCN,qBAAnC,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAYC,KAAKC,MAAML,GAC7B,EAAkCX,mBAAS,IAA3C,mBAIA,GAJA,UAI4BA,mBAAS,CACnCiB,QAAS,GACTC,QAAS,MAFX,mBAAOC,EAAP,KAAeC,EAAf,KAOQH,EACJE,EADIF,QAAQC,EACZC,EADYD,QAGhBG,oBAAS,sBAAC,sBAAAC,EAAA,sFAAAA,EAAA,MACS,WAAMC,GAAN,iBAAAD,EAAA,+EAGWE,MAAM,GAAD,OACxBC,EAAOC,OADiB,oCAE3B,CACEC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYf,EAE3BgB,OAAQ,sBAVD,cAGPC,EAHO,QAcAC,OAdA,SAiBUD,EAAUE,OAjBpB,OAiBPC,EAjBO,OAkBbC,QAAQC,IAAI,WAAWF,GACvBC,QAAQC,IAAIF,GACS,GAAlBA,EAASG,SACVjB,EAAU,CACRH,QAASiB,EAASI,QAAQC,QAAO,SAAAC,GAAI,OAAEA,EAAKjB,IAAIA,KAAI,GAAGN,QACvDC,QAASgB,EAASI,QAAQC,QAAO,SAAAC,GAAI,OAAEA,EAAKjB,IAAIA,KAAI,GAAGL,UAvB9C,kDA+BbiB,QAAQC,IAAR,MA/Ba,0DADT,sDAoCRK,CAAU/C,EAAMgD,OAAOnB,IApCf,2CAqCP,CAACpB,IAIJ,IAAMwC,EAAa,SAACC,GAClBxB,EAAU,2BAAKD,GAAN,kBAAeyB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAEjDzC,EAAgB,IAChBE,EAAc,KAKVwC,EAAY,uCAAE,WAAOJ,GAAP,iBAAAtB,EAAA,6DAClBsB,EAAEK,iBACFvC,GAAW,GAEXJ,EAAgB,IAChBE,EAAc,IALI,kBAQQgB,MAAM,GAAD,OACxBC,EAAOC,OADiB,iCACchC,EAAMgD,OAAOnB,IACtD,CACEI,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYf,EAC1B,eAAgB,mBACjB,8BAA+B,yBAC/B,mCAAoC,OACpCgB,OAAQ,oBAEVoB,KAAMnC,KAAKoC,UAAU,CAElBlC,UAAQC,cArBC,cAQVa,EARU,iBA4BOA,EAAUE,OA5BjB,WA4BVC,EA5BU,OA6BhBC,QAAQC,IAAI,WAAYF,GACxBC,QAAQC,IAAIF,GACZhC,EAAW,KACPgC,EAASG,QAhCG,kCAiCRnC,EAAW,GAjCH,QAkCdM,EAA+B,MAAjBX,EAAKuD,SAAmB,kHAA0B,8BAExEhD,GAAYD,GApCU,wBA0CdD,EAAW,IACXI,EAAgB4B,EAASmB,UA3CX,0DAkDhBlB,QAAQC,IAAR,MAlDgB,QAsDlB1B,GAAW,GAtDO,0DAAF,sDA8DlB,OADAyB,QAAQC,IAAI,OAAQjB,GAElB,qBAAKmC,UAAU,mEAAf,SAEE,cAAC,IAAD,UAGE,eAAC,IAAD,CAAOA,UAAU,GAAjB,UAIE,cAAC,IAAD,UACE,eAAC,KAAD,CAAMA,UAAU,cAAhB,UAEE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIH,UAAU,iGAArC,SACE,iCAA0B,MAAjBzD,EAAKuD,SAAmB,0DAAe,oBAElD,cAAC,IAAD,CAAMG,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIH,UAAU,wBAArC,SAEJ,cAAC,IAAD,CAASI,MAAM,UAAWJ,UAAU,mDACrCK,QAAS,kBAAI7D,EAAQ8D,UADpB,SACiD,MAAjB/D,EAAKuD,SAAL,2CAOhC,cAAC,KAAD,UACE,cAAC,IAAD,CAAMS,GAAG,KAAKC,GAAG,KAAKP,GAAG,KAAKD,UAAU,GAAxC,SACE,cAAC,IAAD,CAAOS,SAAU,SAACnB,GAAQI,EAAaJ,IAAvC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,KAAD,WAGA,eAAC,IAAD,CAAMW,GAAG,KAAT,cAAe,iCAA0B,MAAjB1D,EAAKuD,SAAL,iHACtB,cAAC,IAAD,CAAMG,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAYO,KAAG,EAAf,UACE,cAAC,IAAD,CAAMT,GAAG,KAAT,SACE,cAAC,KAAD,CAAQU,QAAQ,aAAhB,SAA+C,MAAjBpE,EAAKuD,SAAL,2GAEhC,cAAC,IAAD,CAAMS,GAAG,KAAKN,GAAG,KAAjB,SAEE,cAAC,IAAD,CAAQT,KAAK,UACXoB,UAAQ,EACRC,SAAUxB,EACVyB,YAA8B,MAAjBvE,EAAKuD,SAAL,uGACbL,MAAO5B,EAAOF,iBAItB,cAAC,IAAD,CAAMsC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAYO,KAAG,EAAf,UACE,cAAC,IAAD,CAAMT,GAAG,KAAT,SACE,cAAC,KAAD,CAAQU,QAAQ,aAAhB,SAA+C,MAAjBpE,EAAKuD,SAAL,wFAEhC,cAAC,IAAD,CAAMS,GAAG,KAAKN,GAAG,KAAjB,SAEE,cAAC,IAAD,CAAQT,KAAK,UACXoB,UAAQ,EACRC,SAAUxB,EACVyB,YAA8B,MAAjBvE,EAAKuD,SAAL,oFACbL,MAAO5B,EAAOD,sBAa1B,cAAC,IAAD,CAAaoC,UAAU,MAAvB,SACE,eAAC,KAAD,CAAMA,UAAU,yBAAhB,UAEGjD,GACC,cAAC,IAAD,CAAQiD,UAAU,4CAChBI,MAAM,SAENW,KAAMpE,EAENqE,aAAcpE,EALhB,SAOlBqE,OAAOC,KAAKnE,GAAcoE,KAAI,SAACjC,EAAMkC,GAAP,OAE9B,qCAAGrE,EAAamC,GAAM,+BAYLjC,GAEC,cAAC,IAAD,CAAQ+C,UAAU,4CAChBI,MAAM,UACNW,KAAMpE,EAENqE,aAAcpE,EAJhB,SAOGK,IAGL,cAAC,IAAD,CAAMgD,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAII,GAAG,KAAKC,GAAG,KAAtC,SACG,eAAC,IAAD,CAASJ,MAAM,UAAUiB,OAAK,EAACC,KAAK,SAApC,UACEhF,EAAE,QACFa,GAAW,qCAAG,IAAI,mBAAG6C,UAAU,6BAFjC,kC","file":"static/js/46.e3cff12e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './StatusUpdate.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst StatusUpdate = ({match}) => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [fetchedData, setfetchedData] = useState([])\n  const [refresh, setRefresh] = useState('')\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  // const userId = localStorage.getItem(\"user_id\");\n  // const user_id = JSON.parse(userId);\n\n  const [upData, setUpData] = useState({\n    name_en: '',\n    name_ar: '',\n    // criteriaDirection: '',\n   \n\n  })\n  const { name_en,name_ar,\n  } = upData;\n\n  useEffect(async () => {\n    const  getStatus=async(id)=>{\n  \n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}/super/ticketStatuses?pagiante=0`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n                     \n              Accept: \"application/json\",\n            },\n         }\n        );\n        if(responsee.status==204){\n         \n        }\n        const response = await responsee.json();\n        console.log('response',response);\n        console.log(response);\n        if(response.success==true){\n          setUpData({\n            name_en: response.payload.filter(item=>item.id==id)[0].name_en,\n            name_ar: response.payload.filter(item=>item.id==id)[0].name_ar,\n          \n          \n           \n          })\n   \n        }\n      } catch (err) {\n        console.log(err);\n       \n      }\n    }\n    getStatus(match.params.id)\n  }, [refresh])\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n \n\n\n  const handleUpdate= async (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/super/ticketStatuses/${match.params.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n             \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\n            'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify({\n           \n             name_en,name_ar\n   \n          })\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      setVisible(10)\n      if (response.success) {\n        await setVisible(6)\n        setSuccessAdd(i18n.language == 'ar' ? \"تم تعديل الحالة بنجاح\" : \"Status Updated Successfuly\")\n\nsetRefresh(!refresh)\n\n      \n      }\n      else {\n\n        setVisible(10)\n        setErrorMessage(response.messages)\n\n\n      }\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n\n\n\n  console.log('data', upData)\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{i18n.language == 'ar' ? \"تعديل حالة\" : \"Update Status\"}</strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n          \n          <CButton color=\"success\"  className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n         onClick={()=>history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\n                </CButton>\n             \n          </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleUpdate(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n                     \n\n                      <CCol md='12'> <strong>{i18n.language == 'ar' ? `معلومات الحالة :` : `Status Informations :`}</strong></CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{i18n.language == 'ar' ? `الاسم الانكليزي` : `English Name`}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={i18n.language == 'ar' ? `الاسم الانكليزي` : `English Name`}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{i18n.language == 'ar' ? `الاسم العربي` : `Arabic Name`}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_ar\"\n                                required\n                                onChange={handleData}\n                                placeholder={i18n.language == 'ar' ? `الاسم العربي` : `Arabic Name`}\n                                value={upData.name_ar} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n\n                      \n\n\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage &&\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"danger\"\n                            // closeButton\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          >\n  {     Object.keys(errorMessage).map((item, i) => (\n        \n        <>{errorMessage[item]}<br/></>  \n           \n                     \n               \n         ))}\n                            {/* {errorMessage && errorMessage.map((item, i) => (\n\n                              <>{errorMessage[i]}<br /></>\n\n                            ))} */}\n                          </CAlert>}\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t('Save')}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\nexport default StatusUpdate\n"],"sourceRoot":""}