{"version":3,"sources":["views/PricingOptions/AddNewPricingOption/AddNewPricingOption.js"],"names":["AddNewPricingOption","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refreshTokenHandler","useContext","ProfileContext","errorMessage","setErrorMessage","data","setData","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","category","setCategory","name_en","name_ar","upData","setUpData","handleCategory","value","a","useEffect","fetchitems","e","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","message","payload","console","log","handleData","target","name","handleAdd","preventDefault","ar","en","is_price_type","type_id","body","stringify","error","errors","language","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","custom","required","onChange","length","map","item","id","placeholder","Object","keys","i","Fragment","show","onShowChange","block","type"],"mappings":"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","file":"static/js/35.0a8420e6.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CPagination,\r\n  CDataTable,\r\n  CSelect,\r\n  CFormText,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSwitch,\r\n  CInputFile,\r\n  CLink,\r\n  CFade,\r\n  CCollapse,\r\n  CBadge,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './AddNewPricingOption.scss'\r\n\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ProfileContext } from 'src/App'\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst AddNewPricingOption = () => {\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [fetchedData, setfetchedData] = useState([])\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [data, setData] = useState('')\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [pickedImg, setPickedImg] = useState('')\r\n  // const userId = localStorage.getItem(\"user_id\");\r\n  // const user_id = JSON.parse(userId);\r\n  const [category, setCategory] = useState(\"\")\r\n  const [upData, setUpData] = useState({\r\n    name_en: '',\r\n    name_ar: '',\r\n  })\r\n  const { name_en,\r\n    name_ar,\r\n\r\n  } = upData;\r\n  const handleCategory = async (value) => {\r\n    setCategory(value)\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n  }\r\n  useEffect(async () => {\r\n    const fetchitems = async (e) => {\r\n\r\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/offerAndPriceTypes?is_price_type=0`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n              Accept: \"application/json\",\r\n            },\r\n\r\n\r\n          }\r\n        );\r\n        const response = await responsee.json();\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          return refreshTokenHandler(function () { fetchitems(e) })\r\n        }\r\n\r\n        if (response.message && response.message == \"Success\") {\r\n          setData(response.payload)\r\n\r\n\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    fetchitems()\r\n  }, [])\r\n\r\n\r\n\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    let data = {\r\n      name: { ar: name_ar, en: name_en },\r\n      is_price_type: 1, type_id: category\r\n    }\r\n\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/offerTypes`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify(data)\r\n          ,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n      setVisible(10)\r\n      if (response.message === \"Fail\") {\r\n        setErrorMessage(response.error);\r\n        return\r\n\r\n      }\r\n      else if (response.errors) {\r\n        setErrorMessage(response.errors);\r\n      }\r\n      else if (response.message && response.message == \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { handleAdd(e) })\r\n      }\r\n\r\n      if (response.message && response.message == \"Success\") {\r\n        setSuccessAdd(i18n.language === \"ar\" ? \"تم اضافة خيار تسعير بنجاح\" : \"Pricing Option has been added successfully\")\r\n        setUpData({\r\n          name_ar: '',\r\n          name_en: '',\r\n        })\r\n        setCategory(\"\")\r\n      }\r\n\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center justify-content-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language == \"ar\" ? \"اضافة خيار تسعير جديد\" : \"Add New Pricing Option\"}  </strong>\r\n              </CCol>\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} >{t(\"Back\")}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n              <CForm onSubmit={(e) => { handleAdd(e) }}>\r\n                <CCardBody>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow >\r\n\r\n\r\n                        {/* className=\"justify-content-center\" */}\r\n\r\n                        <CCol md='12'> <strong>{i18n.language == \"ar\" ? \"معلومات خيار التسعير\" : \"Pricing Option Information\"}</strong></CCol>\r\n                        <CCol md=\"6\"  >\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\"> {i18n.language == 'ar' ? \"اختر نوع العرض\" : \"Select Offer Type\"}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CSelect custom name=\"category_id\"\r\n                                value={category} required\r\n                                onChange={(e) => handleCategory(e.target.value)}>\r\n                                <option value='' >      {i18n.language == 'ar' ? \"اختر نوع\" : \"Select\"}</option>\r\n\r\n                                {data.length > 0 && data.map((item) => {\r\n                                  return (<option value={item.id} key={item.id}>  {item.name[i18n.language]}   </option>)\r\n                                })}\r\n\r\n                              </CSelect>\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{t(`English Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_en\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`English Name`)}\r\n                                value={upData.name_en} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{t(`Arabic Name`)}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_ar\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={t(`Arabic Name`)}\r\n                                value={upData.name_ar} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n\r\n\r\n                      </CRow>\r\n\r\n\r\n                    </CCardBody>\r\n                    <CCardFooter className=\"p-4\">\r\n                      <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\r\n                          {Object.keys(errorMessage).map((item, i) => (\r\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\r\n                          ))}\r\n                        </CAlert>\r\n                          :\r\n                          null}\r\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\r\n\r\n\r\n                        {succesAdd &&\r\n\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"success\"\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          // closeButton\r\n                          >\r\n                            {succesAdd}\r\n                          </CAlert>}\r\n\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                          {<CButton color=\"success\" block type='submit'>\r\n                            {t(\"Save\")}\r\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n\r\n\r\n\r\n                </CCardBody>\r\n\r\n              </CForm>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddNewPricingOption\r\n"],"sourceRoot":""}