{"version":3,"sources":["views/Roles/Roles.js"],"names":["Roles","history","useHistory","useTranslation","t","i18n","refreshTokenHandler","useContext","ProfileContext","useState","data","setData","refresh","currentPage","pageStatus","tokenString","localStorage","getItem","JSON","parse","useEffect","a","fetchitems","e","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","message","payload","activeUser","id","setActiveUser","filter","item","console","log","xl","className","md","lg","language","items","fields","label","key","hover","striped","pagination","sorter","itemsPerPage","scopedSlots","color","onClick","push","name","ar","en"],"mappings":"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","file":"static/js/91.89baff14.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n  CButton,\r\n  CForm,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CCardFooter\r\n} from '@coreui/react'\r\nimport { CAlert } from '@coreui/react'\r\nimport '../../globalVar'\r\nimport './Roles.scss'\r\nimport { ProfileContext } from 'src/App'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst Roles = () => {\r\n  const history = useHistory()\r\n  const [t, i18n] = useTranslation();\r\n  const { refreshTokenHandler } = useContext(ProfileContext)\r\n  const [modal, setModal] = useState(true)\r\n  const [small, setSmall] = useState(false)\r\n  const [large, setLarge] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [data, setData] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalPages, setTotalPages] = useState()\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const [pageStatus, setPageStatus] = useState(0)\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [amount, setAmount] = useState('')\r\n  const [visible, setVisible] = useState(10)\r\n\r\n\r\n  useEffect(async () => {\r\n    const fetchitems = async (e) => {\r\n\r\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/roles`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n              Accept: \"application/json\",\r\n            },\r\n\r\n\r\n          }\r\n        );\r\n        const response = await responsee.json();\r\n        if (response.message && response.message == \"Unauthenticated.\") {\r\n          return refreshTokenHandler(function () { fetchitems(e) })\r\n        }\r\n\r\n        if (response.message && response.message == \"Success\") {\r\n          setData(response.payload)\r\n\r\n          //  setTotalPages(response.payload.last_page)\r\n          if (activeUser.id) { setActiveUser(response.payload.filter(item => item.id == activeUser.id)[0]) }\r\n\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n\r\n      // setLoading(false)\r\n\r\n\r\n    }\r\n\r\n    fetchitems()\r\n  }, [currentPage, refresh])\r\n\r\n\r\n  const [activeUser, setActiveUser] = useState('')\r\n  const [charge, setCharge] = useState([])\r\n  const [nocharge, setNoCharge] = useState(false)\r\n  const handleShow = (item) => {\r\n    setActiveUser(item)\r\n    //  getUser(item.id)\r\n    setPageStatus(1)\r\n  }\r\n\r\n  const handleBack = (item) => {\r\n    setActiveUser('')\r\n    setPageStatus(0)\r\n    setAmount('')\r\n    setCharge([])\r\n    setNoCharge(false)\r\n  }\r\n\r\n\r\n\r\n  const getUser = async (id) => {\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}/super/users/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (responsee.status == 204) {\r\n\r\n      }\r\n      const response = await responsee.json();\r\n      console.log('response', response);\r\n      console.log(response);\r\n      if (response.success == true) {\r\n        setActiveUser(response.payload)\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n  }\r\n\r\n  const [itemToDelete, setItemToDelete] = useState('')\r\n  const handleShowModal = (item) => {\r\n    setSmall(!large)\r\n    setItemToDelete(item)\r\n  }\r\n  const handleDelete = async () => {\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n    document.getElementById('root').style.opacity = 0.75;\r\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/categories/${itemToDelete.id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n\r\n            Accept: \"application/json\",\r\n          },\r\n\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n      console.log('response', response);\r\n      if (response.message && response.message === \"Unauthenticated.\") {\r\n        return refreshTokenHandler(function () { handleDelete() })\r\n      }\r\n      if (response.message && response.message === \"Success\") {\r\n        setSmall(false)\r\n        document.getElementById('root').style.opacity = 1;\r\n\r\n        setRefresh(!refresh)\r\n\r\n      }\r\n      // else{\r\n      // setErrorMessage(response.errors)\r\n      // }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n    document.getElementById('root').style.opacity = 1;\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <CRow>\r\n      {pageStatus == 0 &&\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow className=\" row-gap-15\">\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                  {i18n.language === \"ar\" ? \"الأدوار\" : \"Roles\"}\r\n                </CCol>\r\n\r\n                <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                  {/* <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                    onClick={() => history.push('/Categories/AddNewCategory')} >\r\n                    {i18n.language === \"ar\" ? \"إضافة تصنيف جديد\" : \"Add new category\"}\r\n\r\n                  </CButton> */}\r\n\r\n                </CCol>\r\n\r\n              </CRow>\r\n\r\n            </CCardHeader>\r\n            <CCardBody className='usersTabel'>\r\n              {data && <CDataTable\r\n                items={data}\r\n                fields={['id',\r\n                  { label: i18n.language === \"ar\" ? \"الاسم العربي\" : \"Arabic Name\", key: 'name_ar' },\r\n                  { label: i18n.language === \"ar\" ? \"الاسم الانكليزي\" : \"English Name\", key: 'name_en' },\r\n                  { label: i18n.language === \"ar\" ? \"عمليات\" : \"Actions\", key: 'Actions' }]}\r\n                hover\r\n                striped\r\n                pagination\r\n                sorter\r\n                itemsPerPage={12}\r\n                // columnFilter\r\n                // clickableRows\r\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n                scopedSlots={{\r\n                  'Actions':\r\n                    (item) => (\r\n                      <td>\r\n                        {/* <CBadge className=\"p-1 m-1 badg-click\" color=\"danger\"\r\n                          onClick={() => handleShowModal(item)}\r\n                        > {t(\"Delete\")}</CBadge> */}\r\n                        {/* <br /> */}\r\n                        <CBadge className=\"p-1  m-1 badg-click\" color=\"info\"\r\n                          onClick={() => history.push(`/Roles/Update/${item.id}`)}  >\r\n                          {t(\"Update\")}  </CBadge>\r\n\r\n                      </td>\r\n                    ),\r\n                  'name_ar': (item) => (<td> {item.name.ar}  </td>),\r\n                  'name_en': (item) => (<td> {item.name.en}  </td>),\r\n\r\n                }}\r\n              />}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      }\r\n\r\n      {/* <CModal\r\n        show={small}\r\n        onClose={() => setSmall(false)}\r\n        size=\"sm\"\r\n        color='danger'>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>{i18n.language === \"ar\" ? \"حذف تصنيف\" : \"Delete Category\"} </CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          {`${i18n.language === \"ar\" ? \"هل انت متأكد من حذف تصنيف\" : \"Are you sure you want to delete the category\"}   (${itemToDelete.name && itemToDelete.name[i18n.language]})`}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={() => handleDelete()}>{t(\"Delete\")} </CButton>{' '}\r\n          <CButton color=\"secondary\" onClick={() => setSmall(false)}>{t(\"Cancel\")}</CButton>\r\n        </CModalFooter>\r\n      </CModal> */}\r\n\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Roles\r\n"],"sourceRoot":""}