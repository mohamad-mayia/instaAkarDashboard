{"version":3,"sources":["views/PakageTypes/PakageTypeUpdate/PakageTypeUpdate.js"],"names":["PakageTypeUpdate","match","useTranslation","i18n","history","useHistory","useState","visible","setVisible","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","name_en","name_ar","allowed_weight","upData","setUpData","useEffect","a","id","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","status","json","response","success","cont","payload","filter","item","console","log","getCountry","params","handleData","e","target","name","value","handleUpdate","preventDefault","body","stringify","package_type_ID","errors","className","md","lg","xl","language","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","type","min","show","onShowChange","Object","keys","map","i","block"],"mappings":"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","file":"static/js/34.e6cce598.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CPagination,\r\n  CDataTable,\r\n  CSelect,\r\n  CFormText,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSwitch,\r\n  CInputFile,\r\n  CLink,\r\n  CFade,\r\n  CCollapse,\r\n  CBadge,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './PakageTypeUpdate.scss'\r\n\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst PakageTypeUpdate = ({ match }) => {\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n\r\n  const [fetchedData, setfetchedData] = useState([])\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [pickedImg, setPickedImg] = useState('')\r\n  // const userId = localStorage.getItem(\"user_id\");\r\n  // const user_id = JSON.parse(userId);\r\n\r\n  const [upData, setUpData] = useState({\r\n    name_en: '',\r\n    name_ar: '',\r\n\r\n    allowed_weight: '',\r\n\r\n\r\n  })\r\n  const { name_en,\r\n    name_ar,\r\n\r\n    allowed_weight,\r\n\r\n\r\n\r\n  } = upData;\r\n  useEffect(async () => {\r\n    const getCountry = async (id) => {\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/shipping/packageTypes`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n\r\n              Accept: \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (responsee.status == 204) {\r\n\r\n        }\r\n        const response = await responsee.json();\r\n\r\n        if (response.success == true) {\r\n          let cont = response.payload.filter(item => item.id == id)[0]\r\n          if (cont) {\r\n            setUpData({\r\n\r\n              name_en: cont.name_en,\r\n              name_ar: cont.name_ar,\r\n\r\n              allowed_weight: cont.allowed_weight,\r\n\r\n\r\n\r\n            })\r\n          }\r\n\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n    }\r\n    getCountry(match.params.id)\r\n  }, [refresh])\r\n\r\n\r\n\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/packages/updatePackageType`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            \"Content-Type\": \"application/json\",\r\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            name_en,\r\n            name_ar,\r\n            allowed_weight,\r\n            package_type_ID: match.params.id,\r\n            // _method: 'put'\r\n\r\n\r\n          })\r\n          ,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n\r\n      setVisible(10)\r\n      if (response.success) {\r\n        await setVisible(6)\r\n        setSuccessAdd(\"Type has been edited successfully\")\r\n\r\n        setRefresh(!refresh)\r\n\r\n\r\n      }\r\n      else {\r\n\r\n        setVisible(10)\r\n        setErrorMessage(response.errors)\r\n\r\n\r\n      }\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language == 'ar' ? \"تعديل نوع\" : \"Update Type\"}</strong>\r\n              </CCol>\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n              <CForm onSubmit={(e) => { handleUpdate(e) }}>\r\n                <CCardBody>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow >\r\n\r\n                        <CCol md='12'> <strong>Type Information </strong></CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">English Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_en\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={`English Name`}\r\n                                value={upData.name_en} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{`Arabic Name`}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_ar\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={`Arabic Name`}\r\n                                value={upData.name_ar} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"3\" xl=\"3\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n\r\n\r\n                              <CLabel htmlFor=\"text-input\">{`Allowed Weight`}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"allowed_weight\"\r\n                                required\r\n                                type='float'\r\n                                min='0'\r\n                                onChange={handleData}\r\n                                placeholder={`Allowed Weight`}\r\n                                value={upData.allowed_weight} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n\r\n\r\n\r\n                      </CRow>\r\n\r\n\r\n                    </CCardBody>\r\n                    <CCardFooter className=\"p-4\">\r\n                      <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage &&\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"danger\"\r\n                            // closeButton\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          >\r\n                            {Object.keys(errorMessage).map((item, i) => (\r\n\r\n                              <>{errorMessage[item]}<br /></>\r\n\r\n\r\n\r\n                            ))}\r\n                            {/* {errorMessage && errorMessage.map((item, i) => (\r\n\r\n                              <>{errorMessage[i]}<br /></>\r\n\r\n                            ))} */}\r\n                          </CAlert>}\r\n\r\n                        {succesAdd &&\r\n\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"success\"\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          // closeButton\r\n                          >\r\n                            {succesAdd}\r\n                          </CAlert>}\r\n\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                          {<CButton color=\"success\" block type='submit'>\r\n                            Save\r\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n\r\n\r\n\r\n                </CCardBody>\r\n\r\n              </CForm>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PakageTypeUpdate\r\n"],"sourceRoot":""}