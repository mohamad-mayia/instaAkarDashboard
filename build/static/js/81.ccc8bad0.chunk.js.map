{"version":3,"sources":["views/ChangePassword/ChangePassword.js"],"names":["ChangePassword","refreshTokenHandler","useContext","ProfileContext","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","old_password","new_password","new_password_confirmation","upData","setUpData","handleData","e","target","name","value","handleChangePAsww","a","preventDefault","language","userToken","data","FormData","append","fetch","global","apiUrl","method","headers","Authorization","Accept","body","responsee","json","response","message","error","errors","status","msg","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","draggable","colored","progress","undefined","setTimeout","removeItem","push","console","log","position","newestOnTop","rtl","pauseOnFocusLoss","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","Object","keys","map","item","i","Fragment","show","onShowChange","block","type"],"mappings":"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","file":"static/js/81.ccc8bad0.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n\n  CFormGroup,\n  CLabel,\n\n\n  CRow\n} from '@coreui/react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport './ChangePassword.scss'\nimport { ProfileContext } from 'src/App'\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../globalVar'\nconst ChangePassword = () => {\n  const { refreshTokenHandler } = useContext(ProfileContext)\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n\n  const [upData, setUpData] = useState({\n    old_password: '',\n    new_password: \"\",\n    new_password_confirmation: '',\n\n  })\n  const { old_password,\n    new_password,\n    new_password_confirmation\n\n  } = upData;\n\n\n  const handleData = (e) => {\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n\n  }\n\n\n\n  const vlaidationData = () => {\n    if (upData.new_password != upData.new_password_confirmation) {\n      setErrorMessage(i18n.language === \"ar\" ? \"كلمة المرور وتأكيد كلمة المرور غير متطابقين\"\n        : \"Password and confirm password do not match\");\n      setVisible(8)\n      return false\n    }\n\n\n    return true\n\n  }\n  const notify = (msg) => toast.info(msg, {\n    // position: \"top-right\",\n    autoClose: 4000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    className: '',\n    draggable: true,\n    colored: true,\n    progress: undefined,\n  });\n  const handleChangePAsww = async (e) => {\n    e.preventDefault()\n    if (!vlaidationData()) { return }\n    const apiENDPOINT = \"api/passwordReset?_method=put\";\n    setLoading(true)\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\n    setErrorMessage('')\n    setSuccessAdd('')\n    var data = new FormData()\n    data.append(`old_password`, upData.old_password)\n    data.append(`new_password`, upData.new_password)\n    data.append(`new_password_confirmation`, upData.new_password_confirmation)\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}${apiENDPOINT}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            Accept: \"application/json\",\n          },\n          body: data\n          ,\n        }\n      );\n      const response = await responsee.json();\n      setLoading(false)\n      setVisible(10)\n      if (response.message === \"Fail\") {\n        setErrorMessage(response.error);\n        return\n      }\n      else if (response.errors) { setErrorMessage(response.errors); }\n      else if (response.message && response.message == \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { handleChangePAsww(e) })\n      }\n\n      if (response.message && responsee.status == 200) {\n\n        setVisible(6)\n        setSuccessAdd(i18n.language === \"ar\" ? \"سجل دخول باستخدام كلمة المرور الجديدة\" : \"Log in with your new password\")\n        notify(i18n.language === \"ar\" ? \"سجل دخول باستخدام كلمة المرور الجديدة\" : \"Log in with your new password\")\n        setTimeout(() => {\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"refresh_token\");\n          localStorage.removeItem(\"id\");\n          history.push(\"/login\");\n        }, 4000)\n\n      }\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\n\n      <CContainer>\n\n\n        <ToastContainer\n          position=\"top-left\"\n          autoClose={4000}\n          hideProgressBar\n          className=\"toast-container\"\n          newestOnTop={true}\n          closeOnClick\n          rtl={i18n.language === \"ar\" ? true : false}\n          colored={true}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{t(\"Change Password\")}</strong>\n              </CCol>\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                  onClick={() => history.goBack()} >  {t(\"Back\")}\n                </CButton>\n\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleChangePAsww(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n\n\n                        {/* className=\"justify-content-center\" */}\n\n                        <CCol md='12'> <strong>{t(\"Change Password\")}  </strong></CCol>\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{t(`old_password`)} </CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n                              <CInput name=\"old_password\"\n                                required\n                                onChange={handleData}\n                                placeholder={t(`old_password`)}\n                                value={upData.old_password} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{t(`new_password`)} </CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"new_password\"\n                                required\n                                onChange={handleData}\n                                placeholder={t(`new_password`)}\n                                value={upData.new_password} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">\n                                {t(\"new_password_confirmation\")}\n                              </CLabel>\n\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"new_password_confirmation\"\n                                required\n                                onChange={handleData}\n                                placeholder={t(\"new_password_confirmation\")}\n                                value={upData.new_password_confirmation} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\n                          {Object.keys(errorMessage).map((item, i) => (\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\n                          ))}\n                        </CAlert>\n                          :\n                          null}\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\n\n\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12    '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t(\"Save\")}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div >\n  )\n}\n\nexport default ChangePassword\n"],"sourceRoot":""}