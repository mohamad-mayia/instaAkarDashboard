{"version":3,"sources":["views/cities/cityUpdate/cityUpdate.js"],"names":["CityUpdate","match","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refresh","setRefresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","name_en","name_ar","code","upData","setUpData","useEffect","a","getCity","id","fetch","global","apiUrl","params","CountryId","method","headers","Authorization","Accept","responsee","status","json","response","console","log","success","cit","payload","filter","item","handleData","e","target","name","value","handleUpdate","preventDefault","body","stringify","city_id","errors","className","md","lg","xl","language","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","show","onShowChange","Object","keys","map","i","block","type"],"mappings":"iQAkVeA,UAzSI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,EAAkBC,cAAlB,mBAAOC,EAAP,KAAUC,EAAV,KACIC,EAAUC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAsCF,mBAAS,IAA/C,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,qBAAxC,mBAAOK,EAAP,KAAqBC,EAArB,KAEA,EAAmCN,qBAAnC,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAYC,KAAKC,MAAML,GAC7B,EAAkCX,mBAAS,IAA3C,mBAIA,GAJA,UAI4BA,mBAAS,CACnCiB,QAAS,GACTC,QAAS,GACTC,KAAM,MAHR,mBAAOC,EAAP,KAAeC,EAAf,KAOQJ,EACJG,EADIH,QAASC,EACbE,EADaF,QAASC,EACtBC,EADsBD,KAG1BG,oBAAS,sBAAC,4BAAAC,EAAA,6DACFC,EADE,+BAAAD,EAAA,MACQ,WAAOE,GAAP,mBAAAF,EAAA,+EAGYG,MAAM,GAAD,OACxBC,EAAOC,OADiB,oDACiClC,EAAMmC,OAAOC,WACzE,CACEC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYnB,EAE3BoB,OAAQ,sBAVF,cAGNC,EAHM,QAcEC,OAdF,SAiBWD,EAAUE,OAjBrB,OAiBNC,EAjBM,OAkBZC,QAAQC,IAAI,WAAYF,GACxBC,QAAQC,IAAIF,GACY,GAApBA,EAASG,UACPC,EAAMJ,EAASK,QAAQC,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,IAAMA,KAAI,GACzDJ,EAAU,CACRJ,QAASyB,EAAIzB,QACbC,QAASwB,EAAIxB,QACbC,KAAMuB,EAAIvB,QAzBF,kDAgCZoB,QAAQC,IAAR,MAhCY,0DADR,+DAuCFhB,EAAQ9B,EAAMmC,OAAOJ,IAvCnB,2CAyCP,CAACtB,IAIJ,IAAM2C,EAAa,SAACC,GAClB1B,EAAU,2BAAKD,GAAN,kBAAe2B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAEjD5C,EAAgB,IAChBE,EAAc,KAKV2C,EAAY,uCAAG,WAAOJ,GAAP,iBAAAxB,EAAA,6DACnBwB,EAAEK,iBACF1C,GAAW,GAEXJ,EAAgB,IAChBE,EAAc,IALK,kBAQOkB,MAAM,GAAD,OACxBC,EAAOC,OADiB,yBAE3B,CACEG,OAAQ,OACRC,QAAS,CACPC,cAAe,UAAYnB,EAC3B,eAAgB,mBAChBoB,OAAQ,oBAEVmB,KAAMtC,KAAKuC,UAAU,CAEnBrC,UAASC,UAASC,OAAMoC,QAAS7D,EAAMmC,OAAOJ,OAnBnC,cAQXU,EARW,iBA0BMA,EAAUE,OA1BhB,WA0BXC,EA1BW,OA4BjBpC,EAAW,KACPoC,EAASG,QA7BI,kCA8BTvC,EAAW,GA9BF,QA+BfM,EAAc,sCAEdJ,GAAYD,GAjCG,wBAuCfD,EAAW,IACXI,EAAgBgC,EAASkB,QAxCV,0DA+CjBjB,QAAQC,IAAR,MA/CiB,QAmDnB9B,GAAW,GAnDQ,0DAAH,sDA2DlB,OADA6B,QAAQC,IAAI,OAAQpB,GAElB,qBAAKqC,UAAU,mEAAf,SAEE,cAAC,IAAD,UAGE,eAAC,IAAD,CAAOA,UAAU,GAAjB,UAIE,cAAC,IAAD,UACE,eAAC,KAAD,CAAMA,UAAU,cAAhB,UAEE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIH,UAAU,iGAArC,SACE,iCAA0B,MAAjB5D,EAAKgE,SAAmB,0DAAe,kBAElD,cAAC,IAAD,CAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIH,UAAU,wBAArC,SAEE,cAAC,IAAD,CAASK,MAAM,UAAUL,UAAU,mDACjCM,QAAS,kBAAMjE,EAAQkE,UADzB,SACsD,MAAjBnE,EAAKgE,SAAL,2CAO3C,cAAC,KAAD,UACE,cAAC,IAAD,CAAMI,GAAG,KAAKC,GAAG,KAAKR,GAAG,KAAKD,UAAU,GAAxC,SACE,cAAC,IAAD,CAAOU,SAAU,SAACpB,GAAQI,EAAaJ,IAAvC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,KAAD,WAGE,eAAC,IAAD,CAAMW,GAAG,KAAT,cAAe,iCAA0B,MAAjB7D,EAAKgE,SAAL,+GACxB,cAAC,IAAD,CAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAYQ,KAAG,EAAf,UACE,cAAC,IAAD,CAAMV,GAAG,KAAT,SACE,cAAC,KAAD,CAAQW,QAAQ,aAAhB,4BAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKP,GAAG,KAAjB,SAEE,cAAC,IAAD,CAAQT,KAAK,UACXqB,UAAQ,EACRC,SAAUzB,EACV0B,YAAW,eACXtB,MAAO9B,EAAOH,iBAItB,cAAC,IAAD,CAAMyC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAYQ,KAAG,EAAf,UACE,cAAC,IAAD,CAAMV,GAAG,KAAT,SACE,cAAC,KAAD,CAAQW,QAAQ,aAAhB,2BAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKP,GAAG,KAAjB,SAEE,cAAC,IAAD,CAAQT,KAAK,UAEXsB,SAAUzB,EACV0B,YAAW,cACXtB,MAAO9B,EAAOF,iBAItB,cAAC,IAAD,CAAMwC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,eAAC,IAAD,CAAYQ,KAAG,EAAf,UACE,cAAC,IAAD,CAAMV,GAAG,KAAT,SACE,cAAC,KAAD,CAAQW,QAAQ,aAAhB,yBAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKP,GAAG,KAAjB,SAEE,cAAC,IAAD,CAAQT,KAAK,OAEXsB,SAAUzB,EACV0B,YAAW,YACXtB,MAAO9B,EAAOD,mBAY1B,cAAC,IAAD,CAAasC,UAAU,MAAvB,SACE,eAAC,KAAD,CAAMA,UAAU,yBAAhB,UAEGpD,GACC,cAAC,IAAD,CAAQoD,UAAU,4CAChBK,MAAM,SAENW,KAAMxE,EAENyE,aAAcxE,EALhB,SAOGyE,OAAOC,KAAKvE,GAAcwE,KAAI,SAAChC,EAAMiC,GAAP,OAE7B,qCAAGzE,EAAawC,GAAM,+BAY3BtC,GAEC,cAAC,IAAD,CAAQkD,UAAU,4CAChBK,MAAM,UACNW,KAAMxE,EAENyE,aAAcxE,EAJhB,SAOGK,IAGL,cAAC,IAAD,CAAMmD,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIK,GAAG,KAAKC,GAAG,KAAtC,SACG,eAAC,IAAD,CAASJ,MAAM,UAAUiB,OAAK,EAACC,KAAK,SAApC,UACEpF,EAAE,QACFa,GAAW,qCAAG,IAAI,mBAAGgD,UAAU,6BAFjC,kC","file":"static/js/52.8e77c71d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CPagination,\r\n  CDataTable,\r\n  CSelect,\r\n  CFormText,\r\n  CTextarea,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSwitch,\r\n  CInputFile,\r\n  CLink,\r\n  CFade,\r\n  CCollapse,\r\n  CBadge,\r\n  CRow\r\n} from '@coreui/react'\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport CIcon from '@coreui/icons-react'\r\nimport './cityUpdate.scss'\r\n\r\nimport { CAlert } from '@coreui/react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport '../../../globalVar'\r\n// import { set } from 'core-js/core/dict'\r\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\r\nconst CityUpdate = ({ match }) => {\r\n  const [t, i18n] = useTranslation();\r\n  let history = useHistory();\r\n  const [visible, setVisible] = useState(10)\r\n\r\n  const [fetchedData, setfetchedData] = useState([])\r\n  const [refresh, setRefresh] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const [succesAdd, setSuccessAdd] = useState()\r\n  const [loading, setLoading] = useState('')\r\n  const tokenString = localStorage.getItem(\"token\");\r\n  const userToken = JSON.parse(tokenString);\r\n  const [pickedImg, setPickedImg] = useState('')\r\n  // const userId = localStorage.getItem(\"user_id\");\r\n  // const user_id = JSON.parse(userId);\r\n\r\n  const [upData, setUpData] = useState({\r\n    name_en: '',\r\n    name_ar: '',\r\n    code: '',\r\n\r\n\r\n  })\r\n  const { name_en, name_ar, code\r\n  } = upData;\r\n\r\n  useEffect(async () => {\r\n    const getCity = async (id) => {\r\n\r\n      try {\r\n        const responsee = await fetch(\r\n          `${global.apiUrl}api/cities/getCityByCountryId?country_id=${match.params.CountryId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + userToken,\r\n\r\n              Accept: \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (responsee.status == 204) {\r\n\r\n        }\r\n        const response = await responsee.json();\r\n        console.log('response', response);\r\n        console.log(response);\r\n        if (response.success == true) {\r\n          let cit = response.payload.filter(item => item.id == id)[0]\r\n          setUpData({\r\n            name_en: cit.name_en,\r\n            name_ar: cit.name_ar,\r\n            code: cit.code,\r\n\r\n\r\n          })\r\n\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n      }\r\n    }\r\n\r\n\r\n    await getCity(match.params.id)\r\n\r\n  }, [refresh])\r\n\r\n\r\n\r\n  const handleData = (e) => {\r\n    setUpData({ ...upData, [e.target.name]: e.target.value })\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n  }\r\n\r\n\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    setErrorMessage('')\r\n    setSuccessAdd('')\r\n\r\n    try {\r\n      const responsee = await fetch(\r\n        `${global.apiUrl}api/cities/updateCity`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + userToken,\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n\r\n            name_en, name_ar, code, city_id: match.params.id,\r\n\r\n          })\r\n          ,\r\n\r\n        }\r\n      );\r\n      const response = await responsee.json();\r\n\r\n      setVisible(10)\r\n      if (response.success) {\r\n        await setVisible(6)\r\n        setSuccessAdd(\"City has been updated successfully\")\r\n\r\n        setRefresh(!refresh)\r\n\r\n\r\n      }\r\n      else {\r\n\r\n        setVisible(10)\r\n        setErrorMessage(response.errors)\r\n\r\n\r\n      }\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  console.log('data', upData)\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center register-cont\">\r\n\r\n      <CContainer>\r\n\r\n\r\n        <CCard className=\"\">\r\n\r\n\r\n\r\n          <CCardHeader>\r\n            <CRow className=\" row-gap-15\">\r\n\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\r\n                <strong>{i18n.language == 'ar' ? \"تعديل دولة\" : \"Update City\"}</strong>\r\n              </CCol>\r\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\r\n\r\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\r\n                  onClick={() => history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\r\n                </CButton>\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\r\n              <CForm onSubmit={(e) => { handleUpdate(e) }}>\r\n                <CCardBody>\r\n                  <CCard>\r\n                    <CCardBody>\r\n                      <CRow >\r\n\r\n\r\n                        <CCol md='12'> <strong>{i18n.language == 'ar' ? `معلومات الدولة :` : `City Informations :`}</strong></CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{`English Name`}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_en\"\r\n                                required\r\n                                onChange={handleData}\r\n                                placeholder={`English Name`}\r\n                                value={upData.name_en} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{`Arabic Name`}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"name_ar\"\r\n\r\n                                onChange={handleData}\r\n                                placeholder={`Arabic Name`}\r\n                                value={upData.name_ar} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\r\n                          <CFormGroup row>\r\n                            <CCol md=\"12\">\r\n                              <CLabel htmlFor=\"text-input\">{`City Code`}</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n\r\n                              <CInput name=\"code\"\r\n\r\n                                onChange={handleData}\r\n                                placeholder={`City Code`}\r\n                                value={upData.code} />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n\r\n\r\n\r\n\r\n                      </CRow>\r\n\r\n\r\n                    </CCardBody>\r\n                    <CCardFooter className=\"p-4\">\r\n                      <CRow className=\"justify-content-center\">\r\n\r\n                        {errorMessage &&\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"danger\"\r\n                            // closeButton\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          >\r\n                            {Object.keys(errorMessage).map((item, i) => (\r\n\r\n                              <>{errorMessage[item]}<br /></>\r\n\r\n\r\n\r\n                            ))}\r\n                            {/* {errorMessage && errorMessage.map((item, i) => (\r\n\r\n                              <>{errorMessage[i]}<br /></>\r\n\r\n                            ))} */}\r\n                          </CAlert>}\r\n\r\n                        {succesAdd &&\r\n\r\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\r\n                            color=\"success\"\r\n                            show={visible}\r\n                            // closeButton\r\n                            onShowChange={setVisible}\r\n                          // closeButton\r\n                          >\r\n                            {succesAdd}\r\n                          </CAlert>}\r\n\r\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\r\n                          {<CButton color=\"success\" block type='submit'>\r\n                            {t('Save')}\r\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n\r\n\r\n\r\n                </CCardBody>\r\n\r\n              </CForm>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CityUpdate\r\n"],"sourceRoot":""}