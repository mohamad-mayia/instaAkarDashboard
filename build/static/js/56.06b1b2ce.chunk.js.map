{"version":3,"sources":["views/departments/AddNewDepartment/AddNewDepartment.js"],"names":["AddNewDepartment","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","fetchedData","setfetchedData","refresh","errorMessage","setErrorMessage","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","userToken","JSON","parse","name_en","name_ar","company_id","upData","setUpData","useEffect","a","e","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","console","log","success","payload","message","removeItem","clear","push","fetchCompanies","handleData","target","name","value","handleAddDept","preventDefault","body","stringify","language","messages","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","required","onChange","placeholder","custom","length","map","company","id","show","onShowChange","Object","keys","item","i","block","type"],"mappings":"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","file":"static/js/56.06b1b2ce.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './AddNewDepartment.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst AddNewDepartment = () => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n\n  const [fetchedData, setfetchedData] = useState([])\n  const [refresh, setRefresh] = useState('')\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  // const userId = localStorage.getItem(\"user_id\");\n  // const user_id = JSON.parse(userId);\n\n  const [upData, setUpData] = useState({\n    name_en: '',\n    name_ar: '',\n    company_id: '',\n    // criteriaDigits: '',\n    // countryId: '',\n    // departmentAr: '',\n    // departmentEn: '',\n    // userName: '',\n    // userUserName: '',\n    // email: '',\n    // extentionNumber: '',\n    // password: '',\n    // confirmPassword: '',\n    // userPosition: '',\n    // role: '',\n    // address:''\n\n\n  })\n  const { name_en,\n    name_ar,\n    company_id\n\n  } = upData;\n\n  useEffect(async () => {\n    const fetchCompanies = async (e) => {\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}/super/companies?paginate=0`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n\n              Accept: \"application/json\",\n            },\n          }\n        );\n        const response = await responsee.json();\n        console.log(response);\n\n        if (response.success) {\n          setfetchedData(response.payload)\n        }\n\n\n        if (response.message && response.message == \"Unauthenticated.\") {\n          localStorage.removeItem(\"token\");\n          localStorage.clear()\n\n          history.push(\"/login\");\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n      // setLoading(false)\n\n\n    }\n\n    fetchCompanies()\n  }, [refresh])\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n \n\n\n \n\n\n  const handleAddDept = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    setErrorMessage('')\n    setSuccessAdd('')\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}/super/departments`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n             \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\n            'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify({\n             name_ar: name_ar,\n            name_en: name_en,\n            company_id: company_id\n     \n          })\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      console.log('response', response);\n      console.log(response);\n      setVisible(10)\n      if (response.success) {\n        await setVisible(6)\n        setSuccessAdd(i18n.language == 'ar' ? \"تمت اضافة قسم بنجاح\" : \"New Department Added Successfuly\")\n\n\n        setUpData({\n          name_ar: '',\n          name_en: '',\n          company_id:''\n        })\n      \n      }\n      else {\n\n        setVisible(10)\n        setErrorMessage(response.messages)\n\n\n      }\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center justify-content-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{i18n.language == 'ar' ? \"إضافة قسم جديد\" : \"Add New Department\"}</strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n          \n          <CButton color=\"success\"  className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n         onClick={()=>history.goBack()} >{i18n.language == 'ar' ? `رجوع` : `Back`}\n                </CButton>\n             \n          </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAddDept(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n                     \n\n                        {/* className=\"justify-content-center\" */}\n                       \n                        <CCol md='12'> <strong>{i18n.language == 'ar' ? `معلومات القسم :` : `Department Informations :`}</strong></CCol>\n                        \n                      \n<CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{i18n.language == 'ar' ? `الاسم الانكليزي` : `English Name`}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={i18n.language == 'ar' ? `الاسم الانكليزي` : `English Name`}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{i18n.language == 'ar' ? `الاسم العربي` : `Arabic Name`}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_ar\"\n                                required\n                                onChange={handleData}\n                                placeholder={i18n.language == 'ar' ? `الاسم العربي` : `Arabic Name`}\n                                value={upData.name_ar} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">\n                                {i18n.language == 'ar' ? \"الشركة\" : \"Company\"}\n                              </CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n                              <CSelect custom name=\"company_id\"\n                                required value={upData.company_id} onChange={(e) => handleData(e)}>\n                                <option value='' >\n                                  {i18n.language == 'ar' ? \"اختر شركة\" : \"Select Company\"}\n                                </option>\n                                {fetchedData.length > 0 && fetchedData.map((company) => {\n                                  return (<option value={company.id} key={company.id}>\n                                    {i18n.language == 'ar' ? company.name_ar : company.name_en}\n                                  </option>)\n                                })}\n\n                              </CSelect>\n                            </CCol>\n                          </CFormGroup>\n\n                        </CCol>\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage &&\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"danger\"\n                            // closeButton\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          >\n      {     Object.keys(errorMessage).map((item, i) => (\n        \n        <>{errorMessage[item]}<br/></>  \n           \n                     \n               \n         ))}\n                            {/* {errorMessage && errorMessage.map((item, i) => (\n\n                              <>{errorMessage[i]}<br /></>\n\n                            ))} */}\n                          </CAlert>}\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t('Save')}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\nexport default AddNewDepartment\n"],"sourceRoot":""}