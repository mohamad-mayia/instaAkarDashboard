{"version":3,"sources":["views/areas/AddNewArea/AddNewArea.js"],"names":["AddNewArea","useTranslation","t","i18n","history","useHistory","useState","visible","setVisible","refreshTokenHandler","useContext","ProfileContext","errorMessage","setErrorMessage","data","setData","succesAdd","setSuccessAdd","loading","setLoading","tokenString","localStorage","getItem","JSON","parse","country","setCountry","name_en","name_ar","upData","setUpData","handleCountry","value","a","useEffect","fetchitems","e","userToken","fetch","global","apiUrl","method","headers","Authorization","Accept","responsee","json","response","message","payload","console","log","handleData","target","name","handleAdd","preventDefault","ar","en","country_id","body","stringify","error","errors","language","className","md","lg","xl","color","onClick","goBack","xs","sm","onSubmit","row","htmlFor","custom","required","onChange","length","map","item","id","placeholder","Object","keys","i","Fragment","show","onShowChange","block","type"],"mappings":"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","file":"static/js/49.cad65dad.chunk.js","sourcesContent":["\nimport React, { useState, useEffect, useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CPagination,\n  CDataTable,\n  CSelect,\n  CFormText,\n  CTextarea,\n  CFormGroup,\n  CLabel,\n  CSwitch,\n  CInputFile,\n  CLink,\n  CFade,\n  CCollapse,\n  CBadge,\n  CRow\n} from '@coreui/react'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport CIcon from '@coreui/icons-react'\nimport './AddNewArea.scss'\n\nimport { CAlert } from '@coreui/react'\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { ProfileContext } from 'src/App'\nimport '../../../globalVar'\n// import { set } from 'core-js/core/dict'\n// import MIN_SAFE_INTEGER from 'core-js/fn/number/min-safe-integer'\nconst AddNewArea = () => {\n  const [t, i18n] = useTranslation();\n  let history = useHistory();\n  const [visible, setVisible] = useState(10)\n  const { refreshTokenHandler } = useContext(ProfileContext)\n  const [fetchedData, setfetchedData] = useState([])\n  const [refresh, setRefresh] = useState('')\n  const [errorMessage, setErrorMessage] = useState();\n  const [data, setData] = useState('')\n  const [succesAdd, setSuccessAdd] = useState()\n  const [loading, setLoading] = useState('')\n  const tokenString = localStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  const [pickedImg, setPickedImg] = useState('')\n  // const userId = localStorage.getItem(\"user_id\");\n  // const user_id = JSON.parse(userId);\n  const [country, setCountry] = useState(\"\")\n  const [upData, setUpData] = useState({\n    name_en: '',\n    name_ar: '',\n  })\n  const { name_en,\n    name_ar,\n\n  } = upData;\n  const handleCountry = async (value) => {\n    setCountry(value)\n    setErrorMessage('')\n    setSuccessAdd('')\n\n  }\n  useEffect(async () => {\n    const fetchitems = async (e) => {\n\n      const userToken = JSON.parse(localStorage.getItem(\"token\"));\n\n      try {\n        const responsee = await fetch(\n          `${global.apiUrl}api/countries`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + userToken,\n              Accept: \"application/json\",\n            },\n\n\n          }\n        );\n        const response = await responsee.json();\n        if (response.message && response.message == \"Unauthenticated.\") {\n          return refreshTokenHandler(function () { fetchitems(e) })\n        }\n\n        if (response.message && response.message == \"Success\") {\n          setData(response.payload)\n\n\n        }\n\n      } catch (err) {\n        console.log(err);\n\n      }\n\n    }\n\n    fetchitems()\n  }, [])\n\n\n\n  const handleData = (e) => {\n    setUpData({ ...upData, [e.target.name]: e.target.value })\n\n    setErrorMessage('')\n    setSuccessAdd('')\n  }\n\n\n\n\n\n\n  const handleAdd = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    const userToken = JSON.parse(localStorage.getItem(\"token\"));\n    setErrorMessage('')\n    setSuccessAdd('')\n    let data = {\n      name: { ar: name_ar, en: name_en },\n      country_id: country\n    }\n\n\n    try {\n      const responsee = await fetch(\n        `${global.apiUrl}api/areas`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + userToken,\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': 'https://localhost:3000',\n            'Access-Control-Allow-Credentials': 'true',\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify(data)\n          ,\n\n        }\n      );\n      const response = await responsee.json();\n      setVisible(10)\n      if (response.message === \"Fail\") {\n        setErrorMessage(response.error);\n        return\n\n      }\n      else if (response.errors) {\n        setErrorMessage(response.errors);\n      }\n      else if (response.message && response.message == \"Unauthenticated.\") {\n        return refreshTokenHandler(function () { handleAdd(e) })\n      }\n\n      if (response.message && response.message == \"Success\") {\n        setSuccessAdd(i18n.language === \"ar\" ? \"تم اضافة منطقة بنجاح\" : \"Area has been added successfully\")\n        setUpData({\n          name_ar: '',\n          name_en: '',\n        })\n        setCountry(\"\")\n      }\n\n\n\n    } catch (err) {\n      console.log(err);\n\n    }\n\n    setLoading(false)\n  }\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center justify-content-center register-cont\">\n\n      <CContainer>\n\n\n        <CCard className=\"\">\n\n\n\n          <CCardHeader>\n            <CRow className=\" row-gap-15\">\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className=\"justify-content-center align-self-center align-items-center place-items-center text-capitalize\">\n                <strong>{i18n.language == \"ar\" ? \"إضافة منطقة جديدة\" : \"Add New Area\"}  </strong>\n              </CCol>\n              <CCol md=\"6\" lg=\"6\" xl=\"6\" className='row-gap-15 col-gap-15'>\n                <CButton color=\"success\" className='col-lg-6  col-md-6 col-sm-12 col-xs-12 updatebtn'\n                  onClick={() => history.goBack()} >{t(\"Back\")}\n                </CButton>\n\n              </CCol>\n            </CRow>\n          </CCardHeader>\n\n          <CRow>\n            <CCol xs=\"12\" sm=\"12\" md=\"12\" className=''>\n              <CForm onSubmit={(e) => { handleAdd(e) }}>\n                <CCardBody>\n                  <CCard>\n                    <CCardBody>\n                      <CRow >\n\n\n                        {/* className=\"justify-content-center\" */}\n\n                        <CCol md='12'> <strong>{i18n.language == \"ar\" ? \"معلومات المنطقة\" : \"Area Information\"}</strong></CCol>\n                        <CCol md=\"6\"  >\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">   {t(\"Country\")}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n                              <CSelect custom name=\"category_id\"\n                                value={country} required\n                                onChange={(e) => handleCountry(e.target.value)}>\n                                <option value='' >{t(\"Select Country\")}</option>\n\n                                {data.length > 0 && data.map((item) => {\n                                  return (<option value={item.id} key={item.id}>  {item.name[i18n.language]}   </option>)\n                                })}\n\n                              </CSelect>\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{t(`English Name`)}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_en\"\n                                required\n                                onChange={handleData}\n                                placeholder={t(`English Name`)}\n                                value={upData.name_en} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CLabel htmlFor=\"text-input\">{t(`Arabic Name`)}</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"12\">\n\n                              <CInput name=\"name_ar\"\n                                required\n                                onChange={handleData}\n                                placeholder={t(`Arabic Name`)}\n                                value={upData.name_ar} />\n                            </CCol>\n                          </CFormGroup>\n                        </CCol>\n\n\n                      </CRow>\n\n\n                    </CCardBody>\n                    <CCardFooter className=\"p-4\">\n                      <CRow className=\"justify-content-center\">\n\n                        {errorMessage && typeof errorMessage === 'object' ? <CAlert color=\"danger\" className='col-lg-12'  >\n                          {Object.keys(errorMessage).map((item, i) => (\n                            <React.Fragment key={i}>{errorMessage[item]}<br /></React.Fragment >\n                          ))}\n                        </CAlert>\n                          :\n                          null}\n                        {errorMessage && typeof errorMessage === 'string' ? <CAlert color=\"danger\" className='col-lg-12'  >{errorMessage} </CAlert> : null}\n\n\n                        {succesAdd &&\n\n                          <CAlert className='col-lg-12  col-md-12 col-sm-12 col-xs-12 '\n                            color=\"success\"\n                            show={visible}\n                            // closeButton\n                            onShowChange={setVisible}\n                          // closeButton\n                          >\n                            {succesAdd}\n                          </CAlert>}\n\n                        <CCol md=\"6\" lg=\"6\" xl=\"6\" xs=\"12\" sm=\"12\" >\n                          {<CButton color=\"success\" block type='submit'>\n                            {t(\"Save\")}\n                            {loading && <>{' '}<i className=\"fa fa-spinner fa-spin\" ></i></>} </CButton>}\n                        </CCol>\n\n                      </CRow>\n                    </CCardFooter>\n                  </CCard>\n\n\n\n                </CCardBody>\n\n              </CForm>\n            </CCol>\n          </CRow>\n\n        </CCard>\n\n\n\n\n\n\n\n      </CContainer>\n    </div>\n  )\n}\n\n\n\nexport default AddNewArea\n"],"sourceRoot":""}